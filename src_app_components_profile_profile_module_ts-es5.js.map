{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAAA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA;AACA;AACA;AACA;AACA;;AACAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,SAPA;;AAQAC;AACAC;AACA;AACS,WAHT;AAIAC,0BAJA;AAKAC;AALA;AAOAH;AACAC;AACA;AACS,WAHT;AAIAC,0BAJA;AAKAC;AALA;AAOA;AACC,OA5BD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cCPA;AACA;;;AACA,sBAAiBC,SAAI,IAAIA,SAAI,UAA7B,IAA6B;AAC7B,qDACA;AAAWC;AAAX,qBAA2BC,KAA3B,IAA2B;AAAsCC;AAAkB,SADnF,IAEA;AAA0B;AAAA;AAAA;AAAA,SAF1B;;AAGA;AACAC;;AACA;AAAwB;AAAA;;AACxBD;AACA,SAJA;AAKC,OAT4B,EAA7B;AAcA;;;AACA;AACAE;AACA;;;AACA;AACA;;AACA;AACAC,mCAAmCC,yDAAnC,CAAgDC,MAAhD;AACA,WAFA,MAGA;AACAF,mCAAmCG,2DAAnC,CAAiDD,MAAjD;AACA;;AACA;AACA;AACA;;;AACAE;AACA;AACA;AACA,sCAAsCC,+CAAtC;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,SAZA;;AAaAD;AACA;AACA,SAFA;;AAGA;AACC,OA/BD,CA+BEE,mDA/BF;;;;;;;;;;;;;;;;;;;;;UCjBA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA;;AACAC;AACA;AACA,SAFA;;AAGA;AACC,OARD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCLA;AACA;;;AACA,sBAAiBb,SAAI,IAAIA,SAAI,UAA7B,IAA6B;AAC7B,qDACA;AAAWC;AAAX,qBAA2BC,KAA3B,IAA2B;AAAsCC;AAAkB,SADnF,IAEA;AAA0B;AAAA;AAAA;AAAA,SAF1B;;AAGA;AACAC;;AACA;AAAwB;AAAA;;AACxBD;AACA,SAJA;AAKC,OAT4B,EAA7B;AAUA;;;AACA;AACAE;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;;AACA;AACAC;AACAA,wCALA,CAMA;AACA;;AACAA;AACA;AACA;;AACA;AACC,OAnBD,CAmBCQ,KAnBD;AAqBA;;;AACA;AACAT;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AAAuCU;AAAA;;AACvC;;AACA;AACAT,0DALA,CAMA;AACA;;AACAA;AACA;AACA;;AACA;AACC,OAlBD,CAkBCQ,KAlBD;AAoBA;;;AACA;AACAT;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AAAuCU;AAAA;;AACvC;;AACA;AACAT,0DALA,CAMA;AACA;;AACAA;AACA;AACA;;AACA;AACC,OAlBD,CAkBCQ,KAlBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cCxDA;AACA;;AAGA;;;AACA;AACA,sCACA,CAFA,CAGA;;;AACAE;AACA,iBAAeC,wEAAuBC,gCAAvB,CAAf;AACA,SAFA;;AAGAF;AACA;AACA;AACA;;AACA,cAAY,uDAAaG,IAAb,KAAa,uDAAzB,EAAyB;AACzB;AACA;AACA,oDAAoDF,qFAApD;;AACA;AACA;AACA,aANyB,CAOzB;AACA;;;AACA;AACAG;AACAC;AACA,WAZA,MAaA;AACA;AACA,kDAAkDJ,iFAAlD;;AACA;AACA;AACA,aALA,CAMA;AACA;;;AACA;AACAG;AACAC;AACA,WA5BA,CA6BA;;;AACA,yBAAuBJ,wEAAuBG,WAAvB,CAAvB;;AACA;;AACA;AACA;AACA;;AACAE,qCAnCA,CAoCA;AACA;;AACA;AACA,SAvCA;;AAwCA;AACC,OAhDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCLA;AACA;;;AACA,qBAAgBtB,SAAI,IAAIA,SAAI,SAA5B,IAA4BJ,aAA5B,IAA4B;AAC5B,iDAA6C2B,KAA7C,EAAoDA,GAApD,EAAoD;AACpDC;;AACA;AAAA,4DACAC;AADA;AAEA;;AACA;AACA,OAPA;AAQA;;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACC,OAPD;AASA;AACA;AACA;AACA;;;AACA;AACA,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AACA;;AACAA;AACA;;AACAA;AACA;;AACAA;AACC,OAXD,EAWCA,iDAXD;AAYA;;;AACA;AACA;AACA;;AACQC,6DAAcC,UAAd,EAAc,YAAd;;AACAD,6DAAcjF,MAAd,EAAc,QAAd;;AACAiF,6DAAcE,QAAd,EAAc,UAAd;;AACR;AACA;AACA;AACA;AACA;AACA;AACA,uCAAqCC,iEAArC;;AACA;AAAsD;AAAA,WAAtD;;AACA;AAAqD;AAAA,WAArD;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAA8DC,kBAAMC;AAApE;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC;AACA;AACA,SAFA;;AAGAnG;AACA;AACAC;AACA;AACS,WAJT;AAKAC,0BALA;AAMAC;AANA;AAQAH;AACA;AACA;AACA;AACAC;AACA;AACS,WANT;AAOAC,0BAPA;AAQAC;AARA;AAUA;AACA;AACA;AACA;;AACAgG;AACA;AACA;AACA,SAHA;;AAIAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AACA;AACA,kCAAwCC,oDAAxC,EAAsD,yBAAtD;AACAtC;;AACA;AACAA;;AACA;AAAA;AAAA;;AACA;AACAA;;AACA;AACA;AACA,kCAAwCsC,oDAAxC,EAAsD,uCAAtD;AACA;AAAA;AAAA;;AACA;AACApC;AACA;AACA,kCAAwCoC,oDAAxC,EAAsD,4EAAtD;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAtBA;AAwBa,aAzBb;AA0BS,WA5BT;AA6BA,SA9BA;;AA+BAD;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACAE;AACA3F;AACAA;AACyB,mBAHzB;AAIA;AAAA;AAAA;;AACA;AACAoD;;AACAA;;AACA;AACAA;;AACAwC;AACAP,gDADA;AAEAQ;AAFA;AAIA,kCAAwCH,oDAAxC,EAAsD,4BAAtD;AACA;AAAA;AAAA;;AACA;AACAtC;;AACA,kCAAwCsC,0DAAxC,EAA4D,iDAA5D,EAFA,CAGA;;AACA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AACAtC,4BADA,CAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;;AACA;AACAG;AACA,kCAAwCmC,oDAAxC,EAAsD,uFAAtD;AACA;AACA,0CAJA,CAKA;AACA;;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACAtC;;AACA;;AACA;AAAA;AAAA;AAAA;AArDA;AAuDa,aAxDb;AAyDS,WA5DT;AA6DA,SA9DA;AA+DA;AACA;AACA;AACA;;;AACAqC;AACA;AACA;AACA;AACA;AACA;AACAK;AACA;AACA;AAAA;AAAA;;AACA;AACA1C;;AACAA;;AACA;AACAA,2CADA,CAEA;;;AACA;AAAA;AAAA;;AACA;AACA;AACAA;;AACA;AAAA;AAAA;;AACA;AACAU;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAnBA;AAqBa,aAtBb;AAuBS,WAzBT;AA0BA,SA3BA;;AA4BA2B;AACA;AACA,4BAA4BC,oDAA5B,EAA0C,oGAA1C;AACA;AACA;;AACA;AACA,4BAA4BA,oDAA5B,EAA0C,kHAA1C;AACA;AACA;;AACA;AACA,0BAAwBA,oDAAxB,EAAsC,yBAAtC;;AACA;AACA;AACA;AACA;AACA,4BAA4BA,oDAA5B,EAA0C,+DAA1C;AACAK;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,gIAvBA,CAwBA;AACA;AACA;;AACA;AACA,SA5BA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAN;AACA;;AACA;;AACA,2BAAyBhB,qBAAzB,EAAgDA,IAAhD,EAAgD;AAChDuB;AACA;;AACA;AAAA;AAAA;;AACA;AACA;AACA,4BAA0BC,6CAA1B;;AACAC;AACA;;AACA;AACA;AACA;AACa,aAFb;AAGA,WANA;;AAOA;AACA;AACAA;AACA;AACA,aAHA,MAIA;AACA;AACA,2CAA6CV,iEAA7C,EAAmE;AACnE;AACAU;AACA,iBAFA,MAGA;AACAA;AACA;AACA,eAPA,MAQA;AACAA;AACA;AACA;AACA,WAnBA;;AAoBAC,8EACA;AACAD;AACA;AACS,WAJT;AAKA;AACA;AACA,SA5CA;;AA6CAT;AACA;AACA;AACA,SAHA;AAIA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;;AACA,2BAAyBhB,qBAAzB,EAAgDA,IAAhD,EAAgD;AAChDuB;AACA;;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA,SATA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAP;AACA;;AACA;;AACA,2BAAyBhB,qBAAzB,EAAgDA,IAAhD,EAAgD;AAChDuB;AACA;;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACAhG;AACA;AACAyB;AACA;AACA,eAHA,MAIA;AACA;AACA,6CAAiD+D,iEAAjD,EAAuE;AACvE;AACA/D;AACA,mBAFA,MAGA;AACAE;AACA;AACA,iBAPA,MAQA;AACAF;AACA;AACA;AACA,aAnBA;;AAoBA,qFACA;AACAA,wBADA,CAEA;;AACA;AACa,aALb;;AAMAzB;AACS,WA7BT;AA8BA;AACA,SAvCA;AAwCA;AACA;AACA;AACA;AACA;;;AACAyF;AACA;AACA;AACA;;AACAW;;AACA;AACA;AACA,WAPA,CAQA;;;AACA;AACA;AACA;;AACA;AACA,SAbA;;AAcAX;AACA;AACA;AACA;;AACAW;AACA;;AACA;AACA;AACA;;AACA;AACA;;AACA;AACAC;;AACA;AACA;AACA;AACA;AACA,WARA,MASA;AACA;AACA;AACA,SArBA;AAsBA;AACA;AACA;AACA;;;AACAZ;AACA;AACA;AACA;AACA,SAJA;AAKA;AACA;AACA;AACA;;;AACAA;AACA;AACA;AACA;AACA,SAJA;AAKA;AACA;AACA;AACA;;;AACAA;AACA;AACA;AACA;AACA,SAJA;;AAKAA;AACA;;AACA;AACA5E;AACA;AACA,WALA,CAMA;;;AACA;AACA;AACA;;AACA,oDAAoD4D,sBAApD,EAA4EA,IAA5E,EAA4E;AAC5E;;AACA;AACA,qBAAyBe,iEAAzB;AACA;AACA;;AACA,qBAAyBA,iEAAzB;A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CAAuCA,2EAAvC,CAA6DC,4BAA7D;AACA,WAFA,MAGA;AACA;AACA;;AACA;AACA,SAdA;AAeA;AACA;AACA;AACA;;;AACAN;AACA;AACA;AACA,uEAHA,CAIA;;AACA;AACA;AACAO;AACA,WARA,CASA;;;AACA;AACA;AACA;;AACA,+BAA6BC,2DAA7B,CAA2C,QAA3C,EAA2CD,qBAA3C;AACA,iBAAeE,iEAAoBlD,UAApB,EAAoB,eAA4BmD,yDAAhD,EAAmE,qBAAuBC,6DAAvB,EAAnE,EAAyG,oBAAzG,CAAf;AACA,SAfA;;AAgBA;AACC,OA3ED;;AA6EA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;UCzHA;AACA;;AACA;;;AACO;;AACP;AACA;AACAC;AACA;;AACAA;AACA;;AACAA;AACA;;AACAA;AACA;;AACAA;AACA;;AACAA;AACA;;AACAA;AACC,OAfD,EAeCA,mCAfD;;;;;;;;;;;;;;;;;;;;;UCJA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACO;;AACP;AACA;AACAC;AACA;;AACAA;AACA;;AACAA;AACA;;AACAA;AACA;;AACAA;AACA;;AACAA;AACA;;AACAA;AACC,OAfD,EAeCA,6BAfD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRA;AACA;AACA;;AACA;;;AACO;;AACP;AACA;AACAC;AACA;;AACAA;AACA;;AACAA;AACA;;AACAA;AACC,OATD,EASCA,+CATD;AAUA;;;AACO;;AACP;AACA;AACAC;AACA;;AACAA;AACC,OALD,EAKCA,yCALD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cCjBA;AACA;;;AAMA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA,gCAA8B1F,4DAA9B;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA2F;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA3I,qBAAqB4I,yDAArB;AACA,WAVA,CAWA;;;AACA,yBAAuBC,wEAAuBC,KAAvB,CAAvB;;AACA;;AACA,kDAAgDvE,sBAAhD,EAAwEA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;AACA,SALA;;AAMA;AACC,OAfD;AAiBA;;;AACA;AACA,6BACA;;AACA9L;AACAC;AACA;AACS,WAHT;AAIAC,0BAJA;AAKAC;AALA;AAOAH;AACAC;AACA;AACS,WAHT;AAIAC,0BAJA;AAKAC;AALA;AAOAH;AACAC;AACA;AACS,WAHT;AAIAC,0BAJA;AAKAC;AALA;AAOA;AACC,OAzBD;AA2BA;;;AACO;AACP;;AACA;AACA4L;;AACA;AACAA;AACA;AACA,SALA,MAMA;AACAA;;AACA;AACAA;AACA;AACA;;AACA;AACA;AACA;;;AACO;AACP,wCADO,CAEP;;AACA;AACAC;AACA;AACAC;AACK,SAHL,EAJO,CAQP;;AACA;AACA,QACA;;AACA;;;AACO;AACP,6DACAC,8BAEAA,yDAHA;AAIA;AACA;;;AACO;AACP;AACA;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AACA;AACAzH;;AACA;AACAC,sCACAZ,uCADA,EAEAA,EAFA;AAGA;;AACAa;;AACA;AACA/D,2BAA+BwK,oDAA/B,EAA6C,qGAA7C;AACAe;AACA;AAAA;AAAA;AACAtH,kCADA;AAEAH,kCAFA;AAGAyH;AAHA;;AAKA;AACArH;AACAlE,2BAA+BwK,oDAA/B,EAA6C,mGAA7C;AACA;AAAA;AAAA;AAvBA;AAyBS,WA1BT;AA2BK,SA7BL;AA8BA;AACA;;;AACO;AACP;AACA,oCAAiCA,0DAAjC;AACA;;AACA;AACA,iBAAegB,yDAAf;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AACAC;AACA;;AACA;AACA;AACA;;AACA;AACA,iEAAgE,CAAhE;AACA;AACA,SARA;;AASA;AACC,OAfD;AAiBA;;;AACA;AACA;AACA;AACA;AACA;;AACAC;AACA;AACA;AACA,mBAAqBlB,uDAArB;AACA,mBAAqBA,oDAArB;AACA,iFAAqFA,+CAAQ1C,QAAR,CAArF,GAA6F,IAA7F,GAA6F3E,OAA7F;AACA;;AACA,mBAAqBqH,sDAArB;AACA,gFAAoFA,+CAAQ1C,QAAR,CAAp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","names":["AbortController","Object","get","enumerable","configurable","undefined","__proto__","Array","d","extendStatics","__extends","_this","_XhrHttpClient__WEBPACK_IMPORTED_MODULE_3__","logger","_NodeHttpClient__WEBPACK_IMPORTED_MODULE_2__","DefaultHttpClient","_Errors__WEBPACK_IMPORTED_MODULE_0__","_HttpClient__WEBPACK_IMPORTED_MODULE_1__","DefaultReconnectPolicy","Error","errorMessage","HandshakeProtocol","_TextMessageFormat__WEBPACK_IMPORTED_MODULE_0__","JSON","data","messageData","remainingData","responseMessage","i","s","t","HttpClient","options","method","url","step","reject","result","resolve","then","fulfilled","rejected","label","sent","trys","ops","f","y","g","next","_","value","done","op","_Utils__WEBPACK_IMPORTED_MODULE_5__","require","WebSocketModule","EventSourceModule","_DefaultHttpClient__WEBPACK_IMPORTED_MODULE_0__","HttpConnection","transferFormat","_ITransport__WEBPACK_IMPORTED_MODULE_2__","_ILogger__WEBPACK_IMPORTED_MODULE_1__","_a","message","e_1","e_2","negotiateResponse","redirects","_loop_1","accessToken_1","this_1","_LongPollingTransport__WEBPACK_IMPORTED_MODULE_3__","e_3","token","headers","_b","negotiateUrl","content","response","e_4","connectUrl","transportExceptions","transports","_i","endpoint","transport","ex_1","_WebSocketTransport__WEBPACK_IMPORTED_MODULE_6__","_ServerSentEventsTransport__WEBPACK_IMPORTED_MODULE_4__","requestedTransferFormat","error","aTag","HubConnectionState","_Utils__WEBPACK_IMPORTED_MODULE_4__","connection","protocol","_HandshakeProtocol__WEBPACK_IMPORTED_MODULE_0__","type","_IHubProtocol__WEBPACK_IMPORTED_MODULE_1__","HubConnection","_ILogger__WEBPACK_IMPORTED_MODULE_2__","handshakePromise","handshakeRequest","version","startPromise","clearTimeout","args","_Subject__WEBPACK_IMPORTED_MODULE_3__","subject","promiseQueue","methodName","handlers","callback","methods","reconnectStartTime","previousReconnectAttempts","nextRetryDelay","e","forEach","arguments","streamIds","target","invocationId","streams","complete","item","trace","_ILogger__WEBPACK_IMPORTED_MODULE_3__","debug","info","information","warn","warning","critical","none","HubConnectionBuilder","_Utils__WEBPACK_IMPORTED_MODULE_6__","logging","logLevel","transportTypeOrOptions","_DefaultReconnectPolicy__WEBPACK_IMPORTED_MODULE_0__","retryDelaysOrReconnectPolicy","httpConnectionOptions","_HttpConnection__WEBPACK_IMPORTED_MODULE_1__","_HubConnection__WEBPACK_IMPORTED_MODULE_2__","_Loggers__WEBPACK_IMPORTED_MODULE_5__","_JsonHubProtocol__WEBPACK_IMPORTED_MODULE_4__","MessageType","LogLevel","HttpTransportType","TransferFormat","JsonHubProtocol","_Loggers__WEBPACK_IMPORTED_MODULE_3__","_TextMessageFormat__WEBPACK_IMPORTED_MODULE_4__","input","_IHubProtocol__WEBPACK_IMPORTED_MODULE_0__","hubMessages","NullLogger","_AbortController__WEBPACK_IMPORTED_MODULE_0__","LongPollingTransport","_ITransport__WEBPACK_IMPORTED_MODULE_3__","pollOptions","abortSignal","timeout","pollUrl","_Errors__WEBPACK_IMPORTED_MODULE_1__","request","deleteOptions","logMessage","requestModule","jar","NodeHttpClient","httpRequest","requestBody","body","encoding","currentRequest","ServerSentEventsTransport","_Utils__WEBPACK_IMPORTED_MODULE_2__","_ITransport__WEBPACK_IMPORTED_MODULE_1__","_ILogger__WEBPACK_IMPORTED_MODULE_0__","eventSource","withCredentials","Cookie","opened","Subject","observer","_Utils__WEBPACK_IMPORTED_MODULE_0__","TextMessageFormat","messages","Arg","detail","view","str","val","responseType","_Loggers__WEBPACK_IMPORTED_MODULE_1__","SubjectSubscription","ConsoleLogger","WebSocketTransport","cookies","webSocket","XhrHttpClient","xhr","FileUploaderOneRequest","XMLHttpRequest","sendable","FormData","fakeitem","onBuildItemForm","queue","isReady","isUploading","isUploaded","isSuccess","isCancel","isError","progress","_file","size","TypeError","append","file","name","additionalParameter","keys","key","onerror","onErrorItem","status","onabort","open","length","header","setRequestHeader","authToken","authTokenHeader","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","queueLength","_onCompleteItem","send","ng2_file_upload__WEBPACK_IMPORTED_MODULE_0__","RateType","SkillType","MemberProfileResolver","accountService","router","alertiy","authService","route","userId","paramMap","has","params","loggedIn","getCurrentUserIdUsingToken","getUserProfile","pipe","navigate","_angular_core__WEBPACK_IMPORTED_MODULE_5__","factory","MessageResolver","messagesService","alertify","getLastConversations","ChatsService","http","src_environments_environment__WEBPACK_IMPORTED_MODULE_0__","baseUrl","_aspnet_signalr__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_3__","unreadMessagesBehavior","asObservable","UnUsedCodeBehavior","hubConnection","invoke","console","log","connectionId","err","withUrl","chatsUrl","getRequestOptions","configureLogging","withAutomaticReconnect","build","start","isConnected","invokeConnectionId","auth_token","localStorage","getItem","src_app_helpers_db_keys__WEBPACK_IMPORTED_MODULE_2__","Headers","accessTokenFactory","groupName","invokeJoinGroup","on","setTimeout","_angular_core__WEBPACK_IMPORTED_MODULE_4__","providedIn","MessagesService","senderId","messageId","query","_utilities_service__WEBPACK_IMPORTED_MODULE_1__","recipientId","currentUserId","targetUserId","post","subscribe","id","_angular_core__WEBPACK_IMPORTED_MODULE_2__","EducationDegreesService","educationDegreesUrl","_angular_core__WEBPACK_IMPORTED_MODULE_1__","HobbiesService","hobbiesUrl","LanguagesService","languagesUrl","MajorsService","majorsUrl","UniversitiesService","universitiesUrl","BusinessAccountsService","businessAccountsUrl","updatedBusinessAccount","put","PortfoliosService","newPortfolio","portfoliosUrl","uploadURL","_angular_common_http__WEBPACK_IMPORTED_MODULE_3__","reportProgress","observe","event","Math","round","loaded","total","src_app_helpers_uploader_uploadHandlerResult__WEBPACK_IMPORTED_MODULE_1__","updatedPortfolio","_utilities_service__WEBPACK_IMPORTED_MODULE_2__","portfolioId","photoId","VisitorAccountsService","visitorAccountsUrl","updatedAccount","BusinessAccountBalanceComponent","jobOffersService","loadAccountBalance","getCurrentAccountJobOffersBalance","accountBalance","changeTab","emit","selectors","inputs","isCurrentUserProfile","isShortDetails","outputs","decls","vars","consts","template","BusinessAccountDetailsComponent","accountData","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_15__","ctx_r13","_r12","BusinessAccountProfileComponent","userService","appTranslation","userProfile","checkIfCurrentUserCanStartChat","checkIfCurrentUserCanStartChatWithTheOtherUser","currentUser","isCurrentUserCanStartConversationWithThisUser","conversationNotAllowed","tabContent","chatboxTab","nativeElement","click","accountBalanceTab","scrollIntoView","viewQuery","ctx","BusinessCountersComponent","encapsulation","_angular_core__WEBPACK_IMPORTED_MODULE_6__","EditBusinessAccountComponent","formBuilder","locationsService","businessAccountsService","initEdtForm","loadCitiesList","getCitiesList","citiesList","edtBusinessAccountForm","group","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","arFullName","fullName","enFullName","src_app_helpers_RegularExpression_RegularExpression__WEBPACK_IMPORTED_MODULE_0__","cityId","address","businessAccountData","about","_c","vision","_d","_e","instagram","socialMediaAccounts","_f","linkedin","_g","twitter","_h","facebook","_j","businessAccount","patchValue","controls","valid","isSubmitting","disable","updateBusinessAccount","success","enable","markAllAsTouched","_angular_core__WEBPACK_IMPORTED_MODULE_16__","EditJobsSearcherComponent","hobbiesService","skillsService","languagesService","jobCategoriesService","educationDegreesService","majorsService","universitiesService","studentAccountsService","src_app_models_Users_user_for_register__WEBPACK_IMPORTED_MODULE_1__","studentAccount","getAllDefualtsValues","maxDate","src_app_helpers_date_and_time_hijri_calender_service__WEBPACK_IMPORTED_MODULE_3__","getHobbiesAsList","getSkillsAsList","getLanguagesAsList","getEducationDegreesAsList","getCertificatesAsList","getMajorsAsList","getUniversitiesAsList","getJobCategoriesAsList","locations","hobbies","skills","languages","educationDegrees","certificates","majors","universities","jobCategories","citiesOptions","hobbiesOptions","generalSkillsOptions","filter","src_app_models_Users_user_skill__WEBPACK_IMPORTED_MODULE_2__","personalSkillsOptions","languagesOptions","jobCategoriesOptions","universitiesOptions","certificatesOptions","educationDegreesOptions","majorsOptions","isLoadingOptions","onChangeLoadSubMajors","selectedMajor","majorId","onChangeLoadEducationLevels","selectedEducationsDegree","educationDegreeId","enableAllControls","edtStudentAccountForm","generalSkills","personalSkills","_angular_forms__WEBPACK_IMPORTED_MODULE_18__","arFirstName","firstName","arLastName","lastName","gender","disabled","birthDay","socialStatus","studentAccountData","_k","dayAvailability","_l","_m","interestsJobs","_o","universityId","_p","_q","certificateId","_r","certificate","_s","educationsDegreeId","_t","_u","educationLevelId","_v","_w","_x","_y","subMajorId","_z","_0","_1","_2","_3","_4","_5","_6","_7","_8","educationLevel","subMajor","eduDegreeId","educationLevelsOptions","find","ed","childs","subMajorsOptions","findInvalidControls","updatedStudentAccount","assign","updateStudentAccount","invalid","push","_r6","EducationDetailsComponent","JobInterestsComponent","userJobInterests","_r1","JobsSearcherCountersComponent","_angular_core__WEBPACK_IMPORTED_MODULE_21__","ctx_r10","_r9","JobsSearcherProfileComponent","src_app_models_Users_user_for_register__WEBPACK_IMPORTED_MODULE_0__","GeneralSkillsComponent","UserSkills","HoppiesComponent","UserHoppies","PersonalSkillsComponent","routes","path","component","_profile_component__WEBPACK_IMPORTED_MODULE_2__","user","src_app_resolvers_Users_member_profile_resolver__WEBPACK_IMPORTED_MODULE_0__","_shared_chats_messages_list_messages_list_component__WEBPACK_IMPORTED_MODULE_7__","messagesList","src_app_resolvers_chats_message_resolver__WEBPACK_IMPORTED_MODULE_8__","_business_edit_business_account_edit_business_account_component__WEBPACK_IMPORTED_MODULE_3__","_resolvers_edit_member_profile_resolver__WEBPACK_IMPORTED_MODULE_1__","_jobs_searcher_edit_jobs_searcher_edit_jobs_searcher_component__WEBPACK_IMPORTED_MODULE_4__","_taskers_modify_tasker_profile_modify_tasker_profile_component__WEBPACK_IMPORTED_MODULE_5__","_visitor_modify_visitor_profile_modify_visitor_profile_component__WEBPACK_IMPORTED_MODULE_11__","_taskers_portfolios_create_portfolio_create_portfolio_component__WEBPACK_IMPORTED_MODULE_6__","_taskers_portfolios_portfolio_details_portfolio_details_component__WEBPACK_IMPORTED_MODULE_9__","_taskers_portfolios_modify_portfolio_modify_portfolio_component__WEBPACK_IMPORTED_MODULE_10__","ProfileRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_13__","imports","exports","_angular_core__WEBPACK_IMPORTED_MODULE_9__","ProfileComponent","accountType","ProfileModule","src_app_resolvers_Users_member_profile_resolver__WEBPACK_IMPORTED_MODULE_3__","src_app_services_users_business_accounts_service__WEBPACK_IMPORTED_MODULE_2__","_resolvers_edit_member_profile_resolver__WEBPACK_IMPORTED_MODULE_4__","src_app_resolvers_chats_message_resolver__WEBPACK_IMPORTED_MODULE_5__","_jobs_services_job_offers_service__WEBPACK_IMPORTED_MODULE_6__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_0__","_profile_routing_module__WEBPACK_IMPORTED_MODULE_1__","declarations","_profile_component__WEBPACK_IMPORTED_MODULE_7__","_shared_personal_details_personal_details_component__WEBPACK_IMPORTED_MODULE_10__","_shared_language_skills_language_skills_component__WEBPACK_IMPORTED_MODULE_11__","_jobs_searcher_skills_personal_skills_personal_skills_component__WEBPACK_IMPORTED_MODULE_12__","_jobs_searcher_skills_general_skills_general_skills_component__WEBPACK_IMPORTED_MODULE_13__","_shared_member_contact_member_contact_component__WEBPACK_IMPORTED_MODULE_8__","_jobs_searcher_skills_hoppies_hoppies_component__WEBPACK_IMPORTED_MODULE_14__","_jobs_searcher_education_details_education_details_component__WEBPACK_IMPORTED_MODULE_15__","_shared_member_contact_social_media_social_media_component__WEBPACK_IMPORTED_MODULE_9__","_business_business_account_profile_business_account_profile_component__WEBPACK_IMPORTED_MODULE_16__","_business_business_account_details_business_account_details_component__WEBPACK_IMPORTED_MODULE_17__","_jobs_searcher_jobs_searcher_profile_jobs_searcher_profile_component__WEBPACK_IMPORTED_MODULE_18__","_shared_profile_stars_profile_stars_component__WEBPACK_IMPORTED_MODULE_19__","_shared_profile_image_profile_image_component__WEBPACK_IMPORTED_MODULE_20__","_business_edit_business_account_edit_business_account_component__WEBPACK_IMPORTED_MODULE_21__","_shared_since_profile_since_profile_component__WEBPACK_IMPORTED_MODULE_22__","_business_business_counters_business_counters_component__WEBPACK_IMPORTED_MODULE_23__","_jobs_searcher_jobs_searcher_counters_jobs_searcher_counters_component__WEBPACK_IMPORTED_MODULE_24__","_jobs_searcher_edit_jobs_searcher_edit_jobs_searcher_component__WEBPACK_IMPORTED_MODULE_25__","_jobs_searcher_job_interests_job_interests_component__WEBPACK_IMPORTED_MODULE_26__","_taskers_portfolios_portfolios_list_portfolios_list_component__WEBPACK_IMPORTED_MODULE_28__","_taskers_portfolios_portfolio_details_portfolio_details_component__WEBPACK_IMPORTED_MODULE_29__","_taskers_portfolios_create_portfolio_create_portfolio_component__WEBPACK_IMPORTED_MODULE_30__","_taskers_tasker_profile_tasker_profile_component__WEBPACK_IMPORTED_MODULE_27__","_taskers_modify_tasker_profile_modify_tasker_profile_component__WEBPACK_IMPORTED_MODULE_31__","_taskers_user_tasks_user_tasks_list_user_tasks_list_component__WEBPACK_IMPORTED_MODULE_32__","_taskers_user_tasks_new_user_task_modal_new_user_task_modal_component__WEBPACK_IMPORTED_MODULE_33__","_shared_chats_messages_list_messages_list_component__WEBPACK_IMPORTED_MODULE_34__","_shared_chats_conversation_box_conversation_box_component__WEBPACK_IMPORTED_MODULE_35__","_shared_ratings_history_ratings_history_component__WEBPACK_IMPORTED_MODULE_36__","_shared_user_activity_user_activity_component__WEBPACK_IMPORTED_MODULE_37__","_taskers_user_tasks_modify_my_task_modify_my_task_component__WEBPACK_IMPORTED_MODULE_38__","_taskers_portfolios_modify_portfolio_modify_portfolio_component__WEBPACK_IMPORTED_MODULE_39__","_visitor_visitor_profile_visitor_profile_component__WEBPACK_IMPORTED_MODULE_40__","_visitor_modify_visitor_profile_modify_visitor_profile_component__WEBPACK_IMPORTED_MODULE_41__","_shared_ratings_rating_and_reviews_list_rating_and_reviews_list_component__WEBPACK_IMPORTED_MODULE_42__","_shared_ratings_rating_row_details_rating_row_details_component__WEBPACK_IMPORTED_MODULE_43__","_shared_change_user_password_change_user_password_component__WEBPACK_IMPORTED_MODULE_44__","_business_business_account_balance_business_account_balance_component__WEBPACK_IMPORTED_MODULE_45__","EditMemberProfileResolver","getUserProfileForEdit","ChangeUserPasswordComponent","initCreateForm","changeUserPasswordForm","currentPassword","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","newPassword","changeUserPassword","changeCurrentUserPassword","returnMessage","updatedSuccessfully","closeModal","_angular_core__WEBPACK_IMPORTED_MODULE_8__","_r7","_r13","ConversationBoxComponent","chatsService","scrollTopChatBoxPanel","conversationPanel","scrollTop","scrollHeight","off","conversationMessages","messageRead","messageIndex","findIndex","c","dateRead","isRead","changes","initConversationMessages","loadConversationMessages","recipientGender","markAsRead","getCurrentConversationId","startJoinGroupHubConnection","toString","getConversation","reverse","isLoadingConversation","getUnreadCount","unreadCount","res","newMessage","sendMessage","_r3","MessagesListComponent","pageSize","PAGE_SIZE","getScreenSize","screenHeight","window","innerHeight","screenWidth","innerWidth","isMobile","mobileWidth","conversation","selectedConversation","toggleMobile","messagesItems","items","mesaagesQuery","pagination","entityCaption","initUpdateListenerMessages","registeringCurrentUserToHubConnection","updateingChatBoxMessages","conversationId","conversationIndex","sort","a","b","Date","messageSent","unshift","getPagedMessages","getWithValue","pageNumber","getAllMessages","filterText","resetFilter","columnName","sortBy","isSortAscending","page","currentConversation","lastMessage","recipientPhotoUrl","senderPhotoUrl","recipientKnownAs","senderKnownAs","hostBindings","LanguageSkillsComponent","userLanguages","MemberContactComponent","SocialMediaComponent","_r2","PersonalDetailsComponent","taskerAccountData","ctx_r0","ProfileImageComponent","currentPhotoUrl","photoUrl","photoURL","files","maxFileSize","allowTypeToUpload","fn","trim","toLowerCase","alert","allowTypeToUploadNames","join","startUploadProfilePhoto","formData","updateProfilePhoto","uploadResponse","returnPhoto","refreshUserProfilePhoto","addSuccessfully","ProfileStarsComponent","rating","RatingsHistoryComponent","RatingAndReviewsListComponent","ratingsAndReviews","RatingRowDetailsComponent","src_app_models_Users_rating_and_review__WEBPACK_IMPORTED_MODULE_0__","parse","ratingAndReview","details","SinceProfileComponent","createdDate","lastActive","UserActivityComponent","ModifyTaskerProfileComponent","taskerAccountsService","taskerAccount","src_app_helpers_date_and_time_hijri_calender_service__WEBPACK_IMPORTED_MODULE_2__","edtTaskerAccountForm","_angular_forms__WEBPACK_IMPORTED_MODULE_11__","updatedTaskerAccount","updateTaskerAccount","_angular_core__WEBPACK_IMPORTED_MODULE_7__","item_r11","CreatePortfolioComponent","portfoliosService","initializeUploader","initAddForm","addPortfolioForm","title","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","description","uploader","uploadAllFiles","queueLimit","src_app_helpers_uploader_FileUploader__WEBPACK_IMPORTED_MODULE_2__","itemAlias","isHTML5","allowedFileType","removeAfterUpload","autoUpload","onAfterAddingFile","fileItem","form","src_app_services_utilities_service__WEBPACK_IMPORTED_MODULE_0__","Response","onProgressItem","onProgressAll","onSuccessItem","returnPortfolio","onCompleteAll","reset","onWhenAddingFileFailed","hasBaseDropZoneOver","photos","getMemberPhotoChange","_angular_core__WEBPACK_IMPORTED_MODULE_10__","photo_r11","item_r17","ctx_r24","ctx_r26","ctx_r27","ctx_r2","ModifyPortfolioComponent","appTitle","initeditForm","getPortfolio","portfolio","editPortfolioForm","imageName","location","href","updatePortfolio","src_app_helpers_uploader_FileUploader__WEBPACK_IMPORTED_MODULE_0__","src_app_services_utilities_service__WEBPACK_IMPORTED_MODULE_2__","photo","setMainPhoto","currentMainPhoto","p","isMain","confirm","deletePhoto","splice","PortfolioDetailsComponent","PortfoliosListComponent","userPortfolios","_angular_core__WEBPACK_IMPORTED_MODULE_19__","ctx_r11","_r10","TaskerProfileComponent","ModifyMyTaskComponent","userTasksService","activeModal","edtUserTaskForm","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","price","isEnabled","userTask","updateUserTask","returnUserTask","NewUserTaskModalComponent","tasksService","getAllTasks","getTasksAsList","list","tasksList","addUserTaskForm","taskId","newItem","addNew","UserTasksListComponent","modalService","align","checkboxInput","changeUserTaskStatus","currentTarget","checked","promisifyConfirm","src_app_helpers_Alertify__WEBPACK_IMPORTED_MODULE_0__","removeUserTask","userTasks","popover","vUserTask","isOpen","close","placement","config","backdrop","keyboard","addModalRef","_new_user_task_modal_new_user_task_modal_component__WEBPACK_IMPORTED_MODULE_1__","componentInstance","newUserTask","addNewUserTaskToUserTasksList","currentUserTask","getUserTask","showUserTaskEditModal","apiUserTask","edtModalRef","_modify_my_task_modify_my_task_component__WEBPACK_IMPORTED_MODULE_2__","updatedUserTask","applyChangedUserTask","orderModalRef","src_app_components_tasks_order_tasker_modal_order_tasker_modal_component__WEBPACK_IMPORTED_MODULE_3__","cityName","orderSuccessfully","ModifyVisitorProfileComponent","visitorAccountsService","src_app_models_Users_user_for_register__WEBPACK_IMPORTED_MODULE_2__","src_app_helpers_date_and_time_hijri_calender_service__WEBPACK_IMPORTED_MODULE_0__","visitorAccount","edtVisitorAccountForm","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","src_app_helpers_RegularExpression_RegularExpression__WEBPACK_IMPORTED_MODULE_1__","updatedVisitorAccount","updateVisitorAccount","VisitorProfileComponent"],"sources":["webpack:///node_modules/@aspnet/signalr/dist/esm/AbortController.js","webpack:///node_modules/@aspnet/signalr/dist/esm/DefaultHttpClient.js","webpack:///node_modules/@aspnet/signalr/dist/esm/DefaultReconnectPolicy.js","webpack:///node_modules/@aspnet/signalr/dist/esm/Errors.js","webpack:///node_modules/@aspnet/signalr/dist/esm/HandshakeProtocol.js","webpack:///node_modules/@aspnet/signalr/dist/esm/HttpClient.js","webpack:///node_modules/@aspnet/signalr/dist/esm/HttpConnection.js","webpack:///node_modules/@aspnet/signalr/dist/esm/HubConnection.js","webpack:///node_modules/@aspnet/signalr/dist/esm/HubConnectionBuilder.js","webpack:///node_modules/@aspnet/signalr/dist/esm/IHubProtocol.js","webpack:///node_modules/@aspnet/signalr/dist/esm/ILogger.js","webpack:///node_modules/@aspnet/signalr/dist/esm/ITransport.js","webpack:///node_modules/@aspnet/signalr/dist/esm/JsonHubProtocol.js","webpack:///node_modules/@aspnet/signalr/dist/esm/Loggers.js","webpack:///node_modules/@aspnet/signalr/dist/esm/LongPollingTransport.js","webpack:///node_modules/@aspnet/signalr/dist/esm/NodeHttpClient.js","webpack:///node_modules/@aspnet/signalr/dist/esm/ServerSentEventsTransport.js","webpack:///node_modules/@aspnet/signalr/dist/esm/Subject.js","webpack:///node_modules/@aspnet/signalr/dist/esm/TextMessageFormat.js","webpack:///node_modules/@aspnet/signalr/dist/esm/Utils.js","webpack:///node_modules/@aspnet/signalr/dist/esm/WebSocketTransport.js","webpack:///node_modules/@aspnet/signalr/dist/esm/XhrHttpClient.js","webpack:///node_modules/@aspnet/signalr/dist/esm/index.js","webpack:///src/app/_helpers/uploader/FileUploader.ts","webpack:///src/app/_models/Users/rating-and-review.ts","webpack:///src/app/_models/Users/user-skill.ts","webpack:///src/app/_resolvers/Users/member-profile.resolver.ts","webpack:///src/app/_resolvers/chats/message.resolver.ts","webpack:///src/app/_services/chats/chats.service.ts","webpack:///src/app/_services/chats/messages.service.ts","webpack:///src/app/_services/settings/education-degrees.service.ts","webpack:///src/app/_services/settings/hobbies.service.ts","webpack:///src/app/_services/settings/languages.service.ts","webpack:///src/app/_services/settings/majors.service.ts","webpack:///src/app/_services/settings/universities.service.ts","webpack:///src/app/_services/users/business-accounts.service.ts","webpack:///src/app/_services/users/portfolios.service.ts","webpack:///src/app/_services/users/visitor-accounts.service.ts","webpack:///src/app/components/profile/business/business-account-balance/business-account-balance.component.html","webpack:///src/app/components/profile/business/business-account-balance/business-account-balance.component.ts","webpack:///src/app/components/profile/business/business-account-details/business-account-details.component.ts","webpack:///src/app/components/profile/business/business-account-details/business-account-details.component.html","webpack:///src/app/components/profile/business/business-account-profile/business-account-profile.component.html","webpack:///src/app/components/profile/business/business-account-profile/business-account-profile.component.ts","webpack:///src/app/components/profile/business/business-counters/business-counters.component.ts","webpack:///src/app/components/profile/business/edit-business-account/edit-business-account.component.html","webpack:///src/app/components/profile/business/edit-business-account/edit-business-account.component.ts","webpack:///src/app/components/profile/jobs-searcher/edit-jobs-searcher/edit-jobs-searcher.component.html","webpack:///src/app/components/profile/jobs-searcher/edit-jobs-searcher/edit-jobs-searcher.component.ts","webpack:///src/app/components/profile/jobs-searcher/education-details/education-details.component.ts","webpack:///src/app/components/profile/jobs-searcher/education-details/education-details.component.html","webpack:///src/app/components/profile/jobs-searcher/job-interests/job-interests.component.html","webpack:///src/app/components/profile/jobs-searcher/job-interests/job-interests.component.ts","webpack:///src/app/components/profile/jobs-searcher/jobs-searcher-counters/jobs-searcher-counters.component.ts","webpack:///src/app/components/profile/jobs-searcher/jobs-searcher-profile/jobs-searcher-profile.component.html","webpack:///src/app/components/profile/jobs-searcher/jobs-searcher-profile/jobs-searcher-profile.component.ts","webpack:///src/app/components/profile/jobs-searcher/skills/general-skills/general-skills.component.html","webpack:///src/app/components/profile/jobs-searcher/skills/general-skills/general-skills.component.ts","webpack:///src/app/components/profile/jobs-searcher/skills/hoppies/hoppies.component.html","webpack:///src/app/components/profile/jobs-searcher/skills/hoppies/hoppies.component.ts","webpack:///src/app/components/profile/jobs-searcher/skills/personal-skills/personal-skills.component.html","webpack:///src/app/components/profile/jobs-searcher/skills/personal-skills/personal-skills.component.ts","webpack:///src/app/components/profile/profile-routing.module.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.module.ts","webpack:///src/app/components/profile/resolvers/edit-member-profile.resolver.ts","webpack:///src/app/components/profile/shared/change-user-password/change-user-password.component.html","webpack:///src/app/components/profile/shared/change-user-password/change-user-password.component.ts","webpack:///src/app/components/profile/shared/chats/conversation-box/conversation-box.component.html","webpack:///src/app/components/profile/shared/chats/conversation-box/conversation-box.component.ts","webpack:///src/app/components/profile/shared/chats/messages-list/messages-list.component.html","webpack:///src/app/components/profile/shared/chats/messages-list/messages-list.component.ts","webpack:///src/app/components/profile/shared/language-skills/language-skills.component.html","webpack:///src/app/components/profile/shared/language-skills/language-skills.component.ts","webpack:///src/app/components/profile/shared/member-contact/member-contact.component.ts","webpack:///src/app/components/profile/shared/member-contact/member-contact.component.html","webpack:///src/app/components/profile/shared/member-contact/social-media/social-media.component.html","webpack:///src/app/components/profile/shared/member-contact/social-media/social-media.component.ts","webpack:///src/app/components/profile/shared/personal-details/personal-details.component.html","webpack:///src/app/components/profile/shared/personal-details/personal-details.component.ts","webpack:///src/app/components/profile/shared/profile-image/profile-image.component.html","webpack:///src/app/components/profile/shared/profile-image/profile-image.component.ts","webpack:///src/app/components/profile/shared/profile-stars/profile-stars.component.html","webpack:///src/app/components/profile/shared/profile-stars/profile-stars.component.ts","webpack:///src/app/components/profile/shared/ratings-history/ratings-history.component.ts","webpack:///src/app/components/profile/shared/ratings-history/ratings-history.component.html","webpack:///src/app/components/profile/shared/ratings/rating-and-reviews-list/rating-and-reviews-list.component.html","webpack:///src/app/components/profile/shared/ratings/rating-and-reviews-list/rating-and-reviews-list.component.ts","webpack:///src/app/components/profile/shared/ratings/rating-row-details/rating-row-details.component.html","webpack:///src/app/components/profile/shared/ratings/rating-row-details/rating-row-details.component.ts","webpack:///src/app/components/profile/shared/since-profile/since-profile.component.html","webpack:///src/app/components/profile/shared/since-profile/since-profile.component.ts","webpack:///src/app/components/profile/shared/user-activity/user-activity.component.ts","webpack:///src/app/components/profile/shared/user-activity/user-activity.component.html","webpack:///src/app/components/profile/taskers/modify-tasker-profile/modify-tasker-profile.component.html","webpack:///src/app/components/profile/taskers/modify-tasker-profile/modify-tasker-profile.component.ts","webpack:///src/app/components/profile/taskers/portfolios/create-portfolio/create-portfolio.component.html","webpack:///src/app/components/profile/taskers/portfolios/create-portfolio/create-portfolio.component.ts","webpack:///src/app/components/profile/taskers/portfolios/modify-portfolio/modify-portfolio.component.html","webpack:///src/app/components/profile/taskers/portfolios/modify-portfolio/modify-portfolio.component.ts","webpack:///src/app/components/profile/taskers/portfolios/portfolio-details/portfolio-details.component.html","webpack:///src/app/components/profile/taskers/portfolios/portfolio-details/portfolio-details.component.ts","webpack:///src/app/components/profile/taskers/portfolios/portfolios-list/portfolios-list.component.html","webpack:///src/app/components/profile/taskers/portfolios/portfolios-list/portfolios-list.component.ts","webpack:///src/app/components/profile/taskers/tasker-profile/tasker-profile.component.html","webpack:///src/app/components/profile/taskers/tasker-profile/tasker-profile.component.ts","webpack:///src/app/components/profile/taskers/user-tasks/modify-my-task/modify-my-task.component.html","webpack:///src/app/components/profile/taskers/user-tasks/modify-my-task/modify-my-task.component.ts","webpack:///src/app/components/profile/taskers/user-tasks/new-user-task-modal/new-user-task-modal.component.html","webpack:///src/app/components/profile/taskers/user-tasks/new-user-task-modal/new-user-task-modal.component.ts","webpack:///src/app/components/profile/taskers/user-tasks/user-tasks-list/user-tasks-list.component.html","webpack:///src/app/components/profile/taskers/user-tasks/user-tasks-list/user-tasks-list.component.ts","webpack:///src/app/components/profile/visitor/modify-visitor-profile/modify-visitor-profile.component.html","webpack:///src/app/components/profile/visitor/modify-visitor-profile/modify-visitor-profile.component.ts","webpack:///src/app/components/profile/visitor/visitor-profile/visitor-profile.component.html","webpack:///src/app/components/profile/visitor/visitor-profile/visitor-profile.component.ts"],"sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nvar AbortController = /** @class */ (function () {\r\n    function AbortController() {\r\n        this.isAborted = false;\r\n        this.onabort = null;\r\n    }\r\n    AbortController.prototype.abort = function () {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(AbortController.prototype, \"signal\", {\r\n        get: function () {\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbortController.prototype, \"aborted\", {\r\n        get: function () {\r\n            return this.isAborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AbortController;\r\n}());\r\nexport { AbortController };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { AbortError } from \"./Errors\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { NodeHttpClient } from \"./NodeHttpClient\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n/** Default implementation of {@link @aspnet/signalr.HttpClient}. */\r\nvar DefaultHttpClient = /** @class */ (function (_super) {\r\n    __extends(DefaultHttpClient, _super);\r\n    /** Creates a new instance of the {@link @aspnet/signalr.DefaultHttpClient}, using the provided {@link @aspnet/signalr.ILogger} to log messages. */\r\n    function DefaultHttpClient(logger) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof XMLHttpRequest !== \"undefined\") {\r\n            _this.httpClient = new XhrHttpClient(logger);\r\n        }\r\n        else {\r\n            _this.httpClient = new NodeHttpClient(logger);\r\n        }\r\n        return _this;\r\n    }\r\n    /** @inheritDoc */\r\n    DefaultHttpClient.prototype.send = function (request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return this.httpClient.send(request);\r\n    };\r\n    DefaultHttpClient.prototype.getCookieString = function (url) {\r\n        return this.httpClient.getCookieString(url);\r\n    };\r\n    return DefaultHttpClient;\r\n}(HttpClient));\r\nexport { DefaultHttpClient };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nvar DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n/** @private */\r\nvar DefaultReconnectPolicy = /** @class */ (function () {\r\n    function DefaultReconnectPolicy(retryDelays) {\r\n        this.retryDelays = retryDelays !== undefined ? retryDelays.concat([null]) : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n    DefaultReconnectPolicy.prototype.nextRetryDelayInMilliseconds = function (previousRetryCount) {\r\n        return this.retryDelays[previousRetryCount];\r\n    };\r\n    return DefaultReconnectPolicy;\r\n}());\r\nexport { DefaultReconnectPolicy };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/** Error thrown when an HTTP request fails. */\r\nvar HttpError = /** @class */ (function (_super) {\r\n    __extends(HttpError, _super);\r\n    /** Constructs a new instance of {@link @aspnet/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    function HttpError(errorMessage, statusCode) {\r\n        var _newTarget = this.constructor;\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        _this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return HttpError;\r\n}(Error));\r\nexport { HttpError };\r\n/** Error thrown when a timeout elapses. */\r\nvar TimeoutError = /** @class */ (function (_super) {\r\n    __extends(TimeoutError, _super);\r\n    /** Constructs a new instance of {@link @aspnet/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    function TimeoutError(errorMessage) {\r\n        var _newTarget = this.constructor;\r\n        if (errorMessage === void 0) { errorMessage = \"A timeout occurred.\"; }\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return TimeoutError;\r\n}(Error));\r\nexport { TimeoutError };\r\n/** Error thrown when an action is aborted. */\r\nvar AbortError = /** @class */ (function (_super) {\r\n    __extends(AbortError, _super);\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    function AbortError(errorMessage) {\r\n        var _newTarget = this.constructor;\r\n        if (errorMessage === void 0) { errorMessage = \"An abort occurred.\"; }\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return AbortError;\r\n}(Error));\r\nexport { AbortError };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nvar HandshakeProtocol = /** @class */ (function () {\r\n    function HandshakeProtocol() {\r\n    }\r\n    // Handshake request is always JSON\r\n    HandshakeProtocol.prototype.writeHandshakeRequest = function (handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    };\r\n    HandshakeProtocol.prototype.parseHandshakeResponse = function (data) {\r\n        var responseMessage;\r\n        var messageData;\r\n        var remainingData;\r\n        if (isArrayBuffer(data) || (typeof Buffer !== \"undefined\" && data instanceof Buffer)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            var binaryData = new Uint8Array(data);\r\n            var separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            var textData = data;\r\n            var separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        var messages = TextMessageFormat.parse(messageData);\r\n        var response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        responseMessage = response;\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    };\r\n    return HandshakeProtocol;\r\n}());\r\nexport { HandshakeProtocol };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n/** Represents an HTTP response. */\r\nvar HttpResponse = /** @class */ (function () {\r\n    function HttpResponse(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n    return HttpResponse;\r\n}());\r\nexport { HttpResponse };\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nvar HttpClient = /** @class */ (function () {\r\n    function HttpClient() {\r\n    }\r\n    HttpClient.prototype.get = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"GET\", url: url }));\r\n    };\r\n    HttpClient.prototype.post = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"POST\", url: url }));\r\n    };\r\n    HttpClient.prototype.delete = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"DELETE\", url: url }));\r\n    };\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    HttpClient.prototype.getCookieString = function (url) {\r\n        return \"\";\r\n    };\r\n    return HttpClient;\r\n}());\r\nexport { HttpClient };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nvar MAX_REDIRECTS = 100;\r\nvar WebSocketModule = null;\r\nvar EventSourceModule = null;\r\nif (Platform.isNode && typeof require !== \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    var requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    WebSocketModule = requireFunc(\"ws\");\r\n    EventSourceModule = requireFunc(\"eventsource\");\r\n}\r\n/** @private */\r\nvar HttpConnection = /** @class */ (function () {\r\n    function HttpConnection(url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.features = {};\r\n        Arg.isRequired(url, \"url\");\r\n        this.logger = createLogger(options.logger);\r\n        this.baseUrl = this.resolveUrl(url);\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent || false;\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        }\r\n        else if (Platform.isNode && !options.WebSocket) {\r\n            if (WebSocketModule) {\r\n                options.WebSocket = WebSocketModule;\r\n            }\r\n        }\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        }\r\n        else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof EventSourceModule !== \"undefined\") {\r\n                options.EventSource = EventSourceModule;\r\n            }\r\n        }\r\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\r\n        this.connectionState = \"Disconnected\" /* Disconnected */;\r\n        this.connectionStarted = false;\r\n        this.options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    HttpConnection.prototype.start = function (transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var message, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        transferFormat = transferFormat || TransferFormat.Binary;\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.logger.log(LogLevel.Debug, \"Starting connection with transfer format '\" + TransferFormat[transferFormat] + \"'.\");\r\n                        if (this.connectionState !== \"Disconnected\" /* Disconnected */) {\r\n                            return [2 /*return*/, Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"))];\r\n                        }\r\n                        this.connectionState = \"Connecting \" /* Connecting */;\r\n                        this.startInternalPromise = this.startInternal(transferFormat);\r\n                        return [4 /*yield*/, this.startInternalPromise];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (!(this.connectionState === \"Disconnecting\" /* Disconnecting */)) return [3 /*break*/, 3];\r\n                        message = \"Failed to start the HttpConnection before stop() was called.\";\r\n                        this.logger.log(LogLevel.Error, message);\r\n                        // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n                        return [4 /*yield*/, this.stopPromise];\r\n                    case 2:\r\n                        // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n                        _a.sent();\r\n                        return [2 /*return*/, Promise.reject(new Error(message))];\r\n                    case 3:\r\n                        if (this.connectionState !== \"Connected\" /* Connected */) {\r\n                            message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n                            this.logger.log(LogLevel.Error, message);\r\n                            return [2 /*return*/, Promise.reject(new Error(message))];\r\n                        }\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        this.connectionStarted = true;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.send = function (data) {\r\n        if (this.connectionState !== \"Connected\" /* Connected */) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n        // Transport will not be null if state is connected\r\n        return this.transport.send(data);\r\n    };\r\n    HttpConnection.prototype.stop = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.connectionState === \"Disconnected\" /* Disconnected */) {\r\n                            this.logger.log(LogLevel.Debug, \"Call to HttpConnection.stop(\" + error + \") ignored because the connection is already in the disconnected state.\");\r\n                            return [2 /*return*/, Promise.resolve()];\r\n                        }\r\n                        if (this.connectionState === \"Disconnecting\" /* Disconnecting */) {\r\n                            this.logger.log(LogLevel.Debug, \"Call to HttpConnection.stop(\" + error + \") ignored because the connection is already in the disconnecting state.\");\r\n                            return [2 /*return*/, this.stopPromise];\r\n                        }\r\n                        this.connectionState = \"Disconnecting\" /* Disconnecting */;\r\n                        this.stopPromise = new Promise(function (resolve) {\r\n                            // Don't complete stop() until stopConnection() completes.\r\n                            _this.stopPromiseResolver = resolve;\r\n                        });\r\n                        // stopInternal should never throw so just observe it.\r\n                        return [4 /*yield*/, this.stopInternal(error)];\r\n                    case 1:\r\n                        // stopInternal should never throw so just observe it.\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.stopPromise];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.stopInternal = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_1, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Set error as soon as possible otherwise there is a race between\r\n                        // the transport closing and providing an error and the error from a close message\r\n                        // We would prefer the close message error.\r\n                        this.stopError = error;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.startInternalPromise];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        if (!this.transport) return [3 /*break*/, 9];\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, this.transport.stop()];\r\n                    case 6:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        e_2 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"HttpConnection.transport.stop() threw error '\" + e_2 + \"'.\");\r\n                        this.stopConnection();\r\n                        return [3 /*break*/, 8];\r\n                    case 8:\r\n                        this.transport = undefined;\r\n                        return [3 /*break*/, 10];\r\n                    case 9:\r\n                        this.logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n                        this.stopConnection();\r\n                        _a.label = 10;\r\n                    case 10: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.startInternal = function (transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, negotiateResponse, redirects, _loop_1, this_1, e_3;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this.baseUrl;\r\n                        this.accessTokenFactory = this.options.accessTokenFactory;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 12, , 13]);\r\n                        if (!this.options.skipNegotiation) return [3 /*break*/, 5];\r\n                        if (!(this.options.transport === HttpTransportType.WebSockets)) return [3 /*break*/, 3];\r\n                        // No need to add a connection ID in this case\r\n                        this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        return [4 /*yield*/, this.transport.connect(url, transferFormat)];\r\n                    case 2:\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3: throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                    case 4: return [3 /*break*/, 11];\r\n                    case 5:\r\n                        negotiateResponse = null;\r\n                        redirects = 0;\r\n                        _loop_1 = function () {\r\n                            var accessToken_1;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, this_1.getNegotiationResponse(url)];\r\n                                    case 1:\r\n                                        negotiateResponse = _a.sent();\r\n                                        // the user tries to stop the connection when it is being started\r\n                                        if (this_1.connectionState === \"Disconnecting\" /* Disconnecting */ || this_1.connectionState === \"Disconnected\" /* Disconnected */) {\r\n                                            throw new Error(\"The connection was stopped during negotiation.\");\r\n                                        }\r\n                                        if (negotiateResponse.error) {\r\n                                            throw new Error(negotiateResponse.error);\r\n                                        }\r\n                                        if (negotiateResponse.ProtocolVersion) {\r\n                                            throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                                        }\r\n                                        if (negotiateResponse.url) {\r\n                                            url = negotiateResponse.url;\r\n                                        }\r\n                                        if (negotiateResponse.accessToken) {\r\n                                            accessToken_1 = negotiateResponse.accessToken;\r\n                                            this_1.accessTokenFactory = function () { return accessToken_1; };\r\n                                        }\r\n                                        redirects++;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        };\r\n                        this_1 = this;\r\n                        _a.label = 6;\r\n                    case 6: return [5 /*yield**/, _loop_1()];\r\n                    case 7:\r\n                        _a.sent();\r\n                        _a.label = 8;\r\n                    case 8:\r\n                        if (negotiateResponse.url && redirects < MAX_REDIRECTS) return [3 /*break*/, 6];\r\n                        _a.label = 9;\r\n                    case 9:\r\n                        if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                            throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                        }\r\n                        this.connectionId = negotiateResponse.connectionId;\r\n                        return [4 /*yield*/, this.createTransport(url, this.options.transport, negotiateResponse, transferFormat)];\r\n                    case 10:\r\n                        _a.sent();\r\n                        _a.label = 11;\r\n                    case 11:\r\n                        if (this.transport instanceof LongPollingTransport) {\r\n                            this.features.inherentKeepAlive = true;\r\n                        }\r\n                        this.transport.onreceive = this.onreceive;\r\n                        this.transport.onclose = function (e) { return _this.stopConnection(e); };\r\n                        if (this.connectionState === \"Connecting \" /* Connecting */) {\r\n                            // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                            // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                            this.logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                            this.connectionState = \"Connected\" /* Connected */;\r\n                        }\r\n                        return [3 /*break*/, 13];\r\n                    case 12:\r\n                        e_3 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e_3);\r\n                        this.connectionState = \"Disconnected\" /* Disconnected */;\r\n                        this.transport = undefined;\r\n                        return [2 /*return*/, Promise.reject(e_3)];\r\n                    case 13: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.getNegotiationResponse = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, headers, token, negotiateUrl, response, e_4;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _b.sent();\r\n                        if (token) {\r\n                            headers = (_a = {},\r\n                                _a[\"Authorization\"] = \"Bearer \" + token,\r\n                                _a);\r\n                        }\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        negotiateUrl = this.resolveNegotiateUrl(url);\r\n                        this.logger.log(LogLevel.Debug, \"Sending negotiation request: \" + negotiateUrl + \".\");\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        _b.trys.push([3, 5, , 6]);\r\n                        return [4 /*yield*/, this.httpClient.post(negotiateUrl, {\r\n                                content: \"\",\r\n                                headers: headers,\r\n                            })];\r\n                    case 4:\r\n                        response = _b.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            return [2 /*return*/, Promise.reject(new Error(\"Unexpected status code returned from negotiate \" + response.statusCode))];\r\n                        }\r\n                        return [2 /*return*/, JSON.parse(response.content)];\r\n                    case 5:\r\n                        e_4 = _b.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e_4);\r\n                        return [2 /*return*/, Promise.reject(e_4)];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.createConnectUrl = function (url, connectionId) {\r\n        if (!connectionId) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + (\"id=\" + connectionId);\r\n    };\r\n    HttpConnection.prototype.createTransport = function (url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connectUrl, transportExceptions, transports, _i, transports_1, endpoint, transport, ex_1, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        if (!this.isITransport(requestedTransport)) return [3 /*break*/, 2];\r\n                        this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n                        this.transport = requestedTransport;\r\n                        return [4 /*yield*/, this.transport.connect(connectUrl, requestedTransferFormat)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 2:\r\n                        transportExceptions = [];\r\n                        transports = negotiateResponse.availableTransports || [];\r\n                        _i = 0, transports_1 = transports;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (!(_i < transports_1.length)) return [3 /*break*/, 11];\r\n                        endpoint = transports_1[_i];\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        _a.trys.push([4, 9, , 10]);\r\n                        transport = this.resolveTransport(endpoint, requestedTransport, requestedTransferFormat);\r\n                        if (!(typeof transport === \"number\")) return [3 /*break*/, 8];\r\n                        this.transport = this.constructTransport(transport);\r\n                        if (!!negotiateResponse.connectionId) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.getNegotiationResponse(url)];\r\n                    case 5:\r\n                        negotiateResponse = _a.sent();\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        _a.label = 6;\r\n                    case 6: return [4 /*yield*/, this.transport.connect(connectUrl, requestedTransferFormat)];\r\n                    case 7:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 8: return [3 /*break*/, 10];\r\n                    case 9:\r\n                        ex_1 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the transport '\" + endpoint.transport + \"': \" + ex_1);\r\n                        negotiateResponse.connectionId = undefined;\r\n                        transportExceptions.push(endpoint.transport + \" failed: \" + ex_1);\r\n                        if (this.connectionState !== \"Connecting \" /* Connecting */) {\r\n                            message = \"Failed to select transport before stop() was called.\";\r\n                            this.logger.log(LogLevel.Debug, message);\r\n                            return [2 /*return*/, Promise.reject(new Error(message))];\r\n                        }\r\n                        return [3 /*break*/, 10];\r\n                    case 10:\r\n                        _i++;\r\n                        return [3 /*break*/, 3];\r\n                    case 11:\r\n                        if (transportExceptions.length > 0) {\r\n                            return [2 /*return*/, Promise.reject(new Error(\"Unable to connect to the server with any of the available transports. \" + transportExceptions.join(\" \")))];\r\n                        }\r\n                        return [2 /*return*/, Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"))];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.constructTransport = function (transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this.options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.WebSocket);\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this.options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.EventSource);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false);\r\n            default:\r\n                throw new Error(\"Unknown transport: \" + transport + \".\");\r\n        }\r\n    };\r\n    HttpConnection.prototype.resolveTransport = function (endpoint, requestedTransport, requestedTransferFormat) {\r\n        var transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, \"Skipping transport '\" + endpoint.transport + \"' because it is not supported by this client.\");\r\n        }\r\n        else {\r\n            var transferFormats = endpoint.transferFormats.map(function (s) { return TransferFormat[s]; });\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this.options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this.options.EventSource)) {\r\n                        this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it is not supported in your environment.'\");\r\n                        throw new Error(\"'\" + HttpTransportType[transport] + \"' is not supported in your environment.\");\r\n                    }\r\n                    else {\r\n                        this.logger.log(LogLevel.Debug, \"Selecting transport '\" + HttpTransportType[transport] + \"'.\");\r\n                        return transport;\r\n                    }\r\n                }\r\n                else {\r\n                    this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it does not support the requested transfer format '\" + TransferFormat[requestedTransferFormat] + \"'.\");\r\n                    throw new Error(\"'\" + HttpTransportType[transport] + \"' does not support \" + TransferFormat[requestedTransferFormat] + \".\");\r\n                }\r\n            }\r\n            else {\r\n                this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it was disabled by the client.\");\r\n                throw new Error(\"'\" + HttpTransportType[transport] + \"' is disabled by the client.\");\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    HttpConnection.prototype.isITransport = function (transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    };\r\n    HttpConnection.prototype.stopConnection = function (error) {\r\n        this.logger.log(LogLevel.Debug, \"HttpConnection.stopConnection(\" + error + \") called while in state \" + this.connectionState + \".\");\r\n        this.transport = undefined;\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this.stopError || error;\r\n        this.stopError = undefined;\r\n        if (this.connectionState === \"Disconnected\" /* Disconnected */) {\r\n            this.logger.log(LogLevel.Debug, \"Call to HttpConnection.stopConnection(\" + error + \") was ignored because the connection is already in the disconnected state.\");\r\n            return;\r\n        }\r\n        if (this.connectionState === \"Connecting \" /* Connecting */) {\r\n            this.logger.log(LogLevel.Warning, \"Call to HttpConnection.stopConnection(\" + error + \") was ignored because the connection hasn't yet left the in the connecting state.\");\r\n            return;\r\n        }\r\n        if (this.connectionState === \"Disconnecting\" /* Disconnecting */) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this.stopPromiseResolver();\r\n        }\r\n        if (error) {\r\n            this.logger.log(LogLevel.Error, \"Connection disconnected with error '\" + error + \"'.\");\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n        this.connectionId = undefined;\r\n        this.connectionState = \"Disconnected\" /* Disconnected */;\r\n        if (this.onclose && this.connectionStarted) {\r\n            this.connectionStarted = false;\r\n            try {\r\n                this.onclose(error);\r\n            }\r\n            catch (e) {\r\n                this.logger.log(LogLevel.Error, \"HttpConnection.onclose(\" + error + \") threw error '\" + e + \"'.\");\r\n            }\r\n        }\r\n    };\r\n    HttpConnection.prototype.resolveUrl = function (url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (!Platform.isBrowser || !window.document) {\r\n            throw new Error(\"Cannot resolve '\" + url + \"'.\");\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative  path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        var aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this.logger.log(LogLevel.Information, \"Normalizing '\" + url + \"' to '\" + aTag.href + \"'.\");\r\n        return aTag.href;\r\n    };\r\n    HttpConnection.prototype.resolveNegotiateUrl = function (url) {\r\n        var index = url.indexOf(\"?\");\r\n        var negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n        return negotiateUrl;\r\n    };\r\n    return HttpConnection;\r\n}());\r\nexport { HttpConnection };\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg } from \"./Utils\";\r\nvar DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\nvar DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport var HubConnectionState;\r\n(function (HubConnectionState) {\r\n    /** The hub connection is disconnected. */\r\n    HubConnectionState[\"Disconnected\"] = \"Disconnected\";\r\n    /** The hub connection is connecting. */\r\n    HubConnectionState[\"Connecting\"] = \"Connecting\";\r\n    /** The hub connection is connected. */\r\n    HubConnectionState[\"Connected\"] = \"Connected\";\r\n    /** The hub connection is disconnecting. */\r\n    HubConnectionState[\"Disconnecting\"] = \"Disconnecting\";\r\n    /** The hub connection is reconnecting. */\r\n    HubConnectionState[\"Reconnecting\"] = \"Reconnecting\";\r\n})(HubConnectionState || (HubConnectionState = {}));\r\n/** Represents a connection to a SignalR Hub. */\r\nvar HubConnection = /** @class */ (function () {\r\n    function HubConnection(connection, logger, protocol, reconnectPolicy) {\r\n        var _this = this;\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.reconnectPolicy = reconnectPolicy;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = function (data) { return _this.processIncomingData(data); };\r\n        this.connection.onclose = function (error) { return _this.connectionClosed(error); };\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.reconnectingCallbacks = [];\r\n        this.reconnectedCallbacks = [];\r\n        this.invocationId = 0;\r\n        this.receivedHandshakeResponse = false;\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n        this.cachedPingMessage = this.protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    HubConnection.create = function (connection, logger, protocol, reconnectPolicy) {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\r\n    };\r\n    Object.defineProperty(HubConnection.prototype, \"state\", {\r\n        /** Indicates the state of the {@link HubConnection} to the server. */\r\n        get: function () {\r\n            return this.connectionState;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HubConnection.prototype, \"connectionId\", {\r\n        /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n         *  in the disconnected state or if the negotiation step was skipped.\r\n         */\r\n        get: function () {\r\n            return this.connection ? (this.connection.connectionId || null) : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.start = function () {\r\n        this.startPromise = this.startWithStateTransitions();\r\n        return this.startPromise;\r\n    };\r\n    HubConnection.prototype.startWithStateTransitions = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.connectionState !== HubConnectionState.Disconnected) {\r\n                            return [2 /*return*/, Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"))];\r\n                        }\r\n                        this.connectionState = HubConnectionState.Connecting;\r\n                        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.startInternal()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.connectionState = HubConnectionState.Connected;\r\n                        this.connectionStarted = true;\r\n                        this.logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        this.connectionState = HubConnectionState.Disconnected;\r\n                        this.logger.log(LogLevel.Debug, \"HubConnection failed to start successfully because of error '\" + e_1 + \"'.\");\r\n                        return [2 /*return*/, Promise.reject(e_1)];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HubConnection.prototype.startInternal = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var handshakePromise, handshakeRequest, e_2;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.stopDuringStartError = undefined;\r\n                        this.receivedHandshakeResponse = false;\r\n                        handshakePromise = new Promise(function (resolve, reject) {\r\n                            _this.handshakeResolver = resolve;\r\n                            _this.handshakeRejecter = reject;\r\n                        });\r\n                        return [4 /*yield*/, this.connection.start(this.protocol.transferFormat)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 5, , 7]);\r\n                        handshakeRequest = {\r\n                            protocol: this.protocol.name,\r\n                            version: this.protocol.version,\r\n                        };\r\n                        this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n                        return [4 /*yield*/, this.sendMessage(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest))];\r\n                    case 3:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Information, \"Using HubProtocol '\" + this.protocol.name + \"'.\");\r\n                        // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n                        this.cleanupTimeout();\r\n                        this.resetTimeoutPeriod();\r\n                        this.resetKeepAliveInterval();\r\n                        return [4 /*yield*/, handshakePromise];\r\n                    case 4:\r\n                        _a.sent();\r\n                        // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n                        // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n                        // and the connection was closed.\r\n                        if (this.stopDuringStartError) {\r\n                            // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                            // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                            // will cause the calling continuation to get scheduled to run later.\r\n                            throw this.stopDuringStartError;\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 5:\r\n                        e_2 = _a.sent();\r\n                        this.logger.log(LogLevel.Debug, \"Hub handshake failed with error '\" + e_2 + \"' during start(). Stopping HubConnection.\");\r\n                        this.cleanupTimeout();\r\n                        this.cleanupPingTimer();\r\n                        // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n                        // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n                        return [4 /*yield*/, this.connection.stop(e_2)];\r\n                    case 6:\r\n                        // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n                        // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n                        _a.sent();\r\n                        throw e_2;\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.stop = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var startPromise, e_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        startPromise = this.startPromise;\r\n                        this.stopPromise = this.stopInternal();\r\n                        return [4 /*yield*/, this.stopPromise];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        // Awaiting undefined continues immediately\r\n                        return [4 /*yield*/, startPromise];\r\n                    case 3:\r\n                        // Awaiting undefined continues immediately\r\n                        _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_3 = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HubConnection.prototype.stopInternal = function (error) {\r\n        if (this.connectionState === HubConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, \"Call to HubConnection.stop(\" + error + \") ignored because it is already in the disconnected state.\");\r\n            return Promise.resolve();\r\n        }\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, \"Call to HttpConnection.stop(\" + error + \") ignored because the connection is already in the disconnecting state.\");\r\n            return this.stopPromise;\r\n        }\r\n        this.connectionState = HubConnectionState.Disconnecting;\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        if (this.reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this.logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n            clearTimeout(this.reconnectDelayHandle);\r\n            this.reconnectDelayHandle = undefined;\r\n            this.completeClose();\r\n            return Promise.resolve();\r\n        }\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        this.stopDuringStartError = error || new Error(\"The connection was stopped before the hub handshake could complete.\");\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    };\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    HubConnection.prototype.stream = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var _a = this.replaceStreamingParams(args), streams = _a[0], streamIds = _a[1];\r\n        var invocationDescriptor = this.createStreamInvocation(methodName, args, streamIds);\r\n        var promiseQueue;\r\n        var subject = new Subject();\r\n        subject.cancelCallback = function () {\r\n            var cancelInvocation = _this.createCancelInvocation(invocationDescriptor.invocationId);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n            return promiseQueue.then(function () {\r\n                return _this.sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n        this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    }\r\n                    else {\r\n                        subject.complete();\r\n                    }\r\n                }\r\n                else {\r\n                    subject.next((invocationEvent.item));\r\n                }\r\n            }\r\n        };\r\n        promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n            .catch(function (e) {\r\n            subject.error(e);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        this.launchStreams(streams, promiseQueue);\r\n        return subject;\r\n    };\r\n    HubConnection.prototype.sendMessage = function (message) {\r\n        this.resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    };\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    HubConnection.prototype.sendWithProtocol = function (message) {\r\n        return this.sendMessage(this.protocol.writeMessage(message));\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.send = function (methodName) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var _a = this.replaceStreamingParams(args), streams = _a[0], streamIds = _a[1];\r\n        var sendPromise = this.sendWithProtocol(this.createInvocation(methodName, args, true, streamIds));\r\n        this.launchStreams(streams, sendPromise);\r\n        return sendPromise;\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    HubConnection.prototype.invoke = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var _a = this.replaceStreamingParams(args), streams = _a[0], streamIds = _a[1];\r\n        var invocationDescriptor = this.createInvocation(methodName, args, false, streamIds);\r\n        var p = new Promise(function (resolve, reject) {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            _this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        }\r\n                        else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(new Error(\"Unexpected message type: \" + invocationEvent.type));\r\n                    }\r\n                }\r\n            };\r\n            var promiseQueue = _this.sendWithProtocol(invocationDescriptor)\r\n                .catch(function (e) {\r\n                reject(e);\r\n                // invocationId will always have a value for a non-blocking invocation\r\n                delete _this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n            _this.launchStreams(streams, promiseQueue);\r\n        });\r\n        return p;\r\n    };\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    HubConnection.prototype.on = function (methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this.methods[methodName].push(newMethod);\r\n    };\r\n    HubConnection.prototype.off = function (methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        var handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            var removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this.methods[methodName];\r\n        }\r\n    };\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    HubConnection.prototype.onclose = function (callback) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    };\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    HubConnection.prototype.onreconnecting = function (callback) {\r\n        if (callback) {\r\n            this.reconnectingCallbacks.push(callback);\r\n        }\r\n    };\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    HubConnection.prototype.onreconnected = function (callback) {\r\n        if (callback) {\r\n            this.reconnectedCallbacks.push(callback);\r\n        }\r\n    };\r\n    HubConnection.prototype.processIncomingData = function (data) {\r\n        this.cleanupTimeout();\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            var messages = this.protocol.parseMessages(data, this.logger);\r\n            for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n                var message = messages_1[_i];\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        var callback = this.callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        // We don't want to wait on the stop itself.\r\n                        this.stopPromise = this.stopInternal(message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined);\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, \"Invalid message type: \" + message.type + \".\");\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this.resetTimeoutPeriod();\r\n    };\r\n    HubConnection.prototype.processHandshakeResponse = function (data) {\r\n        var _a;\r\n        var responseMessage;\r\n        var remainingData;\r\n        try {\r\n            _a = this.handshakeProtocol.parseHandshakeResponse(data), remainingData = _a[0], responseMessage = _a[1];\r\n        }\r\n        catch (e) {\r\n            var message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n            var error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            var message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n            var error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        this.handshakeResolver();\r\n        return remainingData;\r\n    };\r\n    HubConnection.prototype.resetKeepAliveInterval = function () {\r\n        var _this = this;\r\n        this.cleanupPingTimer();\r\n        this.pingServerHandle = setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!(this.connectionState === HubConnectionState.Connected)) return [3 /*break*/, 4];\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.sendMessage(this.cachedPingMessage)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        // We don't care about the error. It should be seen elsewhere in the client.\r\n                        // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                        this.cleanupPingTimer();\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); }, this.keepAliveIntervalInMilliseconds);\r\n    };\r\n    HubConnection.prototype.resetTimeoutPeriod = function () {\r\n        var _this = this;\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(function () { return _this.serverTimeout(); }, this.serverTimeoutInMilliseconds);\r\n        }\r\n    };\r\n    HubConnection.prototype.serverTimeout = function () {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // tslint:disable-next-line:no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    };\r\n    HubConnection.prototype.invokeClientMethod = function (invocationMessage) {\r\n        var _this = this;\r\n        var methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            try {\r\n                methods.forEach(function (m) { return m.apply(_this, invocationMessage.arguments); });\r\n            }\r\n            catch (e) {\r\n                this.logger.log(LogLevel.Error, \"A callback for the method \" + invocationMessage.target.toLowerCase() + \" threw error '\" + e + \"'.\");\r\n            }\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                var message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n                // We don't want to wait on the stop itself.\r\n                this.stopPromise = this.stopInternal(new Error(message));\r\n            }\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Warning, \"No client method with the name '\" + invocationMessage.target + \"' found.\");\r\n        }\r\n    };\r\n    HubConnection.prototype.connectionClosed = function (error) {\r\n        this.logger.log(LogLevel.Debug, \"HubConnection.connectionClosed(\" + error + \") called while in state \" + this.connectionState + \".\");\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this.stopDuringStartError = this.stopDuringStartError || error || new Error(\"The underlying connection was closed before the hub handshake could complete.\");\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this.handshakeResolver) {\r\n            this.handshakeResolver();\r\n        }\r\n        this.cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.completeClose(error);\r\n        }\r\n        else if (this.connectionState === HubConnectionState.Connected && this.reconnectPolicy) {\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.reconnect(error);\r\n        }\r\n        else if (this.connectionState === HubConnectionState.Connected) {\r\n            this.completeClose(error);\r\n        }\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    };\r\n    HubConnection.prototype.completeClose = function (error) {\r\n        var _this = this;\r\n        if (this.connectionStarted) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.connectionStarted = false;\r\n            try {\r\n                this.closedCallbacks.forEach(function (c) { return c.apply(_this, [error]); });\r\n            }\r\n            catch (e) {\r\n                this.logger.log(LogLevel.Error, \"An onclose callback called with error '\" + error + \"' threw error '\" + e + \"'.\");\r\n            }\r\n        }\r\n    };\r\n    HubConnection.prototype.reconnect = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var reconnectStartTime, previousReconnectAttempts, nextRetryDelay, e_4;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        reconnectStartTime = Date.now();\r\n                        previousReconnectAttempts = 0;\r\n                        nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, 0);\r\n                        if (nextRetryDelay === null) {\r\n                            this.logger.log(LogLevel.Debug, \"Connection not reconnecting because the IReconnectPolicy returned null on the first reconnect attempt.\");\r\n                            this.completeClose(error);\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this.connectionState = HubConnectionState.Reconnecting;\r\n                        if (error) {\r\n                            this.logger.log(LogLevel.Information, \"Connection reconnecting because of error '\" + error + \"'.\");\r\n                        }\r\n                        else {\r\n                            this.logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n                        }\r\n                        if (this.onreconnecting) {\r\n                            try {\r\n                                this.reconnectingCallbacks.forEach(function (c) { return c.apply(_this, [error]); });\r\n                            }\r\n                            catch (e) {\r\n                                this.logger.log(LogLevel.Error, \"An onreconnecting callback called with error '\" + error + \"' threw error '\" + e + \"'.\");\r\n                            }\r\n                            // Exit early if an onreconnecting callback called connection.stop().\r\n                            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                                return [2 /*return*/];\r\n                            }\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(nextRetryDelay !== null)) return [3 /*break*/, 7];\r\n                        this.logger.log(LogLevel.Information, \"Reconnect attempt number \" + previousReconnectAttempts + \" will start in \" + nextRetryDelay + \" ms.\");\r\n                        return [4 /*yield*/, new Promise(function (resolve) {\r\n                                _this.reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.reconnectDelayHandle = undefined;\r\n                        if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                            this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                            return [2 /*return*/];\r\n                        }\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 6]);\r\n                        return [4 /*yield*/, this.startInternal()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.connectionState = HubConnectionState.Connected;\r\n                        this.logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n                        if (this.onreconnected) {\r\n                            try {\r\n                                this.reconnectedCallbacks.forEach(function (c) { return c.apply(_this, [_this.connection.connectionId]); });\r\n                            }\r\n                            catch (e) {\r\n                                this.logger.log(LogLevel.Error, \"An onreconnected callback called with connectionId '\" + this.connection.connectionId + \"; threw error '\" + e + \"'.\");\r\n                            }\r\n                        }\r\n                        return [2 /*return*/];\r\n                    case 5:\r\n                        e_4 = _a.sent();\r\n                        this.logger.log(LogLevel.Information, \"Reconnect attempt failed because of error '\" + e_4 + \"'.\");\r\n                        if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                            this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect attempt. Done reconnecting.\");\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 6:\r\n                        nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime);\r\n                        return [3 /*break*/, 1];\r\n                    case 7:\r\n                        this.logger.log(LogLevel.Information, \"Reconnect retries have been exhausted after \" + (Date.now() - reconnectStartTime) + \" ms and \" + previousReconnectAttempts + \" failed attempts. Connection disconnecting.\");\r\n                        this.completeClose();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HubConnection.prototype.getNextRetryDelay = function (previousRetryCount, elapsedMilliseconds) {\r\n        try {\r\n            return this.reconnectPolicy.nextRetryDelayInMilliseconds(previousRetryCount, elapsedMilliseconds);\r\n        }\r\n        catch (e) {\r\n            this.logger.log(LogLevel.Error, \"IReconnectPolicy.nextRetryDelayInMilliseconds(\" + previousRetryCount + \", \" + elapsedMilliseconds + \") threw error '\" + e + \"'.\");\r\n            return null;\r\n        }\r\n    };\r\n    HubConnection.prototype.cancelCallbacksWithError = function (error) {\r\n        var callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach(function (key) {\r\n            var callback = callbacks[key];\r\n            callback(null, error);\r\n        });\r\n    };\r\n    HubConnection.prototype.cleanupPingTimer = function () {\r\n        if (this.pingServerHandle) {\r\n            clearTimeout(this.pingServerHandle);\r\n        }\r\n    };\r\n    HubConnection.prototype.cleanupTimeout = function () {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    };\r\n    HubConnection.prototype.createInvocation = function (methodName, args, nonblocking, streamIds) {\r\n        if (nonblocking) {\r\n            return {\r\n                arguments: args,\r\n                streamIds: streamIds,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n        else {\r\n            var invocationId = this.invocationId;\r\n            this.invocationId++;\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds: streamIds,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n    };\r\n    HubConnection.prototype.launchStreams = function (streams, promiseQueue) {\r\n        var _this = this;\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n        var _loop_1 = function (streamId) {\r\n            streams[streamId].subscribe({\r\n                complete: function () {\r\n                    promiseQueue = promiseQueue.then(function () { return _this.sendWithProtocol(_this.createCompletionMessage(streamId)); });\r\n                },\r\n                error: function (err) {\r\n                    var message;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    }\r\n                    else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    }\r\n                    else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n                    promiseQueue = promiseQueue.then(function () { return _this.sendWithProtocol(_this.createCompletionMessage(streamId, message)); });\r\n                },\r\n                next: function (item) {\r\n                    promiseQueue = promiseQueue.then(function () { return _this.sendWithProtocol(_this.createStreamItemMessage(streamId, item)); });\r\n                },\r\n            });\r\n        };\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // tslint:disable-next-line:forin\r\n        for (var streamId in streams) {\r\n            _loop_1(streamId);\r\n        }\r\n    };\r\n    HubConnection.prototype.replaceStreamingParams = function (args) {\r\n        var streams = [];\r\n        var streamIds = [];\r\n        for (var i = 0; i < args.length; i++) {\r\n            var argument = args[i];\r\n            if (this.isObservable(argument)) {\r\n                var streamId = this.invocationId;\r\n                this.invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n        return [streams, streamIds];\r\n    };\r\n    HubConnection.prototype.isObservable = function (arg) {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg.subscribe && typeof arg.subscribe === \"function\";\r\n    };\r\n    HubConnection.prototype.createStreamInvocation = function (methodName, args, streamIds) {\r\n        var invocationId = this.invocationId;\r\n        this.invocationId++;\r\n        return {\r\n            arguments: args,\r\n            invocationId: invocationId.toString(),\r\n            streamIds: streamIds,\r\n            target: methodName,\r\n            type: MessageType.StreamInvocation,\r\n        };\r\n    };\r\n    HubConnection.prototype.createCancelInvocation = function (id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    };\r\n    HubConnection.prototype.createStreamItemMessage = function (id, item) {\r\n        return {\r\n            invocationId: id,\r\n            item: item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    };\r\n    HubConnection.prototype.createCompletionMessage = function (id, error, result) {\r\n        if (error) {\r\n            return {\r\n                error: error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n        return {\r\n            invocationId: id,\r\n            result: result,\r\n            type: MessageType.Completion,\r\n        };\r\n    };\r\n    return HubConnection;\r\n}());\r\nexport { HubConnection };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n// tslint:disable:object-literal-sort-keys\r\nvar LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\nfunction parseLogLevel(name) {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    var mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    }\r\n    else {\r\n        throw new Error(\"Unknown log level: \" + name);\r\n    }\r\n}\r\n/** A builder for configuring {@link @aspnet/signalr.HubConnection} instances. */\r\nvar HubConnectionBuilder = /** @class */ (function () {\r\n    function HubConnectionBuilder() {\r\n    }\r\n    HubConnectionBuilder.prototype.configureLogging = function (logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else if (typeof logging === \"string\") {\r\n            var logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    };\r\n    HubConnectionBuilder.prototype.withUrl = function (url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = __assign({}, this.httpConnectionOptions, transportTypeOrOptions);\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = __assign({}, this.httpConnectionOptions, { transport: transportTypeOrOptions });\r\n        }\r\n        return this;\r\n    };\r\n    /** Configures the {@link @aspnet/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @aspnet/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    HubConnectionBuilder.prototype.withHubProtocol = function (protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    };\r\n    HubConnectionBuilder.prototype.withAutomaticReconnect = function (retryDelaysOrReconnectPolicy) {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        }\r\n        else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        }\r\n        else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n        return this;\r\n    };\r\n    /** Creates a {@link @aspnet/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @aspnet/signalr.HubConnection}.\r\n     */\r\n    HubConnectionBuilder.prototype.build = function () {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        var httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        var connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy);\r\n    };\r\n    return HubConnectionBuilder;\r\n}());\r\nexport { HubConnectionBuilder };\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @aspnet/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @aspnet/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @aspnet/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @aspnet/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @aspnet/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @aspnet/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @aspnet/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n})(MessageType || (MessageType = {}));\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nvar JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nvar JsonHubProtocol = /** @class */ (function () {\r\n    function JsonHubProtocol() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 1;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @aspnet/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    JsonHubProtocol.prototype.parseMessages = function (input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        var messages = TextMessageFormat.parse(input);\r\n        var hubMessages = [];\r\n        for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n            var message = messages_1[_i];\r\n            var parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    };\r\n    /** Writes the specified {@link @aspnet/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    JsonHubProtocol.prototype.writeMessage = function (message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    };\r\n    JsonHubProtocol.prototype.isInvocationMessage = function (message) {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    };\r\n    JsonHubProtocol.prototype.isStreamItemMessage = function (message) {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    };\r\n    JsonHubProtocol.prototype.isCompletionMessage = function (message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    };\r\n    JsonHubProtocol.prototype.assertNotEmptyString = function (value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    };\r\n    return JsonHubProtocol;\r\n}());\r\nexport { JsonHubProtocol };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nvar NullLogger = /** @class */ (function () {\r\n    function NullLogger() {\r\n    }\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    NullLogger.prototype.log = function (_logLevel, _message) {\r\n    };\r\n    /** The singleton instance of the {@link @aspnet/signalr.NullLogger}. */\r\n    NullLogger.instance = new NullLogger();\r\n    return NullLogger;\r\n}());\r\nexport { NullLogger };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nvar LongPollingTransport = /** @class */ (function () {\r\n    function LongPollingTransport(httpClient, accessTokenFactory, logger, logMessageContent) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = logMessageContent;\r\n        this.running = false;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    Object.defineProperty(LongPollingTransport.prototype, \"pollAborted\", {\r\n        // This is an internal type, not exported from 'index' so this is really just internal.\r\n        get: function () {\r\n            return this.pollAbort.aborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LongPollingTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pollOptions, token, pollUrl, response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.url = url;\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n                        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n                        if (transferFormat === TransferFormat.Binary &&\r\n                            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n                            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n                        }\r\n                        pollOptions = {\r\n                            abortSignal: this.pollAbort.signal,\r\n                            headers: {},\r\n                            timeout: 100000,\r\n                        };\r\n                        if (transferFormat === TransferFormat.Binary) {\r\n                            pollOptions.responseType = \"arraybuffer\";\r\n                        }\r\n                        return [4 /*yield*/, this.getAccessToken()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        pollUrl = url + \"&_=\" + Date.now();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl + \".\");\r\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode + \".\");\r\n                            // Mark running as false so that the poll immediately ends and runs the close logic\r\n                            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            this.running = true;\r\n                        }\r\n                        this.receiving = this.poll(this.url, pollOptions);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.getAccessToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.updateHeaderToken = function (request, token) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = \"Bearer \" + token;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    };\r\n    LongPollingTransport.prototype.poll = function (url, pollOptions) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token, pollUrl, response, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, , 8, 9]);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!this.running) return [3 /*break*/, 7];\r\n                        return [4 /*yield*/, this.getAccessToken()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 6]);\r\n                        pollUrl = url + \"&_=\" + Date.now();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl + \".\");\r\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\r\n                    case 4:\r\n                        response = _a.sent();\r\n                        if (response.statusCode === 204) {\r\n                            this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n                            this.running = false;\r\n                        }\r\n                        else if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode + \".\");\r\n                            // Unexpected status code\r\n                            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            // Process the response\r\n                            if (response.content) {\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) data received. \" + getDataDetail(response.content, this.logMessageContent) + \".\");\r\n                                if (this.onreceive) {\r\n                                    this.onreceive(response.content);\r\n                                }\r\n                            }\r\n                            else {\r\n                                // This is another way timeout manifest.\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        e_1 = _a.sent();\r\n                        if (!this.running) {\r\n                            // Log but disregard errors that occur after stopping\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll errored after shutdown: \" + e_1.message);\r\n                        }\r\n                        else {\r\n                            if (e_1 instanceof TimeoutError) {\r\n                                // Ignore timeouts and reissue the poll.\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                            }\r\n                            else {\r\n                                // Close the connection with the error as the result.\r\n                                this.closeError = e_1;\r\n                                this.running = false;\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [3 /*break*/, 1];\r\n                    case 7: return [3 /*break*/, 9];\r\n                    case 8:\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n                        // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n                        // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n                        if (!this.pollAborted) {\r\n                            this.raiseOnClose();\r\n                        }\r\n                        return [7 /*endfinally*/];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.send = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.running) {\r\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\r\n                }\r\n                return [2 /*return*/, sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.stop = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var deleteOptions, token;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n                        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n                        this.running = false;\r\n                        this.pollAbort.abort();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, , 5, 6]);\r\n                        return [4 /*yield*/, this.receiving];\r\n                    case 2:\r\n                        _a.sent();\r\n                        // Send DELETE to clean up long polling on the server\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) sending DELETE request to \" + this.url + \".\");\r\n                        deleteOptions = {\r\n                            headers: {},\r\n                        };\r\n                        return [4 /*yield*/, this.getAccessToken()];\r\n                    case 3:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(deleteOptions, token);\r\n                        return [4 /*yield*/, this.httpClient.delete(this.url, deleteOptions)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n                        // Raise close event here instead of in polling\r\n                        // It needs to happen after the DELETE request is sent\r\n                        this.raiseOnClose();\r\n                        return [7 /*endfinally*/];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.raiseOnClose = function () {\r\n        if (this.onclose) {\r\n            var logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this.closeError) {\r\n                logMessage += \" Error: \" + this.closeError;\r\n            }\r\n            this.logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this.closeError);\r\n        }\r\n    };\r\n    return LongPollingTransport;\r\n}());\r\nexport { LongPollingTransport };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\nvar requestModule;\r\nif (typeof XMLHttpRequest === \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    var requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    requestModule = requireFunc(\"request\");\r\n}\r\nvar NodeHttpClient = /** @class */ (function (_super) {\r\n    __extends(NodeHttpClient, _super);\r\n    function NodeHttpClient(logger) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof requestModule === \"undefined\") {\r\n            throw new Error(\"The 'request' module could not be loaded.\");\r\n        }\r\n        _this.logger = logger;\r\n        _this.cookieJar = requestModule.jar();\r\n        _this.request = requestModule.defaults({ jar: _this.cookieJar });\r\n        return _this;\r\n    }\r\n    NodeHttpClient.prototype.send = function (httpRequest) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var requestBody;\r\n            if (isArrayBuffer(httpRequest.content)) {\r\n                requestBody = Buffer.from(httpRequest.content);\r\n            }\r\n            else {\r\n                requestBody = httpRequest.content || \"\";\r\n            }\r\n            var currentRequest = _this.request(httpRequest.url, {\r\n                body: requestBody,\r\n                // If binary is expected 'null' should be used, otherwise for text 'utf8'\r\n                encoding: httpRequest.responseType === \"arraybuffer\" ? null : \"utf8\",\r\n                headers: __assign({ \r\n                    // Tell auth middleware to 401 instead of redirecting\r\n                    \"X-Requested-With\": \"XMLHttpRequest\" }, httpRequest.headers),\r\n                method: httpRequest.method,\r\n                timeout: httpRequest.timeout,\r\n            }, function (error, response, body) {\r\n                if (httpRequest.abortSignal) {\r\n                    httpRequest.abortSignal.onabort = null;\r\n                }\r\n                if (error) {\r\n                    if (error.code === \"ETIMEDOUT\") {\r\n                        _this.logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\r\n                        reject(new TimeoutError());\r\n                    }\r\n                    _this.logger.log(LogLevel.Warning, \"Error from HTTP request. \" + error);\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                if (response.statusCode >= 200 && response.statusCode < 300) {\r\n                    resolve(new HttpResponse(response.statusCode, response.statusMessage || \"\", body));\r\n                }\r\n                else {\r\n                    reject(new HttpError(response.statusMessage || \"\", response.statusCode || 0));\r\n                }\r\n            });\r\n            if (httpRequest.abortSignal) {\r\n                httpRequest.abortSignal.onabort = function () {\r\n                    currentRequest.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n        });\r\n    };\r\n    NodeHttpClient.prototype.getCookieString = function (url) {\r\n        return this.cookieJar.getCookieString(url);\r\n    };\r\n    return NodeHttpClient;\r\n}(HttpClient));\r\nexport { NodeHttpClient };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, Platform, sendMessage } from \"./Utils\";\r\n/** @private */\r\nvar ServerSentEventsTransport = /** @class */ (function () {\r\n    function ServerSentEventsTransport(httpClient, accessTokenFactory, logger, logMessageContent, eventSourceConstructor) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.logMessageContent = logMessageContent;\r\n        this.eventSourceConstructor = eventSourceConstructor;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    ServerSentEventsTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n                        // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\r\n                        this.url = url;\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (token) {\r\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                            var opened = false;\r\n                            if (transferFormat !== TransferFormat.Text) {\r\n                                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                                return;\r\n                            }\r\n                            var eventSource;\r\n                            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                                eventSource = new _this.eventSourceConstructor(url, { withCredentials: true });\r\n                            }\r\n                            else {\r\n                                // Non-browser passes cookies via the dictionary\r\n                                var cookies = _this.httpClient.getCookieString(url);\r\n                                eventSource = new _this.eventSourceConstructor(url, { withCredentials: true, headers: { Cookie: cookies } });\r\n                            }\r\n                            try {\r\n                                eventSource.onmessage = function (e) {\r\n                                    if (_this.onreceive) {\r\n                                        try {\r\n                                            _this.logger.log(LogLevel.Trace, \"(SSE transport) data received. \" + getDataDetail(e.data, _this.logMessageContent) + \".\");\r\n                                            _this.onreceive(e.data);\r\n                                        }\r\n                                        catch (error) {\r\n                                            _this.close(error);\r\n                                            return;\r\n                                        }\r\n                                    }\r\n                                };\r\n                                eventSource.onerror = function (e) {\r\n                                    var error = new Error(e.data || \"Error occurred\");\r\n                                    if (opened) {\r\n                                        _this.close(error);\r\n                                    }\r\n                                    else {\r\n                                        reject(error);\r\n                                    }\r\n                                };\r\n                                eventSource.onopen = function () {\r\n                                    _this.logger.log(LogLevel.Information, \"SSE connected to \" + _this.url);\r\n                                    _this.eventSource = eventSource;\r\n                                    opened = true;\r\n                                    resolve();\r\n                                };\r\n                            }\r\n                            catch (e) {\r\n                                reject(e);\r\n                                return;\r\n                            }\r\n                        })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerSentEventsTransport.prototype.send = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.eventSource) {\r\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\r\n                }\r\n                return [2 /*return*/, sendMessage(this.logger, \"SSE\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\r\n            });\r\n        });\r\n    };\r\n    ServerSentEventsTransport.prototype.stop = function () {\r\n        this.close();\r\n        return Promise.resolve();\r\n    };\r\n    ServerSentEventsTransport.prototype.close = function (e) {\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = undefined;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    };\r\n    return ServerSentEventsTransport;\r\n}());\r\nexport { ServerSentEventsTransport };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { SubjectSubscription } from \"./Utils\";\r\n/** Stream implementation to stream items to the server. */\r\nvar Subject = /** @class */ (function () {\r\n    function Subject() {\r\n        this.observers = [];\r\n    }\r\n    Subject.prototype.next = function (item) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            observer.next(item);\r\n        }\r\n    };\r\n    Subject.prototype.error = function (err) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.complete = function () {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.subscribe = function (observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    };\r\n    return Subject;\r\n}());\r\nexport { Subject };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Not exported from index\r\n/** @private */\r\nvar TextMessageFormat = /** @class */ (function () {\r\n    function TextMessageFormat() {\r\n    }\r\n    TextMessageFormat.write = function (output) {\r\n        return \"\" + output + TextMessageFormat.RecordSeparator;\r\n    };\r\n    TextMessageFormat.parse = function (input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        var messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    };\r\n    TextMessageFormat.RecordSeparatorCode = 0x1e;\r\n    TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n    return TextMessageFormat;\r\n}());\r\nexport { TextMessageFormat };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n/** @private */\r\nvar Arg = /** @class */ (function () {\r\n    function Arg() {\r\n    }\r\n    Arg.isRequired = function (val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(\"The '\" + name + \"' argument is required.\");\r\n        }\r\n    };\r\n    Arg.isIn = function (val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(\"Unknown \" + name + \" value: \" + val + \".\");\r\n        }\r\n    };\r\n    return Arg;\r\n}());\r\nexport { Arg };\r\n/** @private */\r\nvar Platform = /** @class */ (function () {\r\n    function Platform() {\r\n    }\r\n    Object.defineProperty(Platform, \"isBrowser\", {\r\n        get: function () {\r\n            return typeof window === \"object\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Platform, \"isWebWorker\", {\r\n        get: function () {\r\n            return typeof self === \"object\" && \"importScripts\" in self;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Platform, \"isNode\", {\r\n        get: function () {\r\n            return !this.isBrowser && !this.isWebWorker;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Platform;\r\n}());\r\nexport { Platform };\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    var detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = \"Binary data of length \" + data.byteLength;\r\n        if (includeContent) {\r\n            detail += \". Content: '\" + formatArrayBuffer(data) + \"'\";\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = \"String data of length \" + data.length;\r\n        if (includeContent) {\r\n            detail += \". Content: '\" + data + \"'\";\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    var view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    var str = \"\";\r\n    view.forEach(function (num) {\r\n        var pad = num < 16 ? \"0\" : \"\";\r\n        str += \"0x\" + pad + num.toString(16) + \" \";\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n/** @private */\r\nexport function sendMessage(logger, transportName, httpClient, url, accessTokenFactory, content, logMessageContent) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, headers, token, responseType, response;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    if (!accessTokenFactory) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, accessTokenFactory()];\r\n                case 1:\r\n                    token = _b.sent();\r\n                    if (token) {\r\n                        headers = (_a = {},\r\n                            _a[\"Authorization\"] = \"Bearer \" + token,\r\n                            _a);\r\n                    }\r\n                    _b.label = 2;\r\n                case 2:\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) sending data. \" + getDataDetail(content, logMessageContent) + \".\");\r\n                    responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n                    return [4 /*yield*/, httpClient.post(url, {\r\n                            content: content,\r\n                            headers: headers,\r\n                            responseType: responseType,\r\n                        })];\r\n                case 3:\r\n                    response = _b.sent();\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) request complete. Response status: \" + response.statusCode + \".\");\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nvar SubjectSubscription = /** @class */ (function () {\r\n    function SubjectSubscription(subject, observer) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n    SubjectSubscription.prototype.dispose = function () {\r\n        var index = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n        if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\r\n            this.subject.cancelCallback().catch(function (_) { });\r\n        }\r\n    };\r\n    return SubjectSubscription;\r\n}());\r\nexport { SubjectSubscription };\r\n/** @private */\r\nvar ConsoleLogger = /** @class */ (function () {\r\n    function ConsoleLogger(minimumLogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n        this.outputConsole = console;\r\n    }\r\n    ConsoleLogger.prototype.log = function (logLevel, message) {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.outputConsole.error(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.outputConsole.warn(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.outputConsole.info(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.outputConsole.log(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return ConsoleLogger;\r\n}());\r\nexport { ConsoleLogger };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, Platform } from \"./Utils\";\r\n/** @private */\r\nvar WebSocketTransport = /** @class */ (function () {\r\n    function WebSocketTransport(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logMessageContent = logMessageContent;\r\n        this.webSocketConstructor = webSocketConstructor;\r\n        this.httpClient = httpClient;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    WebSocketTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (token) {\r\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                            url = url.replace(/^http/, \"ws\");\r\n                            var webSocket;\r\n                            var cookies = _this.httpClient.getCookieString(url);\r\n                            if (Platform.isNode && cookies) {\r\n                                // Only pass cookies when in non-browser environments\r\n                                webSocket = new _this.webSocketConstructor(url, undefined, {\r\n                                    headers: {\r\n                                        Cookie: \"\" + cookies,\r\n                                    },\r\n                                });\r\n                            }\r\n                            if (!webSocket) {\r\n                                // Chrome is not happy with passing 'undefined' as protocol\r\n                                webSocket = new _this.webSocketConstructor(url);\r\n                            }\r\n                            if (transferFormat === TransferFormat.Binary) {\r\n                                webSocket.binaryType = \"arraybuffer\";\r\n                            }\r\n                            // tslint:disable-next-line:variable-name\r\n                            webSocket.onopen = function (_event) {\r\n                                _this.logger.log(LogLevel.Information, \"WebSocket connected to \" + url + \".\");\r\n                                _this.webSocket = webSocket;\r\n                                resolve();\r\n                            };\r\n                            webSocket.onerror = function (event) {\r\n                                var error = null;\r\n                                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                                    error = event.error;\r\n                                }\r\n                                reject(error);\r\n                            };\r\n                            webSocket.onmessage = function (message) {\r\n                                _this.logger.log(LogLevel.Trace, \"(WebSockets transport) data received. \" + getDataDetail(message.data, _this.logMessageContent) + \".\");\r\n                                if (_this.onreceive) {\r\n                                    _this.onreceive(message.data);\r\n                                }\r\n                            };\r\n                            webSocket.onclose = function (event) { return _this.close(event); };\r\n                        })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebSocketTransport.prototype.send = function (data) {\r\n        if (this.webSocket && this.webSocket.readyState === this.webSocketConstructor.OPEN) {\r\n            this.logger.log(LogLevel.Trace, \"(WebSockets transport) sending data. \" + getDataDetail(data, this.logMessageContent) + \".\");\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    };\r\n    WebSocketTransport.prototype.stop = function () {\r\n        if (this.webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this.webSocket.onclose = function () { };\r\n            this.webSocket.onmessage = function () { };\r\n            this.webSocket.onerror = function () { };\r\n            this.webSocket.close();\r\n            this.webSocket = undefined;\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this.close(undefined);\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    WebSocketTransport.prototype.close = function (event) {\r\n        // webSocket will be null if the transport did not start successfully\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (event && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(\"WebSocket closed with status code: \" + event.code + \" (\" + event.reason + \").\"));\r\n            }\r\n            else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    };\r\n    return WebSocketTransport;\r\n}());\r\nexport { WebSocketTransport };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nvar XhrHttpClient = /** @class */ (function (_super) {\r\n    __extends(XhrHttpClient, _super);\r\n    function XhrHttpClient(logger) {\r\n        var _this = _super.call(this) || this;\r\n        _this.logger = logger;\r\n        return _this;\r\n    }\r\n    /** @inheritDoc */\r\n    XhrHttpClient.prototype.send = function (request) {\r\n        var _this = this;\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = true;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n            var headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach(function (header) {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = function () {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = function () {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = function () {\r\n                _this.logger.log(LogLevel.Warning, \"Error from HTTP request. \" + xhr.status + \": \" + xhr.statusText + \".\");\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = function () {\r\n                _this.logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    };\r\n    return XhrHttpClient;\r\n}(HttpClient));\r\nexport { XhrHttpClient };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport var VERSION = \"3.0.0-preview6.19307.2\";\r\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nexport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { MessageType } from \"./IHubProtocol\";\r\nexport { LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nexport { Subject } from \"./Subject\";\r\n","import { FileItem, FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nexport class FileUploaderOneRequest extends FileUploader {\n\n    constructor(options: FileUploaderOptions) {\n        super(options);\n    }\n\n    uploadAllFiles(): XMLHttpRequest {\n\n        var xhr = new XMLHttpRequest();\n        var sendable = new FormData();\n        var fakeitem: FileItem = null;\n        this.onBuildItemForm(fakeitem, sendable);\n\n        for (const item of this.queue) {\n            item.isReady = true;\n            item.isUploading = true;\n            item.isUploaded = false;\n            item.isSuccess = false;\n            item.isCancel = false;\n            item.isError = false;\n            item.progress = 0;\n\n            if (typeof item._file.size !== 'number') {\n                throw new TypeError('The file specified is no longer valid');\n            }\n            sendable.append(\"files\", item._file, item.file.name);\n        }\n\n        if (this.options.additionalParameter !== undefined) {\n            Object.keys(this.options.additionalParameter).forEach((key) => {\n                sendable.append(key, this.options.additionalParameter[key]);\n            });\n        }\n\n        // xhr.onload = () => {\n        //     var gist = (xhr.status >= 200 && xhr.status < 300) || xhr.status === 304 ? 'Success' : 'Error';\n        //     var method = 'on' + gist + 'Item';\n        //     this[method](fakeitem, null, xhr.status, null);\n\n        // };\n        xhr.onerror = () => {\n            this.onErrorItem(fakeitem, null, xhr.status, null);\n        };\n\n        xhr.onabort = () => {\n            this.onErrorItem(fakeitem, null, xhr.status, null);\n        };\n\n        xhr.open(\"POST\", this.options.url, true);\n        xhr.withCredentials = true;\n        if (this.options.headers) {\n            for (var _i = 0, _a = this.options.headers; _i < _a.length; _i++) {\n                var header = _a[_i];\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n\n        // ---------------\n        xhr.onload = () => {\n            const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            const response = this._transformResponse(xhr.response, headers);\n            const gist = this._isSuccessCode(xhr.status) ? \"Success\" : \"Error\";\n            const method = \"_on\" + gist + \"Item\";\n            const queueLength = this.queue.length;\n            for (var i = 0; i < queueLength; i++) {\n                this[method](\n                    this.queue[this.queue.length - 1],\n                    response,\n                    xhr.status,\n                    headers\n                );\n                this._onCompleteItem(\n                    this.queue[this.queue.length - 1],\n                    response,\n                    xhr.status,\n                    headers\n                );\n            }\n        };\n        //------\n        xhr.send(sendable);\n        return xhr;\n    };\n\n\n    // this.uploader.uploadAllFiles().onreadystatechange = function () {\n    //   if(this.readyState==4){\n    //     if(this.status==200){\n    //       that.pciturePaths=JSON.parse(this.response).response;\n    //       console.log(JSON.parse(this.response).response);\n    //     }\n    //   }\n    // }\n\n}","import { User, UserIdAndNameDto } from './User';\n\nexport interface RatingAndReview {\n    id: number;\n    rowId: number;\n    type: RateType;\n    rating: number;\n    comment: string;\n    details: string;\n    createdDate: Date;\n    ratedUserId: number;\n    ratedUser: UserIdAndNameDto;\n    reviewerUserId: number;\n    reviewerUser: UserIdAndNameDto;\n}\n\nexport interface RatingTaskOrder {\n    id: number;\n    name: string;\n}\n\nexport interface RatingWorkerByEmployer {\n    id: number;\n    name: string;\n}\n\nexport interface RatingEmployerByWorker {\n    id: number;\n    name: string;\n}\n\nexport enum RateType {\n    General = 0,\n    ServiceProvider = 1,\n    EmployerRatingTheWorker = 2,\n    WorkerRatingTheEmployer = 3,\n}","\nexport interface UserSkillResult {\n    id: number;\n    skillId: number;\n    skill: SkillResult;\n}\n\nexport interface OfferSkillResult {\n    id: number;\n    skillId: number;\n    skill: SkillResult;\n}\n\nexport interface SkillResult {\n    id: number;\n    name: string;\n}\n\n\nexport interface SkillForListDto {\n    id: number;\n    name: string;\n    type: SkillType;\n}\n\n\n\nexport enum SkillType {\n    General = 0,\n    Personal = 1,\n}","import { catchError } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { UserService } from '../../_services/users/User.service';\nimport { User } from 'src/app/_models/Users/User';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { AccountService } from 'src/app/_services/users/account.service';\n\n@Injectable()\nexport class MemberProfileResolver implements Resolve<User> {\n    constructor(private accountService: AccountService, private router: Router, private alertiy: AlertifyService, private authService: AuthService) { }\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\n        let userId = 0;\n        if (route.paramMap.has('userId')) {\n            userId = +route.params['userId'];\n        }\n        else if (!route.paramMap.has('userId') && this.authService.loggedIn()) {\n            userId = this.authService.getCurrentUserIdUsingToken();\n        }\n        else\n            return of(null);\n\n        return this.accountService.getUserProfile(+userId).pipe(\n            catchError(error => {\n                this.alertiy.error('يوجد مشكلة في عرض بيانات المستخدم أو لا تملك صلاحية مخوله للوصول الى ملفه');\n                this.router.navigate(['']);\n                return of(null);\n            })\n        );\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Resolve, Router, ActivatedRouteSnapshot } from \"@angular/router\";\nimport { Observable, of } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { MessageResult } from 'src/app/_models/chats/message';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\n\n\n@Injectable()\nexport class MessageResolver implements Resolve<MessageResult[]>{\n    pageNumber = 1;\n    pageSize = 6;\n    messageType = 'Unread';\n    constructor(private authService: AuthService, private messagesService: MessagesService, private router: Router, private alertify: AlertifyService) { }\n    resolve(route: ActivatedRouteSnapshot): Observable<MessageResult[]> {\n        let userId = 0;\n        if (this.authService.loggedIn())\n            userId = this.authService.getCurrentUserIdUsingToken();\n        else\n            return of(null);\n\n        if (userId === 0)\n            return of(null);\n\n        return this.messagesService.getLastConversations(userId).pipe(\n            catchError(error => {\n                this.alertify.error('يوجد مشكلة في عرض الرسائل');\n                this.router.navigate(['']);\n                return of(null);\n            })\n        )\n    }\n}","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HubConnection, HttpTransportType, LogLevel, HubConnectionBuilder } from '@aspnet/signalr';\nimport { HttpClient } from '@angular/common/http';\nimport { DbKeysService } from 'src/app/_helpers/db-keys';\nimport * as signalR from '@aspnet/signalr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatsService {\n  baseUrl = environment.HubsUrl;\n  chatsUrl = `${this.baseUrl}/chats`;\n  connectionId: string;\n  // لان فيه مشاكل و تعارض مع ال WebSocket \n  // Object.defineProperty(WebSocket, 'OPEN', { value: 1, });\n  private options = { transport: HttpTransportType.ServerSentEvents, logging: LogLevel.Trace };\n  private isConnected: boolean = false;\n  hubConnection: HubConnection;\n\n  unreadMessagesBehavior = new BehaviorSubject<number>(0);\n  unreadMessages = this.unreadMessagesBehavior.asObservable();\n\n  UnUsedCodeBehavior = new BehaviorSubject<number>(0);\n  UnUsedCode = this.UnUsedCodeBehavior.asObservable();\n\n  constructor(private http: HttpClient) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(`${this.chatsUrl}`, this.getRequestOptions())\n      .configureLogging(signalR.LogLevel.Information)\n      .withAutomaticReconnect()\n      .build();\n  }\n\n  startChatHubConnection() {\n    this.hubConnection.start()\n      // من خلال هذا السطر بامكاننا تفعيل التنصت بعد الاتصال بالسيرفر من اجل عدم ظهور خطأ في حالة تأخر الاتصال\n      .then(() => {\n        this.isConnected = true;\n        this.invokeConnectionId()\n      })\n      .catch(err => console.log('Error while establishing connection :('));\n  }\n\n  private getRequestOptions(): any {\n    const auth_token = localStorage.getItem(DbKeysService.ACCESS_TOKEN);\n    const headers = new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': auth_token,\n    })\n    return { headers: headers, transport: HttpTransportType.ServerSentEvents, logging: LogLevel.Trace, accessTokenFactory: () => auth_token };\n  }\n\n  public invokeNewMessage = () => {\n    this.hubConnection.invoke('newMessage', 'this.connectionId');\n  }\n\n  public invokeConnectionId = () => {\n    this.hubConnection.invoke('getconnectionid').then(\n      (data) => {\n        console.log('connectionId:', data);\n        this.connectionId = data;\n      }\n    );\n  }\n\n  startJoinGroupHubConnection(groupName: string) {\n    if (this.isConnected === true) {\n      this.invokeJoinGroup(groupName);\n    } else {\n      this.hubConnection.start()\n        // من خلال هذا السطر بامكاننا تفعيل التنصت بعد الاتصال بالسيرفر من اجل عدم ظهور خطأ في حالة تأخر الاتصال\n        .then(() => {\n          this.isConnected = true;\n          this.invokeJoinGroup(groupName);\n        })\n        .catch(err => console.log('Error while establishing connection :('));\n    }\n  }\n\n  invokeJoinGroup(groupName: string) {\n    // console.log('الانضمام الى المجموعة:', groupName);\n    this.hubConnection.invoke('joinGroup', groupName);\n  }\n\n  registeringCurrentUserToHubConnection() {\n    if (this.isConnected === true) {\n     // this.invokeJoinCurrentUser();\n    } else {\n      this.hubConnection.start()\n        // من خلال هذا السطر بامكاننا تفعيل التنصت بعد الاتصال بالسيرفر من اجل عدم ظهور خطأ في حالة تأخر الاتصال\n        .then(() => {\n          this.isConnected = true;\n        //  this.invokeJoinCurrentUser();\n        })\n        .catch(err => console.log('Error while establishing connection :('));\n    }\n  }\n\n  invokeJoinCurrentUser() {\n    this.hubConnection.invoke('getUserId').then(\n      (data) => {\n        console.log('User Id:', data);\n        this.connectionId = data;\n      }\n    );\n  }\n\n  public broadcastChartData = () => {\n    this.hubConnection.invoke('broadcastchartdata', \"this.data\", this.connectionId)\n      .catch(err => console.error(err));\n  }\n\n  getDefultValuesHubConnection() {\n    this.hubConnection.on('refresh', () => {\n      setTimeout(() => {\n        // this.countSupportRequests().subscribe(res => { this.unreadMessagesBehavior.next(res.toString()); });\n        // this.countTicketsNeedOfficeSupportApproval().subscribe(\n        //   res => {\n        //     this.UnUsedCodeBehavior.next(res.toString());\n        //     console.log('hubConnectionCountTicket');\n        //   });\n      }, 0);\n    });\n  }\n\n  // لها استخدامين \n  //أما تنبيه النظام بتفعيلها بأمر من متصفح المستحدم بشكل يدوي\n  // أو تجاهل هذه الفكشن و يتم تفعيلها من قبل الكنترولر في السيرفر بدون تدخل من متصفح المستخدم\n  invokeNewMessageConnection() {\n    this.hubConnection.invoke('newMessage');\n  }\n\n  invokeRefreshConnection() {\n    this.hubConnection.invoke('refresh');\n  }\n\n  invokeCountConnection() {\n    this.hubConnection.invoke('count');\n  }\n}\n\n\n// طرق الاستخدام \n// 1)\n// this.chatsService.hubConnection.on('refresh', (...data) => {\n//   console.log('data:', data);\n// });\n//------------------\n// 2)\n// this.chatsService.hubConnection.on('refresh', () => {\n//   load or do SomeThing;\n// });","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { MessageResult, Message } from 'src/app/_models/chats/message';\nimport { PaginationResult } from 'src/app/_models/data/Pagination';\nimport { Utilities } from '../utilities.service';\nimport { MessageParams } from 'src/app/_models/chats/message-params';\nimport { MessageWithObject } from 'src/app/_models/data/actions-result';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagesService {\n  baseUrl = environment.ApiUrl;\n  constructor(private http: HttpClient) { }\n\n  getMessage(senderId: number, messageId: number): Observable<MessageResult> {\n    return this.http.get<MessageResult>(`${this.baseUrl}Users/${senderId}/messages/${messageId}`);\n  }\n\n  getMessages(senderId: number): Observable<MessageResult[]> {\n    return this.http.get<MessageResult[]>(`${this.baseUrl}Users/${senderId}/messages`);\n  }\n\n  getPagedMessages(senderId: number, query?: MessageParams): Observable<PaginationResult<MessageResult[]>> {\n    return Utilities.getPaginationResult<MessageResult>(this.http, `${this.baseUrl}Users/${senderId}/messages`, query);\n  }\n\n  getCurrentConversationId(senderId: number, recipientId: number): Observable<MessageWithObject> {\n    return this.http.get<MessageWithObject>(`${this.baseUrl}Users/${senderId}/messages/chats/conversations/id/${recipientId}`);\n  }\n\n  getConversation(senderId: number, recipientId: number) {\n    return this.http.get<MessageResult[]>(`${this.baseUrl}Users/${senderId}/messages/chats/${recipientId}`);\n  }\n\n  checkIfCurrentUserCanStartChatWithTheOtherUser(currentUserId: number, targetUserId: number): Observable<MessageWithObject> {\n    return this.http.get<MessageWithObject>(`${this.baseUrl}Users/${currentUserId}/messages/allows/${targetUserId}`);\n  }\n\n  getLastConversations(senderId: number, query?: MessageParams) {\n    return Utilities.getPaginationResult<MessageResult>(this.http, `${this.baseUrl}Users/${senderId}/messages/chats`, query);\n  }\n\n  sendMessage(senderId: number, message: Message) {\n    return this.http.post(`${this.baseUrl}Users/${senderId}/messages`, message);\n  }\n\n  getUnreadCount(senderId) {\n    return this.http.get(`${this.baseUrl}Users/${senderId}/messages/count`);\n  }\n\n  markAsRead(senderId: number, messageId: number) {\n    return this.http.post(`${this.baseUrl}Users/${senderId}/messages/read/${messageId}`, {}).subscribe();\n  }\n\n  deleteMessage(id: number, senderId: number) {\n    return this.http.post(`${this.baseUrl}Users/${senderId}/messages/${id}`, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { KeyValueChildsPairResource, KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EducationDegreesService {\n  baseUrl = environment.ApiUrl;\n  educationDegreesUrl = `${this.baseUrl}educationDegrees`;\n\n  constructor(private http: HttpClient) { }\n  \n  getEducationDegreesAsList(): Observable<KeyValueChildsPairResource[]> {\n    return this.http.get<KeyValueChildsPairResource[]>(`${this.educationDegreesUrl}/list`);\n  }\n\n  getCertificatesAsList(): Observable<KeyValuePairResource[]> {\n    return this.http.get<KeyValuePairResource[]>(`${this.educationDegreesUrl}/Certificates/list`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HobbiesService {\n\tbaseUrl = environment.ApiUrl ;\n\thobbiesUrl = `${this.baseUrl}hobbies`;\n\n\tconstructor(private http: HttpClient) { }\n\n  getHobbiesAsList(): Observable<KeyValuePairResource[]> {\n    return this.http.get<KeyValuePairResource[]>(`${this.hobbiesUrl}/list`);\n  }\n  \n  \n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguagesService {\n\tbaseUrl = environment.ApiUrl ;\n\tlanguagesUrl = `${this.baseUrl}languages`;\n\n\tconstructor(private http: HttpClient) { }\n\n\tgetLanguage(id: number): Observable<any> {\n\t\treturn this.http.get<any>(`${this.languagesUrl}/${id}`);\n\t}\n\n  getLanguagesAsList(): Observable<KeyValuePairResource[]> {\n    return this.http.get<KeyValuePairResource[]>(`${this.languagesUrl}/list`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { KeyValueChildsPairResource } from 'src/app/_models/data/key-value-pair-resource';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MajorsService {\n  baseUrl = environment.ApiUrl;\n  majorsUrl = `${this.baseUrl}majors`;\n\n  constructor(private http: HttpClient) { }\n\n  getMajorsAsList(): Observable<KeyValueChildsPairResource[]> {\n    return this.http.get<KeyValueChildsPairResource[]>(`${this.majorsUrl}/list`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniversitiesService {\n\tbaseUrl = environment.ApiUrl ;\n\tuniversitiesUrl = `${this.baseUrl}universities`;\n\n\tconstructor(private http: HttpClient) { }\n\n\n\tgetUniversity(id: number): Observable<any> {\n\t\treturn this.http.get<any>(`${this.universitiesUrl}/${id}`);\n  }\n  \n  getUniversitiesAsList(): Observable<KeyValuePairResource[]> {\n    return this.http.get<KeyValuePairResource[]>(`${this.universitiesUrl}/list`);\n  }\n\t\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { BusinessAccount, BusinessAccountResult } from 'src/app/_models/Users/business-account';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class BusinessAccountsService {\n\tbaseUrl = environment.ApiUrl;\n\tbusinessAccountsUrl = `${this.baseUrl}Accounts/business`;\n\n\tconstructor(private http: HttpClient) { }\n\n\t// getUserBusinessAccount(userId: number): Observable<UserBusinessAccount> {\n\t// \treturn this.http.get<UserBusinessAccount>(`${this.businessAccountsUrl}/${userId}`);\n\t// }\n\n\n\tsentTextDate(data: any) {\n\t\treturn this.http.post(`${this.baseUrl}StudentAccounts`, data);\n\t}\n\n\tgetBusinessAccount(userId: number): Observable<BusinessAccount> {\n\t\treturn this.http.get<BusinessAccount>(`${this.businessAccountsUrl}/${userId}`);\n\t}\n\n\tupdateBusinessAccount(userId: number, updatedBusinessAccount: BusinessAccountResult): Observable<BusinessAccount> {\n\t\tconsole.log(userId);\n\t\treturn this.http.put<BusinessAccount>(`${this.businessAccountsUrl}/${userId}`, updatedBusinessAccount);\n\t}\n\n\n}","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpEventType } from '@angular/common/http';\nimport { Portfolio } from 'src/app/components/profile/models/portfolio';\nimport { Observable } from 'rxjs';\nimport { UploadStatus } from 'src/app/_helpers/uploader/uploadHandlerResult';\nimport { map } from 'rxjs/operators';\nimport { Utilities } from '../utilities.service';\nimport { PaginationResult } from 'src/app/_models/data/Pagination';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PortfoliosService {\n  baseUrl = environment.ApiUrl;\n  portfoliosUrl = `${this.baseUrl}portfolios`;\n\n  constructor(private http: HttpClient) { }\n\n  addNew(newPortfolio: Portfolio): Observable<any> {\n    return this.http.post<any>(`${this.portfoliosUrl}`, newPortfolio);\n  }\n\n  addNewWithFile(data: FormData) {\n    const uploadURL = `${this.portfoliosUrl}/files`;\n    const headers = new HttpHeaders().append('Content-Disposition', 'multipart/form-data');\n    return this.http.post<any>(uploadURL, data, {\n      headers: headers,\n      reportProgress: true,\n      observe: 'events'\n    }).pipe(map((event) => {\n      switch (event.type) {\n        case HttpEventType.UploadProgress:\n          const progress = Math.round(100 * event.loaded / event.total);\n          return { status: UploadStatus.progress, message: progress };\n        case HttpEventType.Response:\n          return event.body;\n        default:\n          return `Unhandled event: ${event.type}`;\n      }\n    })\n    );\n  }\n\n  updatePortfolio(updatedPortfolio: Portfolio): Observable<Portfolio> {\n    return this.http.put<Portfolio>(`${this.portfoliosUrl}`, updatedPortfolio);\n  }\n\n  getPortfolio(id: number): Observable<Portfolio> {\n    return this.http.get<Portfolio>(`${this.portfoliosUrl}/${id}`);\n  }\n\n  getPortfolios(): Observable<Portfolio[]> {\n    return this.http.get<Portfolio[]>(this.portfoliosUrl);\n  }\n\n  getPagedPortfolios(query: any): Observable<PaginationResult<Portfolio[]>> {\n    return Utilities.getPaginationResult<Portfolio>(this.http, `${this.portfoliosUrl}/Pages`, query);\n  }\n\n  setMainPhoto(portfolioId: number, photoId: number) {\n    return this.http.put(`${this.portfoliosUrl}/${portfolioId}/photos/${photoId}/setMain`, {});\n  }\n\n  deletePhoto(portfolioId: number, photoId: number) {\n    return this.http.delete(`${this.portfoliosUrl}/${portfolioId}/photos/${photoId}`);\n  }\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { VisitorAccountUpdate } from 'src/app/_models/Users/visitor-account';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisitorAccountsService {\n  baseUrl = environment.ApiUrl;\n  visitorAccountsUrl = `${this.baseUrl}Accounts/visitors`;\n\n  constructor(private http: HttpClient) { }\n\n  getVisitorAccount(id: number): Observable<VisitorAccountUpdate> {\n    return this.http.get<any>(`${this.visitorAccountsUrl}/${id}`);\n  }\n  \n\n  updateVisitorAccount(userId: number, updatedAccount: VisitorAccountUpdate): Observable<any> {\n    return this.http.put<any>(`${this.visitorAccountsUrl}/${userId}`, updatedAccount);\n  }\n}","<div class=\"profile-details px-2 py-2 bg-silver\">\n    <ul class=\"list-unstyled\">\n        <li *ngIf=\"isShortDetails\" class=\"d-flex\"><i class=\"fa fa-archive pl-1\"></i><span class=\"px-1 ml-1\">الرصيد المتبقي:</span><span class=\"number\">{{accountBalance?.remainingBalance}} من {{accountBalance?.employmentBags}}</span></li>\n        <li *ngIf=\"!isShortDetails\" class=\"d-flex\"><i class=\"fa fa-archive pl-1\"></i><span class=\"px-1 ml-1\">الرصيد المتبقي:</span><span class=\"number\">{{accountBalance?.remainingBalance}} من {{accountBalance?.employmentBags}} حقيبة توظيف</span></li>\n        <li *ngIf=\"!isShortDetails\" class=\"d-flex\"><i class=\"fa fa-briefcase pl-1\"></i><span class=\"px-1 ml-1\">حقائب محجوزه في طلبات العروض: </span><span class=\"number\">{{accountBalance?.lockedBalance}}</span></li>\n        <li *ngIf=\"!isShortDetails\" class=\"d-flex\">\n          <i class=\"fa fa-id-card pl-1\"></i><span class=\"px-1 ml-1\"> انتهاء الاشتراك الخاص بك: </span>\n          <span class=\"number\">{{accountBalance?.expireAt | date:'yyyy/MM/dd'}}</span>\n        </li>\n\n        <li class=\"d-flex\"><i class=\"fa fa-id-card pl-1\"></i><span class=\"px-1 ml-1\"> الحالة: </span></li>\n        <li class=\"d-flex\"><span class=\"number\">{{accountBalance?.message}}</span></li>\n    </ul>\n    <div *ngIf=\"isCurrentUserProfile\" class=\"profile-message-btn center-block text-center\">\n      <a class=\"btn btn-block btn-sm py-1 px-2 p btn-primary text-white\" (click)=\"showAccountBalanceTab()\">\n          <i class=\"fa fa-briefcase\"></i> تفاصيل أكثر\n      </a>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AccountEmploymentBagsBalance } from 'src/app/components/jobs/_models/job-offer';\nimport { JobOffersService } from 'src/app/components/jobs/_services/job-offers.service';\n\n@Component({\n  selector: 'app-business-account-balance',\n  templateUrl: './business-account-balance.component.html',\n  styleUrls: ['./business-account-balance.component.css']\n})\nexport class BusinessAccountBalanceComponent implements OnInit {\n  @Output() changeTab: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Input() isCurrentUserProfile: boolean;\n  @Input() isShortDetails: boolean = false;\n  accountBalance: AccountEmploymentBagsBalance;\n  constructor(private jobOffersService :JobOffersService) { }\n\n  ngOnInit(): void {\n    this.loadAccountBalance();\n  }\n\n  loadAccountBalance() {\n    this.jobOffersService.getCurrentAccountJobOffersBalance().subscribe(\n      (result: AccountEmploymentBagsBalance) => {\n         this.accountBalance = result;\n      },\n      error => {\n        // this.alertify.error(error);\n      }\n    );\n  }\n\n  showAccountBalanceTab() {\n    this.changeTab.emit(true);\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BusinessAccountResult } from 'src/app/_models/Users/business-account';\n\n@Component({\n  selector: 'app-business-account-details',\n  templateUrl: './business-account-details.component.html',\n  styleUrls: []\n})\nexport class BusinessAccountDetailsComponent implements OnInit {\n  @Input('BusinessAccountData') accountData: BusinessAccountResult;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"\">\n\t<div class=\"form-group\">\n\t\t<label id=\"lblCap_ronlyVewAbout\" for=\"ronlyVewAbout\" class=\"hidden-xs profile-info-title\" >{{'users.Business.About' | translate }}</label>\n\t\t<p class=\"form-control-plaintext text-justify profile-info-details\">{{accountData?.about}}  </p>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label id=\"lblCap_ronlyVewVision\" for=\"ronlyVewVision\" class=\"hidden-xs profile-info-title\" >{{'users.Business.Vision' | translate }}</label>\n\t\t<p class=\"form-control-plaintext text-justify profile-info-details\">{{accountData?.vision}}</p>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label id=\"lblCap_ronlyVewMessage\" for=\"ronlyVewMessage\" class=\"hidden-xs profile-info-title\" >{{'users.Business.Message' | translate }}</label>\n\t\t<p class=\"form-control-plaintext text-justify profile-info-details\">{{accountData?.message}}</p>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label id=\"lblCap_ronlyVewAddress\" for=\"ronlyVewAddress\" class=\"hidden-xs profile-info-title\" >{{'users.Business.Address' | translate }}</label>\n\t\t<p class=\"form-control-plaintext profile-info-details\">{{accountData?.address}}</p>\n\t</div>\n</div>\n","<app-breadcrumbs title=\"\" currentPageTitle=\"{{userProfile.fullName}}\"></app-breadcrumbs>\n\n<!-- ======= member profile ======= -->\n<section id=\"profile\" class=\"profile\">\n    <div class=\"container\">\n        <div class=\"row\" id=\"user-profile\">\n            <div class=\"col-lg-3 col-md-4 col-sm-4 p-0\">\n                <div class=\"main-box\">\n                    <h4 class=\"user-name\">{{userProfile.fullName}}</h4>\n                    <div class=\"profile-status\">\n                        <!-- <i class=\"fa fa-check-circle\"></i> نشط الأن -->\n                    </div>\n\n                    <app-profile-image [UserProfileData]=\"userProfile\" ></app-profile-image>\n                    <app-profile-stars [Rating]=\"userProfile?.totalRating\"></app-profile-stars>\n                    <app-since-profile [MemberSince]=\"userProfile?.createdDate\" [LastActivity]=\"userProfile?.lastActive\"></app-since-profile>\n                    <app-business-account-balance [isCurrentUserProfile]=\"isCurrentUserProfile\" (changeTab)=\"showAccountBalanceTab(tabContent)\" [isShortDetails]=\"true\"></app-business-account-balance>\n                    <app-business-counters></app-business-counters>\n                    <div *ngIf=\"!isCurrentUserProfile\" class=\"profile-message-btn center-block text-center\">\n                        <a class=\"btn btn-success text-white\" (click)=\"showChatBox(tabContent)\">\n                            <i class=\"fa fa-envelope\"></i> {{'Chatbox.SendMessage' | translate }}\n                        </a>\n                    </div>\n\n                </div>\n            </div>\n\n            <div class=\"col-lg-9 col-md-8 col-sm-8 p-0 px-md-2\">\n                <div class=\"main-box \">\n                    <ul class=\"nav nav-tabs\" id=\"user-tab\" role=\"tablist\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link active\" id=\"about-user-tab\" data-toggle=\"tab\" href=\"#aboutUser\" role=\"tab\" aria-controls=\"about-user-tab\" aria-selected=\"true\">بياناتي</a>\n                        </li>\n                        <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"ratings-history-tab\" data-toggle=\"tab\" href=\"#ratings-history\" role=\"tab\" aria-controls=\"ratings-history\" aria-selected=\"false\">التقييمات</a>\n                        </li>\n                        <li class=\"nav-item\" *ngIf=\"isCurrentUserProfile\">\n                          <a #accountBalanceTab class=\"nav-link\" id=\"account-balance-tab\" data-toggle=\"tab\" href=\"#account-balance\" role=\"tab\" aria-controls=\"account-balance\" aria-selected=\"false\">الاشتراكات</a>\n                        </li>\n                        <li class=\"nav-item\" *ngIf=\"!isCurrentUserProfile\">\n                          <a #chatboxTab class=\"nav-link\" id=\"chatbox-tab\" data-toggle=\"tab\" href=\"#chatbox\" role=\"tab\" aria-controls=\"chatbox\" aria-selected=\"false\">المحادثة</a>\n                        </li>\n                    </ul>\n\n                    <div #tabContent class=\"tab-content  p-2\" id=\"myTabContent\">\n                        <div class=\"tab-pane fade show active\" id=\"aboutUser\" role=\"tabpanel\" aria-labelledby=\"about-user-tab\">\n                            <div class=\"d-flex justify-content-between align-items-start mb-2\">\n                                <h4 class=\"text-left\"><span class=\"section-header-behind-line behind-line-gray px-2 pb-1\"> نبذة عامة </span></h4>\n                                <a *ngIf=\"isCurrentUserProfile\" [routerLink]=\"['/profile' , 'business', 'edit' ]\" class=\"btn btn-primary btn-sm edit-profile\">\n                                    <i class=\"fa fa-pencil-square fa-lg\"></i> {{'Common.CRUD.Update' | translate }}\n                                </a>\n                            </div>\n                            <app-business-account-details [BusinessAccountData]=\"userProfile.businessAccountData\"></app-business-account-details>\n                            <app-member-contact *ngIf=\"userProfile?.displayContactInfo\" [UserProfileData]=\"userProfile\"></app-member-contact>\n                        </div>\n\n                        <div class=\"tab-pane fade\" id=\"ratings-history\" role=\"tabpanel\" aria-labelledby=\"ratings-history-tab\">\n                            <app-rating-and-reviews-list [RatingsAndReviews]=\"userProfile.ratingsGot\"></app-rating-and-reviews-list>\n                        </div>\n\n                        <div class=\"tab-pane fade\" id=\"account-balance\" role=\"tabpanel\" aria-labelledby=\"account-balance-tab\">\n                            <app-business-account-balance [isShortDetails]=\"false\"></app-business-account-balance>\n                        </div>\n\n                        <div *ngIf=\"!isCurrentUserProfile\" class=\"tab-pane fade profile-chatbox\" id=\"chatbox\" role=\"tabpanel\" aria-labelledby=\"chatbox-tab\">\n                          <ng-container *ngIf=\"!isCurrentUserCanStartConversationWithThisUser; else conversationBox\">\n                              <div *ngIf=\"conversationNotAllowed\"  class=\"alert alert-danger text-center\" role=\"alert\">{{conversationNotAllowed}}</div>\n                              <div *ngIf=\"!conversationNotAllowed\"  class=\"alert alert-warning text-center\" role=\"alert\"><span class=\"spinner-border spinner-border-sm\" role=\"status\"></span>&nbsp;&nbsp;{{'Common.Data.Loading' | translate}}</div>\n                          </ng-container>\n                          <ng-template #conversationBox>\n                            <app-conversation-box [RecipientId]=\"userProfile?.id\" [RecipientGender]=\"userProfile?.gender\"></app-conversation-box>\n                          </ng-template>\n                        </div>\n\n                      </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- End member profile -->\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { UserService } from 'src/app/_services/users/User.service';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\nimport { MessageWithObject } from 'src/app/_models/data/actions-result';\n\n@Component({\n  selector: 'app-business-account-profile',\n  templateUrl: './business-account-profile.component.html',\n  styleUrls: []\n})\nexport class BusinessAccountProfileComponent implements OnInit {\n  @Input() userProfile: UserProfileResult;\n  @ViewChild('chatboxTab') chatboxTab: ElementRef<HTMLElement>;\n  @ViewChild('accountBalanceTab') accountBalanceTab: ElementRef<HTMLElement>;\n  isCurrentUserCanStartConversationWithThisUser: boolean = false;\n  conversationNotAllowed: string = null;\n\n  constructor(private router: Router, private route: ActivatedRoute, private userService: UserService, private appTranslation: AppTranslationService,\n    private alertify: AlertifyService, private authService: AuthService, private messagesService: MessagesService) { }\n\n  ngOnInit(): void {\n    return\n    if (!this.userProfile) {\n      this.alertify.warning('يوجد مشكلة في عرض بيانات المستخدم أو لا تملك صلاحية مخوله للوصول الى ملفه');\n      this.router.navigate(['']);\n    } else {\n      this.checkIfCurrentUserCanStartChat();\n    }\n  }\n\n  checkIfCurrentUserCanStartChat() {\n    if (!this.isCurrentUserProfile) {\n      this.messagesService.checkIfCurrentUserCanStartChatWithTheOtherUser(this.authService.currentUser.id, this.userProfile.id).subscribe(\n        (result: MessageWithObject) => {\n          if (result.data === true)\n            this.isCurrentUserCanStartConversationWithThisUser = true;\n          else\n            this.conversationNotAllowed = result.message;\n        },\n        error => {\n          this.conversationNotAllowed = error;\n          this.isCurrentUserCanStartConversationWithThisUser = false;\n        }\n      );\n    }\n  }\n\n  get isCurrentUserProfile(): boolean {\n    return this.authService.isCurrentUserProfile(this.userProfile.id);\n  }\n\n  showChatBox(tabContent: HTMLElement) {\n    this.chatboxTab.nativeElement.click()\n    this.accountBalanceTab.nativeElement.click()\n  }\n\n  showAccountBalanceTab(tabContent: HTMLElement) {\n    tabContent.scrollIntoView();\n    this.accountBalanceTab.nativeElement.click()\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-business-counters',\n  templateUrl: './business-counters.component.html',\n  styleUrls: []\n})\nexport class BusinessCountersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-breadcrumbs title=\"{{userProfile.fullName || userProfile.enFullName }}\" currentPageTitle=\"{{userProfile.fullName || userProfile.enFullName }}\"></app-breadcrumbs>\n\n<article id=\"profile\" class=\"content\">\n    <div class=\"container\">\n        <!-- start Normal Edt BootStrap Form -->\n        <form id =\"formEdtExtendedBusinessAccount\" [formGroup]=\"edtBusinessAccountForm\" (ngSubmit)=\"editBusinessAccount()\">\n            <div class=\"card\">\n                <!-- <div class=\"card-header bg-info\">\n                    <h5><span class=\"fa fa-pencil\"></span>&nbsp;{{'users.Business.businessAccount' | translate }}</h5>\n                </div> -->\n                <div class=\"card-body\">\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-5\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Profile.GeneralInfo' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-group\">\n                        <label id=\"lblCap_txtEditArFullName\" for=\"txtEditArFullName\" class=\"font-weight-bold\" >{{'users.Business.ArFullName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                        <input id=\"txtEditArFullName\" name=\"txtEditArFullName\"  class= \"form-control default\"  maxlength=\"100\" formControlName=\"arFullName\" placeholder= \"{{'users.Business.NamePlaceHolder' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arFullName.errors && updateValidator.arFullName.touched}\"  >\n                        <div *ngIf=\"updateValidator.arFullName.touched && updateValidator.arFullName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"updateValidator.arFullName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label id=\"lblCap_txtEditEnFullName\" for=\"txtEditEnFullName\" class=\"font-weight-bold\" >{{'users.Business.EnFullName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                        <input id=\"txtEditEnFullName\" name=\"txtEditEnFullName\"  \n                        class= \"form-control default\"  maxlength=\"100\" formControlName=\"enFullName\" \n                        placeholder= \"{{'users.Business.NamePlaceHolder' | translate }}\" \n                        [ngClass]=\"{'is-invalid' : updateValidator.enFullName.errors && updateValidator.enFullName.touched}\"\n                        >\n                        <div *ngIf=\"updateValidator.enFullName.touched && updateValidator.enFullName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"updateValidator.enFullName.errors.pattern\">{{'Common.Validation.EnglishName' | translate }}</div>\n                            <div *ngIf=\"updateValidator.enFullName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\"><i class=\"fa fa-building\"></i>&nbsp;{{'users.Business.City' | translate }}</span>\n                            </div>\n                            <select id=\"ddlAddCityId\" name=\"ddlAddCityId\" formControlName=\"cityId\" class=\"form-control\" [ngClass]=\"{'is-invalid' : updateValidator.cityId.errors && updateValidator.cityId.touched }\">\n                                <option value=\"0\" disabled>{{'Common.Form.ChooseFromMenu' | translate }}</option>\n                                <option *ngFor=\"let city of citiesList\" value=\"{{city.id}}\">{{city.name}}</option>\n                            </select>\n                            <div *ngIf=\"updateValidator.cityId.touched && updateValidator.cityId.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.cityId.errors.required\">{{'Common.Validation.SelectedRequiredMsg' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label id=\"lblCap_txtEditAddress\" for=\"txtEditAddress\" class=\"font-weight-bold\" >{{'users.Business.Address' | translate }}</label>\n                        <textarea id=\"txtEditAddress\" name=\"txtEditAddress\" class= \"form-control default\" rows=\"2\"  maxlength=\"300\" formControlName=\"address\" placeholder= \"{{'Common.Form.MaxThreeHundred' | translate:{'value': 'users.Business.Address' | translate} }}\"></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                        <label id=\"lblCap_txtEditAbout\" for=\"txtEditAbout\" class=\"font-weight-bold\" >{{'users.Business.About' | translate }}</label>\n                        <textarea id=\"txtEditAbout\" name=\"txtEditAbout\" class= \"form-control default\" rows=\"5\"  maxlength=\"1000\" formControlName=\"about\" placeholder= \"{{'Common.Form.MaxThousand' | translate:{'value': 'users.Business.About' | translate} }}\"></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                        <label id=\"lblCap_txtEditVision\" for=\"txtEditVision\" class=\"font-weight-bold\" >{{'users.Business.Vision' | translate }}</label>\n                        <textarea id=\"txtEditVision\" name=\"txtEditVision\" class= \"form-control default\" rows=\"3\"  maxlength=\"1000\" formControlName=\"vision\" placeholder= \"{{'Common.Form.MaxThousand' | translate:{'value': 'users.Business.Vision' | translate} }}\" ></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                        <label id=\"lblCap_txtEditMessage\" for=\"txtEditMessage\" class=\"font-weight-bold\" >{{'users.Business.Message' | translate }}</label>\n                        <textarea id=\"txtEditMessage\" name=\"txtEditMessage\" class= \"form-control default\" rows=\"3\"  maxlength=\"1000\" formControlName=\"message\" placeholder= \"{{'Common.Form.MaxThousand' | translate:{'value': 'users.Business.Message' | translate} }}\" ></textarea>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'SocialMedias.Title' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\"><span class=\"fa fa-instagram\"></span></span>\n                            </div>\n                                <input id=\"txtEditInstagram\" name=\"txtEditInstagram\"  class= \"form-control default\"  formControlName=\"instagram\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Instagram' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.instagram.errors && updateValidator.instagram.touched}\"  >\n                                <div *ngIf=\"updateValidator.instagram.touched && updateValidator.instagram.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.instagram.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-linkedin-square\"></span></span>\n                                </div>\n                                <input id=\"txtEditLinkedin\" name=\"txtEditLinkedin\"  class= \"form-control default\"  formControlName=\"linkedin\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Linkedin' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.linkedin.errors && updateValidator.linkedin.touched}\"  >\n                                <div *ngIf=\"updateValidator.linkedin.touched && updateValidator.linkedin.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.linkedin.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-twitter\"></span></span>\n                                </div>\n                                <input id=\"txtEditTwitter\" name=\"txtEditTwitter\"  class= \"form-control default\"  formControlName=\"twitter\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Twitter' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.twitter.errors && updateValidator.twitter.touched}\"  >\n                                <div *ngIf=\"updateValidator.twitter.touched && updateValidator.twitter.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.twitter.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-facebook-square\"></span></span>\n                                </div>\n                                <input id=\"txtEditFacebook\" name=\"txtEditFacebook\"  class= \"form-control default\"  formControlName=\"facebook\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Facebook' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.facebook.errors && updateValidator.facebook.touched}\"  >\n                                <div *ngIf=\"updateValidator.facebook.touched && updateValidator.facebook.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.facebook.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer text-right\">\n                <button id=\"btnEdtExtendedBusinessAccount\" class=\"btn btn-success\" [disabled]=\"isSubmitting || !edtBusinessAccountForm.valid\" type=\"submit\">\n                    <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n                    <i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.UpdateData' | translate}}&nbsp;\n                </button>\n                </div>\n            </div>\n        </form><!-- End Normal Edt BootStrap Form -->\n    </div>\n</article>\n\n\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { BusinessAccountsService } from 'src/app/_services/users/business-accounts.service';\nimport { BusinessAccount } from 'src/app/_models/Users/business-account';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { LocationsService } from 'src/app/_services/settings/locations.service';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { UserBusinessProfile } from '../../models/user-business-profile';\n\n@Component({\n  selector: 'app-edit-business-account',\n  templateUrl: './edit-business-account.component.html',\n  styleUrls: []\n})\nexport class EditBusinessAccountComponent implements OnInit {\n  userProfile: UserBusinessProfile;\n  edtBusinessAccountForm: FormGroup;\n  isSubmitting: boolean = false;\n  businessAccount = {};\n  citiesList: KeyValuePairResource[] = [];\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private locationsService: LocationsService,\n    private businessAccountsService: BusinessAccountsService) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.userProfile = data['user'];\n      console.log(this.userProfile);\n    });\n    this.initEdtForm();\n    this.loadCitiesList();\n  }\n\n  loadCitiesList() {\n    this.locationsService.getCitiesList().subscribe(\n      result => { this.citiesList = result; },\n      error => { this.alertify.error(error); }\n    );\n  }\n\n  initEdtForm() {\n    this.edtBusinessAccountForm = this.formBuilder.group({\n      id: [this.userProfile.id, Validators.required],\n      arFullName: [this.userProfile.arFullName ?? this.userProfile.fullName, Validators.required],\n      enFullName: [this.userProfile.enFullName, [Validators.required,Validators.pattern(RegularExpression.EnglishLettersRegExp)]],\n      cityId: [this.userProfile.cityId, Validators.required],\n      address: [this.userProfile.businessAccountData?.address, Validators.maxLength(300)],\n      about: [this.userProfile.businessAccountData?.about, Validators.maxLength(1000)],\n      vision: [this.userProfile.businessAccountData?.vision, Validators.maxLength(1000)],\n      message: [this.userProfile.businessAccountData?.message, Validators.maxLength(1000)],\n      instagram: [this.userProfile.socialMediaAccounts?.instagram, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      linkedin: [this.userProfile.socialMediaAccounts?.linkedin, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      twitter: [this.userProfile.socialMediaAccounts?.twitter, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      facebook: [this.userProfile.socialMediaAccounts?.facebook, Validators.pattern(RegularExpression.SocialMediaAccounts)]\n    });\n    if (this.businessAccount) { this.edtBusinessAccountForm.patchValue(this.businessAccount); }\n  }\n\n  get updateValidator() { return this.edtBusinessAccountForm.controls; }\n\n  editBusinessAccount() {\n    this.edtBusinessAccountForm.valid;\n    if (this.edtBusinessAccountForm.valid) {\n      this.isSubmitting = true;\n      this.edtBusinessAccountForm.disable();\n      this.businessAccountsService.updateBusinessAccount(this.userProfile.id, this.edtBusinessAccountForm.value).subscribe(\n        returnBusinessAccount => {\n          this.alertify.success(this.appTranslation.get('Common.Messages.UpdatedSuccessfully'));\n          this.router.navigate(['/profile']);\n        },\n        error => {\n          this.alertify.error(error);\n          this.isSubmitting = false;\n          this.edtBusinessAccountForm.enable();\n        },\n        () => { });\n    } else {\n      this.alertify.success(this.appTranslation.get('Common.Data.Invalid'));\n      this.edtBusinessAccountForm.markAllAsTouched();\n      this.isSubmitting = false;\n    }\n  }\n\n}\n","<app-breadcrumbs title=\"{{studentAccount.firstName || studentAccount.enFullName }}\" currentPageTitle=\"{{studentAccount.firstName || studentAccount.enFullName }}\"></app-breadcrumbs>\n\n<article id=\"profile\" class=\"content\">\n    <div class=\"container\">\n        <!-- start Normal Edt BootStrap Form -->\n\n        <form id =\"formEdtExtendedStudentAccount\" [formGroup]=\"edtStudentAccountForm\" (ngSubmit)=\"editStudentAccount()\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-5\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Profile.GeneralInfo' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.FirstName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                            <input class=\"form-control\"  maxlength=\"70\" formControlName=\"arFirstName\" placeholder= \"{{'users.Students.FirstName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arFirstName.errors && updateValidator.arFirstName.touched}\"  >\n                            <div *ngIf=\"updateValidator.arFirstName.touched && updateValidator.arFirstName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.arFirstName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.LastName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                            <input class=\"form-control\"  maxlength=\"70\" formControlName=\"arLastName\" placeholder= \"{{'users.Students.LastName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arLastName.errors && updateValidator.arLastName.touched}\"  >\n                            <div *ngIf=\"updateValidator.arLastName.touched && updateValidator.arLastName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.arLastName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\">{{'users.Students.EnFullName' | translate }}<strong class=\"text-danger\">*</strong></span>\n                            </div>\n                            <input class=\"form-control\"  maxlength=\"100\" formControlName=\"enFullName\" placeholder= \"{{'users.Students.EnFullName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.enFullName.errors && updateValidator.enFullName.touched}\"  >\n                            <div *ngIf=\"updateValidator.enFullName.touched && updateValidator.enFullName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.enFullName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-building\"></i>&nbsp;{{'users.Students.City' | translate }}<strong class=\"text-danger\">*</strong></span>\n                                </div>\n                                <select formControlName=\"cityId\" class=\"form-control\" [ngClass]=\"{'is-invalid' : updateValidator.cityId.errors && updateValidator.cityId.touched }\">\n                                    <option value=\"0\" disabled>{{'Common.Form.ChooseFromMenu' | translate }}</option>\n                                    <option *ngFor=\"let city of citiesOptions\" value=\"{{city.id}}\">{{city.name}}</option>\n                                </select>\n                                <div *ngIf=\"updateValidator.cityId.touched && updateValidator.cityId.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.cityId.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend \">\n                                    <span class=\"input-group-text px-1\">{{'users.Students.Gender' | translate }}<strong class=\"text-danger\">*</strong></span>\n                                </div>\n                                <label class=\"form-control px-1 text-center\">\n                                  <input id=\"male\" type=\"radio\" name=\"gender\" [value]=\"1\" formControlName=\"gender\">\n                                  <i class=\"fa fa-lg fa-male text-sky px-1\"></i>{{'Signup.IAmMan' | translate }}\n                                </label>\n                                <label class=\"form-control px-1 text-center\">\n                                    <input id=\"female\" type=\"radio\" name=\"gender\" [value]=\"2\" formControlName=\"gender\">\n                                    <i class=\"fa fa-lg fa-female text-pink px-1\"></i>{{'Signup.IAmWoman' | translate }}\n                                </label>\n                                <div *ngIf=\"updateValidator.gender.touched && updateValidator.gender.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.gender.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                   <span class=\"input-group-text\">{{'users.Students.BirthDay' | translate }}</span>\n                                </div>\n                                <input ngbDatepicker #birthDayDatepicker=\"ngbDatepicker\" [maxDate]=\"maxDate\" [minDate]=\"{year: 1950, month: 1, day: 1}\" [firstDayOfWeek]=\"0\" class=\"form-control\"  formControlName=\"birthDay\" readonly (click)=\"birthDayDatepicker?.toggle()\">\n                                <div class=\"input-group-append\">\n                                    <button class=\"btn btn-outline-secondary calendar\" (click)=\"birthDayDatepicker?.toggle()\" type=\"button\"><i class=\"fa fa-calendar\"></i></button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend \">\n                                    <span class=\"input-group-text px-1\">{{'users.Students.SocialStatus' | translate }}</span>\n                                </div>\n                                <label class=\"form-control px-1 text-center\">\n                                    <input id=\"single\" type=\"radio\" name=\"socialStatus\" [value]=\"1\" formControlName=\"socialStatus\">\n                                    {{'users.Students.Single' | translate }}\n                                </label>\n                                <label class=\"form-control px-1 text-center\">\n                                    <input id=\"married\" type=\"radio\" name=\"socialStatus\" [value]=\"2\" formControlName=\"socialStatus\">\n                                    {{'users.Students.Married' | translate }}\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.About' | translate }}</label>\n                        <textarea class=\"form-control\" rows=\"3\"  maxlength=\"500\" formControlName=\"about\" placeholder= \"{{'Common.Form.MaxThousand' | translate:{'value': 'users.Students.About' | translate} }}\"></textarea>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.JobInterests' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.DayAvailability' | translate }}<strong class=\"text-danger\">*</strong></label>\n                        <div class=\"input-group\">\n                            <label class=\"form-control px-1 text-center\">\n                                <input id=\"single\" type=\"radio\" name=\"dayAvailability\" [value]=\"1\" formControlName=\"dayAvailability\">\n                                {{'users.Students.Morning' | translate }}\n                            </label>\n                            <label class=\"form-control px-1 text-center\">\n                                <input id=\"married\" type=\"radio\" name=\"dayAvailability\" [value]=\"2\" formControlName=\"dayAvailability\">\n                                {{'users.Students.Evening' | translate }}\n                            </label>\n                            <label class=\"form-control px-1 text-center\">\n                                <input id=\"married\" type=\"radio\" name=\"dayAvailability\" [value]=\"3\" formControlName=\"dayAvailability\">\n                                {{'users.Students.AllDay' | translate }}\n                            </label>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.JobInterests' | translate }}</label>\n                        <ng-select [loading]=\"isLoadingOptions\" bindValue=\"id\" bindLabel=\"name\" [multiple]=\"true\" [items]=\"jobCategoriesOptions\"\n                                formControlName=\"jobCategories\" [clearable]=\"false\" [selectableGroup]=\"true\" [closeOnSelect]=\"false\"\n                                placeholder=\"{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.JobInterests' | translate} }}\" class=\"custom\">\n                            <ng-template ng-loadingspinner-tmp><div class=\"lds-ellipsis mx-2\"><div></div><div></div><div></div><div></div></div></ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [checked]=\"item$.selected\"/>&nbsp;{{item.name}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.Languages' | translate }}</label>\n                        <ng-select [loading]=\"isLoadingOptions\" bindValue=\"id\" bindLabel=\"name\" [multiple]=\"true\" [items]=\"languagesOptions\"\n                                formControlName=\"languages\" [clearable]=\"false\" [selectableGroup]=\"true\" [closeOnSelect]=\"false\"\n                                placeholder=\"{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.Languages' | translate} }}\" class=\"custom\">\n                            <ng-template ng-loadingspinner-tmp><div class=\"lds-ellipsis mx-2\"><div></div><div></div><div></div><div></div></div></ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [checked]=\"item$.selected\"/>&nbsp;{{item.name}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.Educations' | translate }}</span>\n                    </h4>\n                    \n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.University' | translate }}</label>\n                            <select formControlName=\"universityId\" class=\"form-control\" >\n                                <option [value]=\"'' || 0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.University' | translate} }}</option>\n                                <option *ngFor=\"let university of universitiesOptions\" value=\"{{university.id}}\">{{university.name}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.Certificate' | translate }}</label>\n                            <select formControlName=\"certificateId\" class=\"form-control\" >\n                                <option [value]=\"'' || 0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.Certificate' | translate} }}</option>\n                                <option *ngFor=\"let certificate of certificatesOptions\" value=\"{{certificate.id}}\">{{certificate.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.EducationDegree' | translate }}</label>\n                            <select formControlName=\"educationsDegreeId\" class=\"form-control\" (change)=\"onChangeLoadEducationLevels($event.target.value)\">\n                                <option [value]=\"'' || 0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.EducationDegree' | translate} }}</option>\n                                <option *ngFor=\"let educationDegree of educationDegreesOptions\" value=\"{{educationDegree.id}}\">{{educationDegree.name}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.EducationLevel' | translate }}</label>\n                            <select formControlName=\"educationLevelId\" class=\"form-control\" >\n                                <option [value]=\"'' || 0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.EducationLevel' | translate} }}</option>\n                                <option *ngFor=\"let educationLevel of educationLevelsOptions\" value=\"{{educationLevel.id}}\">{{educationLevel.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.Major' | translate }}</label>\n                            <select formControlName=\"majorId\" class=\"form-control\" (change)=\"onChangeLoadSubMajors($event.target.value)\">\n                                <option [value]=\"'' || 0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.Major' | translate} }}</option>\n                                <option *ngFor=\"let major of majorsOptions\" value=\"{{major.id}}\">{{major.name}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.SubMajor' | translate }}</label>\n                            <select formControlName=\"subMajorId\" class=\"form-control\" >\n                                <option [value]=\"'' || 0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.SubMajor' | translate} }}</option>\n                                <option *ngFor=\"let subMajor of subMajorsOptions\" value=\"{{subMajor.id}}\">{{subMajor.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.Skills' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.GeneralSkills' | translate }}</label>\n                        <ng-select [loading]=\"isLoadingOptions\" bindValue=\"id\" bindLabel=\"name\" [multiple]=\"true\" [items]=\"generalSkillsOptions\"\n                                formControlName=\"generalSkills\" [clearable]=\"false\" [selectableGroup]=\"true\" [closeOnSelect]=\"false\"\n                                placeholder=\"{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.GeneralSkills' | translate} }}\" class=\"custom\">\n                            <ng-template ng-loadingspinner-tmp><div class=\"lds-ellipsis mx-2\"><div></div><div></div><div></div><div></div></div></ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [checked]=\"item$.selected\"/>&nbsp;{{item.name}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.PersonalSkills' | translate }}</label>\n                        <ng-select [loading]=\"isLoadingOptions\" bindValue=\"id\" bindLabel=\"name\" [multiple]=\"true\" [items]=\"personalSkillsOptions\"\n                                formControlName=\"personalSkills\" [clearable]=\"false\" [selectableGroup]=\"true\" [closeOnSelect]=\"false\"\n                                placeholder=\"{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.PersonalSkills' | translate} }}\" class=\"custom\">\n                            <ng-template ng-loadingspinner-tmp><div class=\"lds-ellipsis mx-2\"><div></div><div></div><div></div><div></div></div></ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [checked]=\"item$.selected\"/>&nbsp;{{item.name}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.Hobbies' | translate }}</label>\n                        <ng-select [loading]=\"isLoadingOptions\" bindValue=\"id\" bindLabel=\"name\" [multiple]=\"true\" [items]=\"hobbiesOptions\"\n                                formControlName=\"hobbies\" [clearable]=\"false\" [selectableGroup]=\"true\" [closeOnSelect]=\"false\"\n                                placeholder=\"{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.Hobbies' | translate} }}\" class=\"custom\">\n                            <ng-template ng-loadingspinner-tmp><div class=\"lds-ellipsis mx-2\"><div></div><div></div><div></div><div></div></div></ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [checked]=\"item$.selected\"/>&nbsp;{{item.name}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'SocialMedias.Title' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-instagram\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"instagram\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Instagram' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.instagram.errors && updateValidator.instagram.touched}\"  >\n                                <div *ngIf=\"updateValidator.instagram.touched && updateValidator.instagram.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.instagram.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-linkedin-square\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"linkedin\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Linkedin' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.linkedin.errors && updateValidator.linkedin.touched}\"  >\n                                <div *ngIf=\"updateValidator.linkedin.touched && updateValidator.linkedin.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.linkedin.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-twitter\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"twitter\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Twitter' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.twitter.errors && updateValidator.twitter.touched}\"  >\n                                <div *ngIf=\"updateValidator.twitter.touched && updateValidator.twitter.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.twitter.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-facebook-square\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"facebook\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Facebook' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.facebook.errors && updateValidator.facebook.touched}\"  >\n                                <div *ngIf=\"updateValidator.facebook.touched && updateValidator.facebook.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.facebook.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer text-right\">\n                    <button class=\"btn btn-success\"  type=\"submit\" [disabled]=\"isSubmitting\">\n                        <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n                        <i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.UpdateData' | translate}}&nbsp;\n                    </button>\n                    <!-- [disabled]=\"isSubmitting || !edtStudentAccountForm.valid\" -->\n                </div>\n            </div>\n        </form><!-- End Normal Edt BootStrap Form -->\n    </div>\n</article>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LocationsService } from 'src/app/_services/settings/locations.service';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\nimport { HobbiesService } from 'src/app/_services/settings/hobbies.service';\nimport { SkillsService } from 'src/app/_services/settings/skills.service';\nimport { LanguagesService } from 'src/app/_services/settings/languages.service';\nimport { JobCategoriesService } from 'src/app/_services/settings/job-categories.service';\nimport { EducationDegreesService } from 'src/app/_services/settings/education-degrees.service';\nimport { MajorsService } from 'src/app/_services/settings/majors.service';\nimport { UniversitiesService } from 'src/app/_services/settings/universities.service';\nimport { forkJoin, zip } from 'rxjs';\nimport { JobCategoryResult } from 'src/app/_models/Users/job-category';\nimport { KeyValuePairResource, KeyValueChildsPairResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { StudentAccountForEdit } from '../../models/student-account';\nimport { SkillForListDto, SkillType } from 'src/app/_models/Users/user-skill';\nimport { StudentAccountsService } from 'src/app/_services/users/student-accounts.service';\nimport { StudentAccountUpdate } from 'src/app/_models/Users/student-account';\nimport { HijriCalenderService } from 'src/app/_helpers/date-and-time/hijri-calender.service';\nimport { GregorianCalenderFormatterProvider } from 'src/app/_helpers/gregorian-calender.service';\n\n@Component({\n  selector: 'app-edit-jobs-searcher',\n  templateUrl: './edit-jobs-searcher.component.html',\n  styleUrls: []\n})\nexport class EditJobsSearcherComponent implements OnInit {\n  isLoadingOptions = true;\n  citiesOptions: KeyValuePairResource[] = [];\n  hobbiesOptions: KeyValuePairResource[] = [];\n  generalSkillsOptions: SkillForListDto[] = [];\n  personalSkillsOptions: SkillForListDto[] = [];\n  languagesOptions: KeyValuePairResource[] = [];\n  jobCategoriesOptions: JobCategoryResult[] = [];\n  educationDegreesOptions: KeyValueChildsPairResource[] = [];\n  educationLevelsOptions: KeyValuePairResource[] = [];\n  certificatesOptions: KeyValuePairResource[] = [];\n  majorsOptions: KeyValueChildsPairResource[] = [];\n  subMajorsOptions: KeyValuePairResource[] = [];\n  universitiesOptions: KeyValuePairResource[] = [];\n\n  studentAccount: StudentAccountForEdit;\n  maxDate: any;\n  public GenderEnum = Gender;\n  edtStudentAccountForm: FormGroup;\n  isSubmitting: boolean = false;\n  citiesList: KeyValuePairResource[] = [];\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n\n    private locationsService: LocationsService,\n    private hobbiesService: HobbiesService,\n    private skillsService: SkillsService,\n    private languagesService: LanguagesService,\n    private jobCategoriesService: JobCategoriesService,\n    private educationDegreesService: EducationDegreesService,\n    private majorsService: MajorsService,\n    private universitiesService: UniversitiesService,\n    private router: Router,\n    private studentAccountsService: StudentAccountsService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.studentAccount = data['user'];\n    });\n    this.initEdtForm();\n    this.getAllDefualtsValues();\n    this.maxDate = HijriCalenderService.getToday(-17);\n\n  }\n\n  getAllDefualtsValues() {\n    zip(\n      this.locationsService.getCitiesList(),\n      this.hobbiesService.getHobbiesAsList(),\n      this.skillsService.getSkillsAsList(),\n      this.languagesService.getLanguagesAsList(),\n      this.educationDegreesService.getEducationDegreesAsList(),\n      this.educationDegreesService.getCertificatesAsList(),\n      this.majorsService.getMajorsAsList(),\n      this.universitiesService.getUniversitiesAsList(),\n      this.jobCategoriesService.getJobCategoriesAsList(),\n    ).subscribe(\n      ([locations, hobbies, skills, languages, educationDegrees, certificates, majors, universities, jobCategories]) => {\n        this.citiesOptions = locations;\n        this.hobbiesOptions = hobbies;\n        this.generalSkillsOptions = [...(<SkillForListDto[]>skills).filter(s => s.type === SkillType.General)];\n        this.personalSkillsOptions = [...(<SkillForListDto[]>skills).filter(s => s.type === SkillType.Personal)];\n        this.languagesOptions = languages;\n        this.jobCategoriesOptions = jobCategories;\n        this.universitiesOptions = universities;\n        this.certificatesOptions = certificates;\n        this.educationDegreesOptions = <KeyValueChildsPairResource[]>educationDegrees;\n        this.majorsOptions = <KeyValueChildsPairResource[]>majors;\n      },\n      error => { this.alertify.error(error); },\n      () => {\n        this.isLoadingOptions = false;\n        this.onChangeLoadSubMajors(+this.selectedMajor?.majorId ?? 0);\n        this.onChangeLoadEducationLevels(+this.selectedEducationsDegree?.educationDegreeId ?? 0);\n        this.enableAllControls();\n      }\n    );\n  }\n\n  enableAllControls() {\n    this.edtStudentAccountForm.controls.cityId.enable();\n    this.edtStudentAccountForm.controls.jobCategories.enable();\n    this.edtStudentAccountForm.controls.languages.enable();\n    this.edtStudentAccountForm.controls.generalSkills.enable();\n    this.edtStudentAccountForm.controls.personalSkills.enable();\n    this.edtStudentAccountForm.controls.hobbies.enable();\n  }\n\n  initEdtForm() {\n    this.edtStudentAccountForm = this.formBuilder.group({\n      id: [this.studentAccount.id, Validators.required],\n      arFirstName: [this.studentAccount.firstName ?? '', Validators.required],\n      arLastName: [this.studentAccount.lastName ?? '', Validators.required],\n      enFullName: [this.studentAccount.enFullName ?? '', [Validators.required]],\n      gender: [this.studentAccount.gender ?? '', Validators.required],\n      cityId: [{ value: this.studentAccount.cityId ?? '', disabled: true }, Validators.required],\n      birthDay: [HijriCalenderService.dateToNgbDateOrNull(this.studentAccount.birthDay) ?? null],\n      socialStatus: [this.studentAccount.studentAccountData?.socialStatus ?? 0],\n      about: [this.studentAccount.studentAccountData?.about ?? '', Validators.maxLength(500)],\n      dayAvailability: [this.studentAccount.studentAccountData?.dayAvailability ?? 0],\n      jobCategories: [{ value: this.studentAccount.interestsJobs ?? [], disabled: true }],\n      universityId: [this.studentAccount.studentAccountData?.universityId ?? 0],\n      certificateId: [this.studentAccount.studentAccountData?.certificate ?? 0],\n      educationsDegreeId: [this.selectedEducationsDegree?.educationDegreeId ?? 0],\n      educationLevelId: [this.studentAccount.studentAccountData?.educationLevelId ?? 0],\n      majorId: [this.selectedMajor?.majorId ?? 0],\n      subMajorId: [this.studentAccount.studentAccountData?.subMajorId ?? 0],\n      languages: [{ value: this.studentAccount.languages ?? [], disabled: true }],\n      generalSkills: [{ value: this.studentAccount.generalSkills ?? [], disabled: true }],\n      personalSkills: [{ value: this.studentAccount.personalSkills ?? [], disabled: true }],\n      hobbies: [{ value: this.studentAccount.hobbies ?? [], disabled: true }],\n      // status: [''],\n      instagram: [this.studentAccount.socialMediaAccounts?.instagram, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      linkedin: [this.studentAccount.socialMediaAccounts?.linkedin, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      twitter: [this.studentAccount.socialMediaAccounts?.twitter, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      facebook: [this.studentAccount.socialMediaAccounts?.facebook, Validators.pattern(RegularExpression.SocialMediaAccounts)]\n    });\n  }\n\n  get selectedEducationsDegree() { return this.studentAccount.studentAccountData?.educationLevel; }\n  get selectedMajor() { return this.studentAccount.studentAccountData?.subMajor; }\n\n  onChangeLoadEducationLevels(eduDegreeId: number) {\n    console.log('eduDegreeId:', eduDegreeId);\n    this.educationLevelsOptions = [];\n    if (eduDegreeId > 0)\n      this.educationLevelsOptions = [...(this.educationDegreesOptions.find(ed => ed.id == +eduDegreeId)?.childs)];\n  }\n\n  onChangeLoadSubMajors(majorId: number) {\n    console.log('majorId:', majorId);\n    this.subMajorsOptions = [];\n    if (majorId > 0)\n      this.subMajorsOptions = [...(this.majorsOptions.find(ed => ed.id == +majorId)?.childs)];\n  }\n\n  get updateValidator() { return this.edtStudentAccountForm.controls; }\n\n  editStudentAccount() {\n    this.edtStudentAccountForm.valid;\n    console.log(this.edtStudentAccountForm.value);\n    console.log(\"Invalid Controls:\", this.findInvalidControls());\n    let birthDay = HijriCalenderService.tryConvertGregorianToDate(this.edtStudentAccountForm.controls.birthDay.value);\n    if (this.edtStudentAccountForm.valid) {\n      this.isSubmitting = true;\n      this.edtStudentAccountForm.disable();\n      let updatedStudentAccount = {} as StudentAccountUpdate;\n      Object.assign(updatedStudentAccount, this.edtStudentAccountForm.value);\n      updatedStudentAccount.birthDay = birthDay;\n      this.studentAccountsService.updateStudentAccount(this.studentAccount.id, updatedStudentAccount).subscribe(\n        returnStudentAccount => {\n          this.alertify.success(this.appTranslation.get('Common.Messages.UpdatedSuccessfully'));\n          this.router.navigate(['/profile']);\n        },\n        error => { this.alertify.error(error); this.isSubmitting = false; this.edtStudentAccountForm.enable(); },\n        () => { });\n    } else {\n      this.alertify.warning(this.appTranslation.get('Common.Data.Invalid'));\n      this.edtStudentAccountForm.markAllAsTouched();\n      this.isSubmitting = false;\n    }\n  }\n\n  // console.log(\"Invalid Controls:\", this.findInvalidControls());\n  public findInvalidControls() {\n    const invalid = [];\n    const controls = this.edtStudentAccountForm.controls;\n    for (const name in controls) {\n      if (controls[name].invalid) {\n        invalid.push(name);\n      }\n    }\n    return invalid;\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\n\n@Component({\n  selector: 'app-education-details',\n  templateUrl: './education-details.component.html',\n  styleUrls: []\n})\nexport class EducationDetailsComponent implements OnInit {\n  @Input('UserProfileData') userProfile: UserProfileResult;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\" >\n    <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.Educations' | translate }}</span>\n    </h4>\n    <div class=\"col-md-12 pl-4\">\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.Students.University' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.studentAccountData?.university?.name}}</p>\n            </div>\n        </div>\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.Students.Certificate' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.studentAccountData?.certificateName}}</p>\n            </div>\n        </div>\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.Students.EducationDegree' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.studentAccountData?.educationLevel?.educationDegree?.name}}</p>\n            </div>\n        </div>\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.Students.EducationLevel' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.studentAccountData?.educationLevel?.name}}</p>\n            </div>\n        </div>\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.Students.Major' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.studentAccountData?.subMajor?.major?.name}}</p>\n            </div>\n        </div>\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.Students.SubMajor' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.studentAccountData?.subMajor?.name}}</p>\n            </div>\n        </div>\n    </div>\n</div>","<div class=\"row\" >\n    <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.JobInterests' | translate }}</span>\n    </h4>\n    <div class=\"col-md-12 pl-4\">\n        <div class=\"form-group row my-0\">\n            <label class=\"col-form-label col-sm-3 profile-info-title\">{{'users.Students.DayAvailability' | translate }}</label>\n            <div class=\"col-sm-9\">\n                <p class=\"form-control-plaintext profile-info-details\"><i class=\"fa fa-clock-o\"></i>&nbsp;&nbsp;{{userProfile?.studentAccountData?.dayAvailabilityName}}</p>\n            </div>\n        </div>\n    </div>\n    <ng-container *ngIf=\"userJobInterests?.length > 0; else nothingTemplate\">\n        <div class=\"col-12 my-2\">\n            <span class=\"h6 badge-xl bg-info\" *ngFor=\"let job of userJobInterests; let i = index;\">{{job?.jobCategory?.name}}</span>\n        </div>\n    </ng-container>\n    <ng-template #nothingTemplate>\n        <div class=\"col-12 my-2\">\n            <p class=\"form-control-plaintext text-break text-secondary pt-0\">{{'Common.Data.NoData' | translate }}</p>\n        </div>\n    </ng-template>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { UserJobCategoryResult } from 'src/app/_models/Users/job-category';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\n\n@Component({\n  selector: 'app-job-interests',\n  templateUrl: './job-interests.component.html',\n  styleUrls: []\n})\nexport class JobInterestsComponent implements OnInit {\n  @Input('UserProfileData') userProfile: UserProfileResult;\n  @Input('Jobs') userJobInterests: UserJobCategoryResult[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-jobs-searcher-counters',\n  templateUrl: './jobs-searcher-counters.component.html',\n  styleUrls: []\n})\nexport class JobsSearcherCountersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-breadcrumbs title=\"\" currentPageTitle=\"ملفي الشخصي\"></app-breadcrumbs>\n\n<!-- ======= member profile ======= -->\n<section id=\"profile\" class=\"profile\">\n    <div class=\"container\">\n        <div class=\"row\" id=\"user-profile\">\n            <div class=\"col-lg-3 col-md-4 col-sm-4 p-0\">\n                <div class=\"main-box\">\n                    <h4 class=\"user-name\" [ngClass]=\"getGenderStyle()\">{{userProfile.fullName}}</h4>\n                    <div class=\"profile-status\">\n                        <i class=\"fa fa-check-circle\"></i>&nbsp;{{userProfile?.studentAccountData?.accountStatusName}}\n                    </div>\n\n                    <app-profile-image [UserProfileData]=\"userProfile\"></app-profile-image>\n                    <app-profile-stars [Rating]=\"userProfile?.totalRating\"></app-profile-stars>\n                    <app-since-profile [MemberSince]=\"userProfile?.createdDate\" [LastActivity]=\"userProfile?.lastActive\"></app-since-profile>\n                    <app-jobs-searcher-counters></app-jobs-searcher-counters>\n\n                    <div *ngIf=\"!isCurrentUserProfile\" class=\"profile-message-btn center-block text-center\">\n                        <a class=\"btn btn-success text-white\" (click)=\"showChatBox()\">\n                            <i class=\"fa fa-envelope\"></i> {{'Chatbox.SendMessage' | translate }}\n                        </a>\n                    </div>\n\n                </div>\n            </div>\n\n            <div class=\"col-lg-9 col-md-8 col-sm-8 p-0 px-md-2\">\n                <div class=\"main-box \">\n                    <ul class=\"nav nav-tabs\" id=\"user-tab\" role=\"tablist\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link active\" id=\"about-user-tab\" data-toggle=\"tab\" href=\"#aboutUser\" role=\"tab\" aria-controls=\"about-user-tab\" aria-selected=\"true\">بياناتي</a>\n                        </li>\n                        <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"ratings-history-tab\" data-toggle=\"tab\" href=\"#ratings-history\" role=\"tab\" aria-controls=\"ratings-history\" aria-selected=\"false\">التقييمات</a>\n                        </li>\n                        <li *ngIf=\"!isCurrentUserProfile\" class=\"nav-item\">\n                          <a #chatboxTab class=\"nav-link\" id=\"chatbox-tab\" data-toggle=\"tab\" href=\"#chatbox\" role=\"tab\" aria-controls=\"chatbox\" aria-selected=\"false\">المحادثة</a>\n                        </li>\n                    </ul>\n\n                    <div class=\"tab-content  p-2\" id=\"myTabContent\">\n                        <div class=\"tab-pane fade show active\" id=\"aboutUser\" role=\"tabpanel\" aria-labelledby=\"about-user-tab\">\n                            <div class=\"d-flex justify-content-between align-items-start mb-2\">\n                                <h4 class=\"text-left\"><span class=\"section-header-behind-line behind-line-gray px-2 pb-1\">{{'users.Students.PersonalInfo' | translate }}</span></h4>\n                                <a *ngIf=\"isCurrentUserProfile\" [routerLink]=\"['/profile' , 'searcher', 'edit' ]\" class=\"btn btn-primary btn-sm edit-profile\">\n                                    <i class=\"fa fa-pencil-square fa-lg\"></i> {{'Common.CRUD.Update' | translate }}\n                                </a>\n                            </div>\n                            <app-personal-details [UserProfileData]=\"userProfile\" ></app-personal-details>\n                            <app-member-contact *ngIf=\"userProfile?.displayContactInfo\" [UserProfileData]=\"userProfile\"></app-member-contact>\n                            <app-job-interests [UserProfileData]=\"userProfile\" [Jobs]=\"userProfile?.interestsJobs\"></app-job-interests>\n                            <app-education-details [UserProfileData]=\"userProfile\"></app-education-details>\n                            <app-language-skills [Languages]=\"userProfile?.languages\"></app-language-skills>\n                            <div class=\"row\">\n                                <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n                                    <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.Skills' | translate }}</span>\n                                </h4>\n                                <div class=\"col-md-12 pl-4\">\n                                    <app-personal-skills [PersonalSkills]=\"userProfile?.personalSkills\"></app-personal-skills>\n                                    <app-general-skills [GeneralSkills]=\"userProfile?.generalSkills\"></app-general-skills>\n                                    <app-hoppies  [Hoppies]=\"userProfile?.hobbies\"></app-hoppies>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"tab-pane fade\" id=\"ratings-history\" role=\"tabpanel\" aria-labelledby=\"ratings-history-tab\">\n                            <app-rating-and-reviews-list [RatingsAndReviews]=\"userProfile.ratingsGot\"></app-rating-and-reviews-list>\n                        </div>\n\n                        <div *ngIf=\"!isCurrentUserProfile\" class=\"tab-pane fade profile-chatbox\" id=\"chatbox\" role=\"tabpanel\" aria-labelledby=\"chatbox-tab\">\n                          <ng-container *ngIf=\"!isCurrentUserCanStartConversationWithThisUser; else conversationBox\">\n                            <div *ngIf=\"conversationNotAllowed\"  class=\"alert alert-danger text-center\" role=\"alert\">{{conversationNotAllowed}}</div>\n                            <div *ngIf=\"!conversationNotAllowed\"  class=\"alert alert-warning text-center\" role=\"alert\"><span class=\"spinner-border spinner-border-sm\" role=\"status\"></span>&nbsp;&nbsp;{{'Common.Data.Loading' | translate}}</div>\n\n                          </ng-container>\n                          <ng-template #conversationBox>\n                            <app-conversation-box [RecipientId]=\"userProfile?.id\" [RecipientGender]=\"userProfile?.gender\"></app-conversation-box>\n                          </ng-template>\n                        </div>\n\n                      </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- End member profile -->\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/_services/users/User.service';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { NgbNavChangeEvent } from '@ng-bootstrap/ng-bootstrap';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\nimport { MessageWithObject } from 'src/app/_models/data/actions-result';\n\n@Component({\n  selector: 'app-jobs-searcher-profile',\n  templateUrl: './jobs-searcher-profile.component.html',\n  styleUrls: []\n})\nexport class JobsSearcherProfileComponent implements OnInit {\n  @Input() userProfile: UserProfileResult;\n  @ViewChild('chatboxTab') chatboxTab: ElementRef<HTMLElement>;\n  isCurrentUserCanStartConversationWithThisUser: boolean = false;\n  conversationNotAllowed: string = null;\n\n  constructor(private router: Router, private route: ActivatedRoute, private userService: UserService, private appTranslation: AppTranslationService,\n    private alertify: AlertifyService, private authService: AuthService, private messagesService: MessagesService) { }\n\n  ngOnInit(): void {\n    if (!this.userProfile) {\n      this.alertify.warning('يوجد مشكلة في عرض بيانات المستخدم أو لا تملك صلاحية مخوله للوصول الى ملفه');\n      this.router.navigate(['']);\n    } else {\n      this.checkIfCurrentUserCanStartChat();\n    }\n  }\n\n  get isCurrentUserProfile(): boolean {\n    return this.authService.isCurrentUserProfile(this.userProfile.id);\n  }\n\n  checkIfCurrentUserCanStartChat() {\n    if (!this.isCurrentUserProfile) {\n      this.messagesService.checkIfCurrentUserCanStartChatWithTheOtherUser(this.authService.currentUser.id, this.userProfile.id).subscribe(\n        (result: MessageWithObject) => {\n          if (result.data === true)\n            this.isCurrentUserCanStartConversationWithThisUser = true;\n          else\n            this.conversationNotAllowed = result.message;\n        },\n        error => {\n          this.conversationNotAllowed = error;\n          this.isCurrentUserCanStartConversationWithThisUser = false;\n        }\n      );\n    }\n  }\n\n  getGenderStyle() {\n    if (<Gender>this.userProfile.gender === <Gender>Gender.male) {\n      return 'text-sky';\n    } else if (<Gender>this.userProfile.gender === <Gender>Gender.female) {\n      return 'text-pink';\n    }\n    else { return '' }\n  }\n\n  showChatBox() {\n    this.chatboxTab.nativeElement.click()\n  }\n\n\n}\n","<div class=\"form-group row my-0\">\n    <label class=\"col-form-label profile-info-title pb-0\">{{'users.Students.GeneralSkills' | translate }}</label>\n    <ng-container *ngIf=\"UserSkills?.length > 0; else nothingTemplate\">\n        <div class=\"col-12 my-2\">\n            <div class=\"badge-xl bg-info mb-1 profile-info-details\" *ngFor=\"let skill of UserSkills; let i = index;\">\n                {{skill?.skill?.name}}\n            </div>\n        </div>\n    </ng-container>\n    <ng-template #nothingTemplate>\n        <p class=\"form-control-plaintext text-break text-secondary pt-0\">{{'Common.Data.NoData' | translate }}</p>\n    </ng-template>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { UserSkillResult } from 'src/app/_models/Users/user-skill';\n\n@Component({\n  selector: 'app-general-skills',\n  templateUrl: './general-skills.component.html',\n  styleUrls: []\n})\nexport class GeneralSkillsComponent implements OnInit {\n  @Input('GeneralSkills') UserSkills: UserSkillResult[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"form-group row my-0\">\n    <label class=\"col-form-label profile-info-title pb-0\">{{'users.Students.Hobbies' | translate }}</label>\n    <ng-container *ngIf=\"UserHoppies?.length > 0; else nothingTemplate\">\n        <div class=\"col-12 my-2\">\n            <div class=\"badge-xl bg-info mb-1 profile-info-details\" *ngFor=\"let hobby of UserHoppies; let i = index;\">\n                {{hobby?.hobby?.name}}\n            </div>\n        </div>\n\n\n      \n    </ng-container>\n    <ng-template #nothingTemplate>\n        <p class=\"form-control-plaintext text-break text-secondary pt-0\">{{'Common.Data.NoData' | translate }}</p>\n    </ng-template>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { UserHobbyResult } from 'src/app/_models/Users/hobby';\n\n@Component({\n  selector: 'app-hoppies',\n  templateUrl: './hoppies.component.html',\n  styleUrls: []\n})\nexport class HoppiesComponent implements OnInit {\n  @Input('Hoppies') UserHoppies: UserHobbyResult[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"form-group row my-0\">\n    <label class=\"col-form-label profile-info-title pb-0\">{{'users.Students.PersonalSkills' | translate }}</label>\n    <ng-container *ngIf=\"UserSkills?.length > 0; else nothingTemplate\">\n        <div class=\"col-12 my-2\">\n            <div class=\"badge-xl bg-info mb-1 profile-info-details\" *ngFor=\"let skill of UserSkills; let i = index;\">\n                {{skill?.skill?.name}}\n            </div>\n        </div>\n    </ng-container>\n    <ng-template #nothingTemplate>\n        <p class=\"form-control-plaintext text-break text-secondary pt-0\">{{'Common.Data.NoData' | translate }}</p>\n    </ng-template>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { UserSkillResult } from 'src/app/_models/Users/user-skill';\n\n@Component({\n  selector: 'app-personal-skills',\n  templateUrl: './personal-skills.component.html',\n  styleUrls: []\n})\nexport class PersonalSkillsComponent implements OnInit {\n  @Input('PersonalSkills') UserSkills: UserSkillResult[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//services\nimport { MemberProfileResolver } from 'src/app/_resolvers/Users/member-profile.resolver';\nimport { EditMemberProfileResolver } from './resolvers/edit-member-profile.resolver';\n\n\n//Components\nimport { ProfileComponent } from './profile.component';\nimport { EditBusinessAccountComponent } from './business/edit-business-account/edit-business-account.component';\nimport { EditJobsSearcherComponent } from './jobs-searcher/edit-jobs-searcher/edit-jobs-searcher.component';\nimport { ModifyTaskerProfileComponent } from './taskers/modify-tasker-profile/modify-tasker-profile.component';\nimport { CreatePortfolioComponent } from './taskers/portfolios/create-portfolio/create-portfolio.component';\nimport { MessagesListComponent } from './shared/chats/messages-list/messages-list.component';\nimport { MessageResolver } from 'src/app/_resolvers/chats/message.resolver';\nimport { PortfolioDetailsComponent } from './taskers/portfolios/portfolio-details/portfolio-details.component';\nimport { ModifyPortfolioComponent } from './taskers/portfolios/modify-portfolio/modify-portfolio.component';\nimport { ModifyVisitorProfileComponent } from './visitor/modify-visitor-profile/modify-visitor-profile.component';\n\nconst routes: Routes = [\n  { path: '', component: ProfileComponent, resolve: { user: MemberProfileResolver } },\n  { path: 'messages', component: MessagesListComponent, resolve: { messagesList: MessageResolver }  },\n  { path: ':userId', component: ProfileComponent, resolve: { user: MemberProfileResolver } },\n  { path: 'business/edit', component: EditBusinessAccountComponent, resolve: { user: EditMemberProfileResolver } },\n  { path: 'searcher/edit', component: EditJobsSearcherComponent, resolve: { user: EditMemberProfileResolver } },\n  { path: 'tasker/edit', component: ModifyTaskerProfileComponent, resolve: { user: EditMemberProfileResolver } },\n  { path: 'visitor/edit', component: ModifyVisitorProfileComponent, resolve: { user: EditMemberProfileResolver } },\n  { path: 'portfolio/new', component: CreatePortfolioComponent},\n  { path: 'portfolio/:portfolioId', component: PortfolioDetailsComponent},\n  { path: 'portfolio/edit/:portfolioId', component: ModifyPortfolioComponent},\n  { path: 'portfolio/:portfolioId/:title', component: PortfolioDetailsComponent},\n  { path: ':userId/portfolio/:portfolioId', component: PortfolioDetailsComponent},\n  { path: ':userId/portfolio/:portfolioId/:title', component: PortfolioDetailsComponent},\n  { path: ':userId/:username', component: ProfileComponent, resolve: { user: MemberProfileResolver } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule { }\n","<ng-container *ngIf=\"isBusinessAccount()\">\n    <app-business-account-profile [userProfile]=\"userProfile\"></app-business-account-profile>\n</ng-container>\n\n<ng-container *ngIf=\"isStudentAccount()\">\n    <app-jobs-searcher-profile [userProfile]=\"userProfile\"></app-jobs-searcher-profile>\n</ng-container>\n\n<ng-container *ngIf=\"isTaskerAccount()\">\n    <app-tasker-profile [userProfile]=\"userProfile\"></app-tasker-profile>\n</ng-container>\n\n<ng-container *ngIf=\"isManagerAccount() || isVisitorAccount()\">\n    <app-visitor-profile [userProfile]=\"userProfile\"></app-visitor-profile>\n</ng-container>","import { Component, OnInit } from '@angular/core';\n\nimport { AccountService } from 'src/app/_services/users/account.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { AccountType } from 'src/app/_models/Users/user-for-register';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: []\n})\nexport class ProfileComponent implements OnInit {\n  userProfile: UserProfileResult;\n  AccountTypeEnum = AccountType;\n\n  constructor(private accountService: AccountService, private route: ActivatedRoute, private alertify: AlertifyService,\n    private authService: AuthService, private appTranslation: AppTranslationService) { \n    }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.userProfile = data['user'];\n    });\n  }\n\n  isBusinessAccount() {\n    if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.businessAccount) {\n      return true;\n    }\n    return false;\n  }\n\n  isStudentAccount() {\n    if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.studentAccount) {\n      return true;\n    }\n    return false;\n  }\n\n  isTaskerAccount() {\n    if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.taskerAccount) {\n      return true;\n    }\n    return false;\n  }\n\n  isVisitorAccount() {\n    if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.visitorAccount) {\n      return true;\n    }\n    return false;\n  }\n\n  isManagerAccount() {\n    if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.managementAccount) {\n      return true;\n    }\n    return false;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { ProfileRoutingModule } from './profile-routing.module';\n\n//services\nimport { BusinessAccountsService } from 'src/app/_services/users/business-accounts.service';\nimport { MemberProfileResolver } from 'src/app/_resolvers/Users/member-profile.resolver';\nimport { EditMemberProfileResolver } from './resolvers/edit-member-profile.resolver';\nimport { MessageResolver } from 'src/app/_resolvers/chats/message.resolver';\nimport { JobOffersService } from '../jobs/_services/job-offers.service';\n\n// component\nimport { ProfileComponent } from './profile.component';\n\nimport { MemberContactComponent } from './shared/member-contact/member-contact.component';\nimport { SocialMediaComponent } from './shared/member-contact/social-media/social-media.component';\n\nimport { PersonalDetailsComponent } from './shared/personal-details/personal-details.component';\nimport { LanguageSkillsComponent } from './shared/language-skills/language-skills.component';\nimport { PersonalSkillsComponent } from './jobs-searcher/skills/personal-skills/personal-skills.component';\nimport { GeneralSkillsComponent } from './jobs-searcher/skills/general-skills/general-skills.component';\nimport { HoppiesComponent } from './jobs-searcher/skills/hoppies/hoppies.component';\nimport { EducationDetailsComponent } from './jobs-searcher/education-details/education-details.component';\n\nimport { BusinessAccountProfileComponent } from './business/business-account-profile/business-account-profile.component';\nimport { BusinessAccountDetailsComponent } from './business/business-account-details/business-account-details.component';\nimport { JobsSearcherProfileComponent } from './jobs-searcher/jobs-searcher-profile/jobs-searcher-profile.component';\nimport { ProfileStarsComponent } from './shared/profile-stars/profile-stars.component';\nimport { ProfileImageComponent } from './shared/profile-image/profile-image.component';\nimport { EditBusinessAccountComponent } from './business/edit-business-account/edit-business-account.component';\nimport { SinceProfileComponent } from './shared/since-profile/since-profile.component';\nimport { BusinessCountersComponent } from './business/business-counters/business-counters.component';\nimport { JobsSearcherCountersComponent } from './jobs-searcher/jobs-searcher-counters/jobs-searcher-counters.component';\nimport { EditJobsSearcherComponent } from './jobs-searcher/edit-jobs-searcher/edit-jobs-searcher.component';\nimport { JobInterestsComponent } from './jobs-searcher/job-interests/job-interests.component';\nimport { TaskerProfileComponent } from './taskers/tasker-profile/tasker-profile.component';\nimport { PortfoliosListComponent } from './taskers/portfolios/portfolios-list/portfolios-list.component';\nimport { PortfolioDetailsComponent } from './taskers/portfolios/portfolio-details/portfolio-details.component';\nimport { CreatePortfolioComponent } from './taskers/portfolios/create-portfolio/create-portfolio.component';\nimport { ModifyTaskerProfileComponent } from './taskers/modify-tasker-profile/modify-tasker-profile.component';\nimport { UserTasksListComponent } from './taskers/user-tasks/user-tasks-list/user-tasks-list.component';\nimport { NewUserTaskModalComponent } from './taskers/user-tasks/new-user-task-modal/new-user-task-modal.component';\nimport { MessagesListComponent } from './shared/chats/messages-list/messages-list.component';\nimport { ConversationBoxComponent } from './shared/chats/conversation-box/conversation-box.component';\nimport { RatingsHistoryComponent } from './shared/ratings-history/ratings-history.component';\nimport { UserActivityComponent } from './shared/user-activity/user-activity.component';\nimport { ModifyMyTaskComponent } from './taskers/user-tasks/modify-my-task/modify-my-task.component';\nimport { ModifyPortfolioComponent } from './taskers/portfolios/modify-portfolio/modify-portfolio.component';\nimport { VisitorProfileComponent } from './visitor/visitor-profile/visitor-profile.component';\nimport { ModifyVisitorProfileComponent } from './visitor/modify-visitor-profile/modify-visitor-profile.component';\nimport { RatingAndReviewsListComponent } from './shared/ratings/rating-and-reviews-list/rating-and-reviews-list.component';\nimport { RatingRowDetailsComponent } from './shared/ratings/rating-row-details/rating-row-details.component';\nimport { ChangeUserPasswordComponent } from './shared/change-user-password/change-user-password.component';\nimport { BusinessAccountBalanceComponent } from './business/business-account-balance/business-account-balance.component';\n\n@NgModule({\n  declarations: [\n    ProfileComponent,\n    PersonalDetailsComponent,\n\n    LanguageSkillsComponent,\n    PersonalSkillsComponent,\n    GeneralSkillsComponent,\n    MemberContactComponent,\n    HoppiesComponent,\n    EducationDetailsComponent,\n    SocialMediaComponent,\n    BusinessAccountProfileComponent,\n    BusinessAccountDetailsComponent,\n    JobsSearcherProfileComponent,\n    ProfileStarsComponent,\n    ProfileImageComponent,\n    EditBusinessAccountComponent,\n    SinceProfileComponent,\n    BusinessCountersComponent,\n    JobsSearcherCountersComponent,\n    EditJobsSearcherComponent,\n    JobInterestsComponent,\n    PortfoliosListComponent,\n    PortfolioDetailsComponent,\n    CreatePortfolioComponent,\n    TaskerProfileComponent,\n    ModifyTaskerProfileComponent,\n    UserTasksListComponent,\n    NewUserTaskModalComponent,\n    MessagesListComponent,\n    ConversationBoxComponent,\n    RatingsHistoryComponent,\n    UserActivityComponent,\n    ModifyMyTaskComponent,\n    ModifyPortfolioComponent,\n    VisitorProfileComponent,\n    ModifyVisitorProfileComponent,\n    RatingAndReviewsListComponent,\n    RatingRowDetailsComponent,\n    ChangeUserPasswordComponent,\n    BusinessAccountBalanceComponent,\n  ],\n  imports: [\n    SharedModule,\n    ProfileRoutingModule,\n  ],\n  providers: [\n    MemberProfileResolver,\n    BusinessAccountsService,\n    EditMemberProfileResolver,\n    MessageResolver,\n    JobOffersService,\n  ],\n})\nexport class ProfileModule { }\n","import { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { User } from 'src/app/_models/Users/User';\nimport { AccountService } from 'src/app/_services/users/account.service';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { UserBusinessProfile } from '../models/user-business-profile';\n\n@Injectable()\nexport class EditMemberProfileResolver implements Resolve<User> {\n    constructor(private accountService: AccountService, private router: Router, private alertiy: AlertifyService, private authService: AuthService) { }\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\n        let userId = 0;\n        if (route.paramMap.has('userId')) {\n            userId = +route.params['userId'];\n        }\n        else if (!route.paramMap.has('userId') && this.authService.loggedIn()) {\n            userId = this.authService.getCurrentUserIdUsingToken();\n        }\n        else\n            return of(null);\n\n        return this.accountService.getUserProfileForEdit<UserBusinessProfile>(+userId).pipe(\n            catchError(error => {\n                this.alertiy.error('يوجد مشكلة في عرض بيانات المستخدم أو لا تملك صلاحية مخوله للوصول الى ملفه');\n                this.router.navigate(['']);\n                return of(null);\n            })\n        );\n    }\n}\n","<button id=\"btnToolbarAddNew\"  *ngIf=\"true\" class=\"btn btn-info btn-block\" type=\"button\" data-toggle=\"modal\" data-target=\"#formChangeUserPassword\">\n\t<span class=\"fa fa-unlock-alt\" title=\"{{'Login.ChangePassword' | translate}}\"></span> {{'Login.ChangePassword' | translate }}\n</button>\n<!-- start Normal Create Form Bootstrap Modal Dialog -->\n<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" [formGroup]=\"changeUserPasswordForm\" id=\"formChangeUserPassword\">\n\t<div class=\"modal-dialog\" role=\"document\">\n\t\t<div class=\"modal-content\">\n\t\t\t<div class=\"modal-header\">\n\t\t\t\t<h5 class=\"modal-title\"><span class=\"fa fa-asterisk\"></span>&nbsp;{{'Login.ChangePassword' | translate }}</h5>\n\t\t\t\t<button #closeModal type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t</button>\n\t\t\t</div>\n            <div class=\"modal-body\">\n                <div class=\"form-group\">\n                    <input ShowPassword formControlName=\"currentPassword\" type=\"password\" [ngClass]=\"{'is-invalid' : addValidator.currentPassword.errors && addValidator.currentPassword.touched }\"  class=\"form-control\" placeholder=\"{{'Login.CurrentPassword' | translate }}\" autocomplete=\"new-password\">\n                    <div [hidden]=\"!(addValidator.currentPassword?.touched && addValidator.currentPassword?.errors)\" class=\"invalid-feedback\">\n                        <div [hidden]=\"!addValidator.currentPassword.errors?.required\">{{'Common.Validation.Required' | translate }}</div>\n                        <div [hidden]=\"!addValidator.currentPassword.errors?.minlength\">{{'Signup.PasswordMinLength' | translate }}</div>\n                        <div [hidden]=\"!addValidator.currentPassword.errors?.maxlength\">{{'Signup.PasswordMaxLength' | translate }}</div>\n                        <div [hidden]=\"!addValidator.currentPassword.errors?.pattern\">{{'Signup.PasswordExpressionMsg' | translate }}</div>\n                    </div>\n                </div>  \n                <div class=\"form-group\">\n                    <input ShowPassword formControlName=\"newPassword\" type=\"password\" [ngClass]=\"{'is-invalid' : addValidator.newPassword.errors && addValidator.newPassword.touched }\"  class=\"form-control\" placeholder=\"{{'Login.NewPassword' | translate }}\" autocomplete=\"new-password\">\n                    <div [hidden]=\"!(addValidator.newPassword?.touched && addValidator.newPassword?.errors)\" class=\"invalid-feedback\">\n                        <div [hidden]=\"!addValidator.newPassword.errors?.required\">{{'Common.Validation.Required' | translate }}</div>\n                        <div [hidden]=\"!addValidator.newPassword.errors?.minlength\">{{'Signup.PasswordMinLength' | translate }}</div>\n                        <div [hidden]=\"!addValidator.newPassword.errors?.maxlength\">{{'Signup.PasswordMaxLength' | translate }}</div>\n                        <div [hidden]=\"!addValidator.newPassword.errors?.pattern\">{{'Signup.PasswordExpressionMsg' | translate }}</div>\n                    </div>\n                </div>  \n            </div>\n            <div class=\"modal-footer  text-right\">\n                <button class=\"btn btn-info\" [disabled]=\"isSubmitting || !changeUserPasswordForm.valid\" type=\"button\" (click)=\"updateCurrentUserPassword()\">\n                    <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.Updating'  | translate }}\n                    {{isSubmitting ? '' : 'Login.PasswordReset' | translate}}&nbsp;\n                </button>\n            </div>\n\t\t</div>\n\t</div>\n</div>\n<!-- End Normal Create Form Bootstrap Modal Dialog -->","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\nimport { ChangeUserPassword } from 'src/app/_models/Users/user-for-register';\nimport { AuthService } from 'src/app/_services/users/auth.service';\n\n@Component({\n  selector: 'app-change-user-password',\n  templateUrl: './change-user-password.component.html',\n  styleUrls: []\n})\nexport class ChangeUserPasswordComponent implements OnInit {\n  @ViewChild('closeModal') closeModal: ElementRef\n  @Output() updatedSuccessfully: EventEmitter<boolean> = new EventEmitter<boolean>();\n  changeUserPasswordForm: FormGroup;\n  isSubmitting: boolean = false;\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService, private formBuilder: FormBuilder,\n    private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.initCreateForm();\n  }\n\n  initCreateForm() {\n    this.changeUserPasswordForm = this.formBuilder.group({\n      currentPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20), Validators.pattern(RegularExpression.Password)]],\n      newPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20), Validators.pattern(RegularExpression.Password)]],\n    });\n  }\n\n  get addValidator() { return this.changeUserPasswordForm.controls; }\n\n  updateCurrentUserPassword() {\n\n    if (this.changeUserPasswordForm.valid) {\n      this.isSubmitting = true;\n      this.changeUserPasswordForm.disable();\n      let changeUserPassword = {} as ChangeUserPassword;\n      Object.assign(changeUserPassword, this.changeUserPasswordForm.value);\n      if (changeUserPassword.currentPassword === changeUserPassword.newPassword) {\n        this.isSubmitting = false;\n        this.changeUserPasswordForm.enable();\n        this.alertify.warning('فضلاً تحقق من أن كلمة المرور الحالية والجديدة غير متطابقتين');\n        return;\n      }\n      this.authService.changeCurrentUserPassword(changeUserPassword).subscribe(\n        returnMessage => {\n          this.alertify.success(returnMessage.message);\n          this.updatedSuccessfully.emit(true);\n          this.closeModal.nativeElement.click();\n        },\n        error => {\n          this.alertify.error(error);\n          this.isSubmitting = false;\n          this.changeUserPasswordForm.enable();\n          this.updatedSuccessfully.emit(false);\n        },\n        () => { this.isSubmitting = false; this.changeUserPasswordForm.enable(); });\n    } else {\n      this.alertify.warning(this.appTranslation.get('Common.Data.Invalid'));\n      this.changeUserPasswordForm.markAllAsTouched();\n      this.isSubmitting = false;\n    }\n  }\n}","\n<div  class=\"msg_history\" #conversationPanel>\n    <ng-container *ngIf=\"!isLoadingConversation && conversationMessages?.length == 0\">\n        <div class=\"container d-flex h-100\">\n            <div class=\"row align-self-center justify-content-center w-100\">\n                <div class=\"d-flex flex-column bd-highlight\">\n                    <div class=\"text-center\">\n                        <i class=\"fa fa-inbox fa-5x fa-fw text-secondary\"></i>\n                    </div>\n                    <div class=\"text-center text-secondary mt-4\">\n                        <h3>لا يوجد أي محادثه مسبقاً مع هذا العضو</h3>\n                    </div>\n                  </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"isLoadingConversation; else conversationTemplate\">\n        <ng-container *ngIf=\"isLoadingConversation && recipientId > 0; else selectRecipientTemplate\">\n            <app-spinner></app-spinner>\n        </ng-container>\n        <ng-template #selectRecipientTemplate>\n            <div class=\"container d-flex h-100\">\n                <div class=\"row align-self-center justify-content-center w-100\">\n                    <div class=\"d-flex flex-column bd-highlight\">\n                        <div class=\"text-center\">\n                            <i class=\"fa fa-inbox fa-5x fa-fw text-secondary\"></i>\n                        </div>\n                        <div class=\"text-center text-secondary mt-4\">\n                            <h3>لا يوجد محادثة لعرضها</h3>\n                        </div>\n                      </div>\n                </div>\n            </div>\n        </ng-template>\n    </ng-container>\n    <ng-template #conversationTemplate>\n        <ng-container *ngFor=\"let message of conversationMessages; let i=index\">\n            <ng-container *ngIf=\"isCurrentUserProfile(+message.senderId); else recipientTemplate\">\n                <div class=\"conversation-item item-right\">\n                    <!-- <div class=\"conversation-user\">\n                        <img src=\" assets/img/team/m-avatar.jpg\" class=\"img-thumbnail\" alt=\"\">\n                    </div> -->\n                    <div class=\"conversation-body\">\n                        <div class=\"d-flex justify-content-between\">\n                            <div class=\"text\">{{message?.content}}</div>\n                            <div class=\"time hidden-xs\">&nbsp;{{message?.messageSent | timeAgo}}</div>\n                        </div>\n                        <div class=\"d-flex justify-content-end\">\n                            <strong *ngIf=\"!message.isRead\" class=\"read align-middle\">(غير مقروءة)</strong>\n                            <strong *ngIf=\"message.isRead\" class=\"read text-success align-middle\"><i class=\"fa fa-check\"></i>(مقروءة {{message.dateRead | timeAgo}})</strong>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template #recipientTemplate>\n                <div class=\"conversation-item item-left\">\n                    <div class=\"conversation-user\">\n                        <img src=\"{{message?.senderPhotoUrl || (isFemaleAccount() ? 'assets/img/team/w-avatar.jpg' : 'assets/img/team/m-avatar.jpg')}}\" class=\"img-thumbnail\" alt=\"\">\n                    </div>\n                    <div class=\"conversation-body\">\n                        <div class=\"d-flex justify-content-between\">\n                            {{makeMessageAsReaded(message)}}\n                            <div class=\"name\">{{message?.senderKnownAs}}</div>\n                            <div class=\"time hidden-xs\">&nbsp;{{message?.messageSent | timeAgo}}</div>\n                        </div>\n                        <div class=\"text\">{{message?.content}}</div>\n                    </div>\n                </div>\n            </ng-template>\n        </ng-container>\n    </ng-template>\n</div>\n<div class=\"type_msg\" *ngIf=\"recipientId\">\n    <form #messageForm=\"ngForm\" (ngSubmit) = \"messageForm.valid && sendMessage();\">\n        <div class=\"input_msg_write d-flex align-items-center\">\n            <input type=\"text\" name=\"content\" [(ngModel)]=\"newMessage.content\" required  class=\"write_msg\" placeholder=\"أكتب رسالتك هنا ...\" [disabled]=\"!(recipientId > 0)\" autocomplete=\"off\"/>\n            <button class=\"msg_send_btn\" type=\"submit\" [disabled]=\"!messageForm.valid && !(recipientId > 0)\"><i class=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i></button>\n        </div>\n    </form>\n</div>\n\n","import { Component, OnInit, Input, ViewChild, ElementRef, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MessageRead, MessageResult } from 'src/app/_models/chats/message';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\nimport { tap } from 'rxjs/operators';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { ChatsService } from 'src/app/_services/chats/chats.service';\nimport { MessageWithObject } from 'src/app/_models/data/actions-result';\n\n@Component({\n  selector: 'app-conversation-box',\n  templateUrl: './conversation-box.component.html',\n  styleUrls: ['./conversation-box.component.css']\n})\nexport class ConversationBoxComponent implements OnInit {\n  @Input('RecipientId') recipientId: number = 0;\n  @Input('CurrentUserId') currentUserId: number = 0;\n  @Input('RecipientGender') recipientGender: Gender = 0;\n  @ViewChild('conversationPanel') conversationPanel: ElementRef<any>;\n  currentConversationID: string;\n  conversationMessages: MessageResult[];\n  isLoadingConversation: boolean = true;\n  newMessage: any = {};\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private authService: AuthService,\n    private messagesService: MessagesService,\n    private chatsService: ChatsService) {\n  }\n\n  ngAfterViewChecked(): void {\n    this.scrollTopChatBoxPanel();\n  }\n\n  scrollTopChatBoxPanel(): void {\n    this.conversationPanel.nativeElement.scrollTop = this.conversationPanel.nativeElement.scrollHeight;\n  }\n\n  isCurrentUserProfile(userId: number): boolean {\n    return this.authService.isCurrentUserProfile(userId);\n  }\n\n  ngOnInit(): void {\n    // this.initConversationMessages();\n    // هذا من أجل الغاء أي مستمع أخر موجود من قبل لمحادثه أخرى\n    this.chatsService.hubConnection.off('receiveMessage');\n    // استقابل أي محادث جديده في هذه المجموعة\n    this.chatsService.hubConnection.on('receiveMessage', (message: MessageResult) => {\n      // في حالة كان المستقبل فانه يضيفه للمحادثه\n      if (this.currentUserId > 0 && message.recipientId === this.currentUserId)\n        this.conversationMessages.push(message);\n    });\n    // عند قراءة الرسالة من قبل المستقبل يتم تحديث حالة الرساله بأنه تم قراءتها\n    this.chatsService.hubConnection.off('markMessageAsRead');\n    this.chatsService.hubConnection.on('markMessageAsRead', (messageRead: MessageRead) => {\n      let messageIndex = this.conversationMessages.findIndex(c => c.id === +messageRead.id);\n      this.conversationMessages[messageIndex].dateRead = messageRead.dateRead;\n      this.conversationMessages[messageIndex].isRead = true;\n    });\n  }\n\n  ngOnDestroy() {\n    this.chatsService.hubConnection.off('receiveMessage');\n    this.chatsService.hubConnection.off('markMessageAsRead');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.initConversationMessages();\n  }\n\n  initConversationMessages(): void {\n    if (this.recipientId > 0) {\n      this.loadConversationMessages();\n    }\n  }\n\n  isFemaleAccount(): boolean {\n    if (this.recipientGender as Gender === Gender.female as Gender) {\n      return true;\n    } else { return false; }\n  }\n\n  makeMessageAsReaded(message: MessageResult) {\n    if (message != null && this.currentUserId > 0 && message.isRead === false && message.recipientId === this.currentUserId) {\n      console.log('makeMessageAsReaded exe');\n      this.messagesService.markAsRead(this.currentUserId, message.id);\n      message.isRead = true;\n    }\n  }\n\n  loadConversationMessages() {\n    const currentUserId = +this.authService.getCurrentUserIdUsingToken();\n    // جلب رقم المحادثه الحالية و الانضمام الي موزع المحادثات\n    this.messagesService.getCurrentConversationId(currentUserId, this.recipientId).subscribe(\n      (result: MessageWithObject) => {\n        // الانضمام الى مجموعة المراسلة الخاصه مع مستخدم الأخر\n        this.chatsService.startJoinGroupHubConnection(result.data.toString());\n      },\n      error => { this.alertify.error(error) }\n    );\n    // عند تحميل المحادثه بالكامل يتم تغيير حالة المحادثه بانه تم قراءتها\n    this.messagesService.getConversation(currentUserId, this.recipientId).pipe(\n      tap(messages => {\n        // // يتم فحص الرسائل رساله رساله و تغيير حالتها كمقروءه\n        // for (const message of messages) {\n        //   if (message.isRead === false && message.recipientId === currentUserId) { this.messagesService.markAsRead(currentUserId, message.id); }\n        // };\n      })).subscribe(\n        messages => {\n          this.conversationMessages = messages.reverse();\n        },\n        error => { this.alertify.error(error); },\n        () => {\n          // تحديث عداد المحادثات الغير مقرؤه والذي يظهر القائمة الرئيسية للموقع\n          setTimeout(() => {\n            this.isLoadingConversation = false;\n            this.messagesService.getUnreadCount(currentUserId).subscribe(res => {\n              this.authService.unreadCount.next(res.toString());\n              setTimeout(() => {\n                this.messagesService.getConversation(currentUserId, this.recipientId).subscribe(messages => this.conversationMessages = messages.reverse());\n              }, 3000);\n            });\n          }, 1000);\n        }\n      )\n  }\n\n  sendMessage() {\n    let userId = 0;\n    if (this.authService.loggedIn())\n      userId = this.authService.getCurrentUserIdUsingToken();\n    this.newMessage.recipientId = this.recipientId;\n    this.messagesService.sendMessage(+userId, this.newMessage).subscribe(\n      (message: MessageResult) => {\n        this.conversationMessages.push(message);\n        this.newMessage.content = '';\n        //this.chatsService.invokeRefreshConnection();\n        // this.chatsService.invokeNewMessage();\n      },\n      error => { this.alertify.error(error) }\n    )\n  }\n\n}\n","<app-breadcrumbs title=\"\" currentPageTitle=\"\"></app-breadcrumbs>\n\n<article id=\"profile\" class=\"content\">\n    <div class=\"container\">\n        <div class=\"card\">\n            <div class=\"card-header d-flex justify-content-between\">\n                <h5><span class=\"fa fa-comments\"></span>&nbsp;{{'Chatbox.Chats' | translate }}</h5>\n\n                <div class=\"\">\n                    <div class=\"\">\n                        <div class=\"input-group\">\n                            <input type=\"text\" class=\" form-control\" placeholder=\"البحث\">\n                            <span class=\"input-group-addon\">\n                                <button type=\"button\" class=\"btn btn-success\"> <i class=\"fa fa-search\"\n                                        aria-hidden=\"true\"></i> </button>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-body p-0\">\n                <div class=\"inbox_msg\">\n                    <div [hidden]=\"isMobile && toggleMobile\" class=\"inbox_people pull-left col-md-4\tp-0\">\n\n                        <div class=\"inbox_chat\">\n                          \n <div class=\"container d-flex h-100\" *ngIf=\"!messagesItems.length\">\n                <div class=\"row align-self-center justify-content-center w-100\">\n                    <div class=\"d-flex flex-column bd-highlight\">\n                        <div class=\"text-center\">\n                            <i class=\"fas fa-comment-slash fa-2x text-secondary\"></i>\n                        </div>\n                        <div class=\"text-center text-secondary mt-4\">\n                            <h3>{{'Chatbox.NoContactsNow'|translate}}</h3>\n                        </div>\n                      </div>\n                </div>\n            </div>\n                            <div class=\"chat_list\" *ngFor=\"let conversation of messagesItems; let i=index\"\n                                [ngClass]=\"{'active_chat': isSelectedConversation(conversation)}\"\n                                (click)=\"toggleWindows(conversation)\">\n                                <div class=\"chat_people\">\n                                    <div class=\" chat_img pull-left\"> <img [src]=\"getContactPicture(conversation)\">\n                                    </div>\n                                    <div class=\"chat_ib pl-2 pull-right\">\n                                        <h5>\n                                            {{getContactName(conversation)}}\n                                            <span class=\"chat_date pull-right\">{{conversation?.messageSent |\n                                                timeAgo}}</span>\n                                        </h5>\n                                        <p\n                                            [ngClass]=\"{'font-weight-bold text-dark': !conversation?.isRead && !isSenderIsCurrentUser(conversation?.senderId)}\">\n                                            {{conversation?.content}}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div [hidden]=\"isMobile && !toggleMobile\" class=\"mesgs pull-right col-md-8 p-0\">\n                        <div class=\"headind_srch\">\n                            <div class=\"recent_heading pull-left\">\n                                <h4>{{getContactName(selectedConversation)}}</h4>\n                            </div>\n                            <div *ngIf=\"isMobile\" class=\"pull-right\"><a class=\"nav-link text-danger p-0\"\n                                    (click)=\"toggleWindows(null)\"><i class=\"fa fa-times-circle-o\"></i>&nbsp;غلق</a>\n                            </div>\n                        </div>\n                        <!-- <app-conversation-box [RecipientId]=\"userProfile?.id\" [RecipientGender]=\"userProfile?.gender\"></app-conversation-box> -->\n                        <app-conversation-box [RecipientId]=\"getRecipientId(selectedConversation)\" [RecipientGender]=\"\"\n                            [CurrentUserId]=\"currentUserId\"></app-conversation-box>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</article>","import { Component, OnInit, HostListener } from '@angular/core';\nimport { MessageResult, Message } from 'src/app/_models/chats/message';\nimport { Column, Pagination, PaginationResult } from 'src/app/_models/data/Pagination';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\nimport { NgbPopover } from '@ng-bootstrap/ng-bootstrap';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { MessageParams } from 'src/app/_models/chats/message-params';\nimport { tap } from 'rxjs/operators';\nimport { ChatsService } from 'src/app/_services/chats/chats.service';\n\n@Component({\n  selector: 'app-messages-list',\n  templateUrl: './messages-list.component.html',\n  styleUrls: ['./messages-list.component.css']\n})\nexport class MessagesListComponent implements OnInit {\n  messagesItems: MessageResult[];\n  selectedConversation: MessageResult = null;\n  entityCaption: string;\n  private readonly PAGE_SIZE = 10;\n  mesaagesQuery: MessageParams = <MessageParams>{ pageSize: this.PAGE_SIZE };\n  screenHeight: number;\n  screenWidth: number;\n  mobileWidth: number = 760;\n  isMobile: boolean = false;\n  toggleMobile: boolean = false;\n  currentUserId: number;\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private messagesService: MessagesService,\n    private chatsService: ChatsService) {\n    this.getScreenSize();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    this.isMobile = this.screenWidth < this.mobileWidth;\n    console.log(this.screenHeight, this.screenWidth);\n  }\n\n  toggleWindows(conversation: MessageResult) {\n    this.selectedConversation = conversation;\n    if (this.selectedConversation) {\n      this.selectedConversation.isRead = true;\n    }\n    this.toggleMobile = !this.toggleMobile;\n  }\n\n\n  ngOnInit() {\n    if (this.authService.loggedIn())\n      this.currentUserId = this.authService.getCurrentUserIdUsingToken();\n    this.route.data.subscribe(data => {\n      this.messagesItems = data['messagesList']?.items;\n      this.mesaagesQuery = data['messagesList']?.pagination as MessageParams;\n    });\n    this.entityCaption = this.appTranslation.get(this.appTranslation.get('Messages.messageCaption'));\n    this.initUpdateListenerMessages();\n  }\n\n  initUpdateListenerMessages(): void {\n\n    this.chatsService.registeringCurrentUserToHubConnection();\n    // // هذا من أجل الغاء أي مستمع أخر موجود من قبل لمحادثه أخرى\n    this.chatsService.hubConnection.off('updateingChatBoxMessages');\n    // // استقابل أي محادث جديده في هذه المجموعة\n    this.chatsService.hubConnection.on('updateingChatBoxMessages', (message: MessageResult) => {\n      this.updateingChatBoxMessages(message);\n    });\n  }\n  // من أجل تحديث قاءمة المحادثات في حال قام مستخدم اخر بمراسلته وهو فاتح لصندوق المحادثات\n  updateingChatBoxMessages(message: MessageResult): void {\n    let conversationId = message.conversationId.toString();\n    let conversationIndex = this.messagesItems.findIndex(c => +c.conversationId === +conversationId);\n    if (this.messagesItems.length > 0 && conversationIndex >= 0){\n      this.messagesItems[conversationIndex] = message;\n      this.messagesItems.sort(function(a, b) {\n        return  +new Date(a.messageSent) - +new Date(b.messageSent);\n      });\n      this.messagesItems.reverse();\n    }\n    else\n      this.messagesItems.unshift(message);\n  }\n\n  ngOnDestroy() {\n    this.chatsService.hubConnection.off('updateingChatBoxMessages');\n  }\n\n  getAllMessages() {\n    this.messagesService.getPagedMessages(this.currentUserId, this.mesaagesQuery).subscribe((res: PaginationResult<MessageResult[]>) => {\n      this.messagesItems = res.items;\n      this.mesaagesQuery = res.pagination as MessageParams;\n    },\n      error => this.alertify.error(this.appTranslation.getWithValue('Common.Data.errorGettingData', this.entityCaption))\n    );\n  }\n\n  onFilterChange() {\n    this.mesaagesQuery.pageNumber = 1;\n    this.getAllMessages();\n  }\n\n  resetFilter() {\n    this.mesaagesQuery = <MessageParams>{\n      pageNumber: 1,\n      pageSize: this.PAGE_SIZE,\n      filterText: ''\n    };\n    this.getAllMessages();\n  }\n\n  refreshData() {\n    this.resetFilter();\n    this.alertify.info('تم تحديث البيانات');\n  }\n\n  sortBy(columnName: string) {\n    if (this.mesaagesQuery.sortBy === columnName) {\n      this.mesaagesQuery.isSortAscending = !this.mesaagesQuery.isSortAscending;\n    } else {\n      this.mesaagesQuery.sortBy = columnName;\n      this.mesaagesQuery.isSortAscending = true;\n    }\n    this.getAllMessages();\n  }\n\n  onPageChange(event: any) {\n    this.mesaagesQuery.pageNumber = event.page;\n    this.getAllMessages();\n  }\n\n  isSelectedConversation(currentConversation: MessageResult) {\n    return this.selectedConversation?.conversationId === currentConversation.conversationId;\n  }\n\n  getContactPicture(lastMessage: MessageResult): string {\n    if (lastMessage.senderId === this.currentUserId)\n      return lastMessage.recipientPhotoUrl;\n    else\n      return lastMessage.senderPhotoUrl;\n  }\n\n  getContactName(lastMessage: MessageResult): string {\n    if (lastMessage?.senderId === this.currentUserId)\n      return lastMessage.recipientKnownAs;\n    else if (lastMessage?.recipientId === this.currentUserId)\n      return lastMessage.senderKnownAs;\n    else\n      return '';\n  }\n\n  getRecipientId(lastMessage: MessageResult): number {\n    if (lastMessage?.senderId === this.currentUserId)\n      return lastMessage.recipientId;\n    else if (lastMessage?.recipientId === this.currentUserId)\n      return lastMessage.senderId;\n    else\n      return 0;\n  }\n\n  isSenderIsCurrentUser(senderId: number): boolean {\n    if (+senderId === this.currentUserId)\n      return true;\n    else\n      return false;\n  }\n\n\n}\n","<div class=\"row\" >\n    <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.Languages' | translate }}</span>\n    </h4>\n    <ng-container *ngIf=\"userLanguages?.length > 0; else nothingTemplate\">\n        <div class=\"col-12 my-2\">\n            <span class=\"h6 badge-xl bg-info \" *ngFor=\"let language of userLanguages; let i = index;\"><i class=\"fa fa-language\"></i>&nbsp;&nbsp;{{language?.language?.name}}</span>\n        </div>\n    </ng-container>\n    <ng-template #nothingTemplate>\n        <div class=\"col-12 my-2\">\n            <p class=\"form-control-plaintext text-break text-secondary pt-0\">{{'Common.Data.NoData' | translate }}</p>\n        </div>\n    </ng-template>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { UserLanguageResult } from 'src/app/_models/Users/language';\n\n@Component({\n  selector: 'app-language-skills',\n  templateUrl: './language-skills.component.html',\n  styleUrls: []\n})\nexport class LanguageSkillsComponent implements OnInit {\n  @Input('Languages') userLanguages: UserLanguageResult[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { SocialMediaAccountResult, UserProfileResult } from 'src/app/_models/Users/user-profile-result';\n\n@Component({\n  selector: 'app-member-contact',\n  templateUrl: './member-contact.component.html',\n  styleUrls: []\n})\nexport class MemberContactComponent implements OnInit {\n  @Input('UserProfileData') userProfile: UserProfileResult;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"row profile-user-info\">\n    <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Profile.Contact' | translate }}</span>\n    </h4>\n    <div class=\"col-sm-8 pl-4\">\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'Signup.Phone' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.phoneNumber}}&nbsp;<a class=\"text-success\" [href]=\"'https://wa.me/' + userProfile?.whatsApp\" target=\"_blank\"><i class=\"fa fa-whatsapp\"></i></a></p>\n            </div>\n        </div>\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.management.Email' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.email}}</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-sm-4 profile-social\">\n        <app-social-media [SocialMediaUserAccounts]=\"userProfile?.socialMediaAccounts\"></app-social-media>\n    </div>\n</div>","<ul *ngIf=\"socialMediaAccounts\" class=\"list-unstyled\">\n    <li *ngIf=\"socialMediaAccounts.twitter || socialMediaAccounts.twitter !== ''\"><i class=\"fa fa-twitter-square pr-1\"></i><a target=\"_blank\" [href]=\"'https://twitter.com/' + socialMediaAccounts.twitter\">{{socialMediaAccounts?.twitter}}</a></li>\n    <li *ngIf=\"socialMediaAccounts.linkedin || socialMediaAccounts.linkedin !== ''\"><i class=\"fa fa-linkedin-square pr-1\"></i><a target=\"_blank\" [href]=\"'http://ca.linkedin.com/in/' + socialMediaAccounts.linkedin\">{{socialMediaAccounts?.linkedin}}</a></li>\n    <li *ngIf=\"socialMediaAccounts.facebook || socialMediaAccounts.facebook !== ''\"><i class=\"fa fa-facebook-square pr-1\"></i><a target=\"_blank\" [href]=\"'https://www.facebook.com/' + socialMediaAccounts.facebook\">{{socialMediaAccounts?.facebook}}</a></li>\n    <li *ngIf=\"socialMediaAccounts.instagram || socialMediaAccounts.instagram !== ''\" ><i class=\"fa fa-instagram pr-1\"></i><a target=\"_blank\" [href]=\"'https://www.instagram.com/' + socialMediaAccounts.instagram\">{{socialMediaAccounts?.instagram}}</a></li>\n</ul>","import { Component, OnInit, Input } from '@angular/core';\nimport { SocialMediaAccountResult } from 'src/app/_models/Users/user-profile-result';\n\n@Component({\n  selector: 'app-social-media',\n  templateUrl: './social-media.component.html',\n  styleUrls: []\n})\nexport class SocialMediaComponent implements OnInit {\n  @Input('SocialMediaUserAccounts') socialMediaAccounts: SocialMediaAccountResult;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"col-md-12 pl-4\">\n    <div class=\"form-group row my-0\">\n        <label  class=\"col-sm-3 col-form-label profile-info-title\">{{'users.Profile.Name' | translate }}</label>\n        <div class=\"col-sm-9\">\n            <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.fullName}}</p>\n        </div>\n    </div>\n    <div class=\"form-group row my-0\">\n        <label class=\"col-form-label col-sm-3 profile-info-title\">{{'users.Students.City' | translate }}</label>\n        <div class=\"col-sm-3\">\n            <p class=\"form-control-plaintext profile-info-details\"><i class=\"fa fa-map-marker\"></i>&nbsp;&nbsp;{{userProfile?.cityName}}</p>\n        </div>\n        <label class=\"col-form-label col-sm-3 profile-info-title\">{{'users.Students.Gender' | translate }}</label>\n        <div class=\"col-sm-3\">\n            <p class=\"form-control-plaintext profile-info-details\"><i [ngClass]=\"getGenderStyle()\"></i>&nbsp;&nbsp;{{userProfile?.genderName}}</p>\n        </div>\n    </div>\n    <div class=\"form-group row my-0\">\n        <label class=\"col-form-label col-sm-3 profile-info-title\">{{'users.Students.Age' | translate }}</label>\n        <div class=\"col-sm-3\">\n            <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.age}}</p>\n        </div>\n    </div>\n    <div *ngIf=\"showAboutField()\" class=\"form-group row my-0\">\n        <label  class=\"col-sm-12 col-form-label profile-info-title\">{{'users.Students.About' | translate }}</label>\n        <div class=\"col-sm-12\">\n            <ng-container *ngIf=\"getAboutValue; else nothingTemplate\">\n                <p class=\"form-control-plaintext profile-info-details\">{{getAboutValue}}</p>\n            </ng-container>\n            <ng-template #nothingTemplate>\n                <p class=\"form-control-plaintext text-break text-secondary pt-0\">{{'Common.Data.NoData' | translate }}</p>\n            </ng-template>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { Gender, AccountType } from 'src/app/_models/Users/user-for-register';\n\n@Component({\n  selector: 'app-personal-details',\n  templateUrl: './personal-details.component.html',\n  styles: [``]\n})\nexport class PersonalDetailsComponent implements OnInit {\n  @Input('UserProfileData') userProfile: UserProfileResult;\n  GenderEnum: Gender;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n  getGenderStyle() {\n    if (<Gender>this.userProfile.gender === <Gender>Gender.male) {\n      return 'fa fa-lg fa-male text-sky';\n    } else if (<Gender>this.userProfile.gender === <Gender>Gender.female) {\n      return 'fa fa-lg fa-female text-pink';\n    }\n    else { return '' }\n  }\n\n  showAboutField(): boolean {\n    if ((<AccountType>this.userProfile.accountType === <AccountType>AccountType.taskerAccount) ||\n      (<AccountType>this.userProfile.accountType === <AccountType>AccountType.studentAccount)) {\n      return true;\n    }\n    return false;\n  }\n\n  get getAboutValue(): string {\n    if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.taskerAccount)\n      return this.userProfile?.taskerAccountData?.about;\n    else if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.studentAccount)\n      return this.userProfile?.studentAccountData?.about;\n  }\n\n}\n","\n\n<ng-container *ngIf=\"isCurrentUserProfile; else notMyProfile\">\n    <div class=\"picture-container\">\n        <div class=\"picture\">\n            <img src=\"{{photoUrl || (isFemaleAccount() ? 'assets/img/team/w-avatar.jpg' : 'assets/img/team/m-avatar.jpg')}}\" alt=\"\" class=\"profile-img img-fluid\">\n            <input [hidden]=\"isUploading\" type=\"file\" id=\"wizard-picture\" (change)=\"onFileChange($event, $event.target.files)\" [attr.accept]=\"allowTypeToUpload.join(', ')\" >\n        </div>\n        <div *ngIf=\"uploadResponse?.status === uploadStatusEnum.progress\" class=\"progress\">\n            <div class=\"progress-bar progress-bar-striped bg-info\" role=\"progressbar\" [style.width.%]=\"uploadResponse.message\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\">{{uploadResponse.message}}%</div>\n        </div>\n        <h6 [hidden]=\"isUploading\" [ngClass]=\"isUploading ? 'text-secondary' : 'text-info'\"><i class=\"fa fa-upload\" ></i>&nbsp;<strong>تغيير الصورة</strong></h6>\n    </div>\n</ng-container>\n\n<ng-template #notMyProfile>\n    <img src=\"{{photoUrl || (isFemaleAccount() ? 'assets/img/team/w-avatar.jpg' : 'assets/img/team/m-avatar.jpg')}}\" alt=\"\" class=\"profile-img img-fluid\">\n</ng-template>\n\n\n<div class=\"profile-label\">\n    <span class=\"lead\"><span class=\"badge badge-secondary\">{{userProfile.jobTitle}}</span></span>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { Photo } from 'src/app/_models/Users/Photo';\nimport { UploadHandlerResult, UploadStatus } from 'src/app/_helpers/uploader/uploadHandlerResult';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { UserService } from 'src/app/_services/users/User.service';\n\n@Component({\n  selector: 'app-profile-image',\n  templateUrl: './profile-image.component.html',\n  styles: [`\n  .picture-container {\n    position: relative;\n    cursor: pointer;\n    text-align: center;\n  }\n  \n  .picture input[type=\"file\"] {\n    cursor: pointer;\n    display: block;\n    height: 100%;\n    left: 0;\n    opacity: 0 !important;\n    position: absolute;\n    top: 0;\n    width: 100%;\n  }\n  `]\n})\nexport class ProfileImageComponent implements OnInit {\n  photoUrl: string;\n  @Input('UserProfileData') userProfile: UserProfileResult;\n  @Output() addSuccessfully: EventEmitter<Photo> = new EventEmitter<Photo>();\n  isUploading: boolean = false;\n  uploadResponse: UploadHandlerResult<Photo>;\n  uploadStatusEnum = UploadStatus;\n  allowTypeToUpload = ['Image/png', 'Image/jpeg', 'Image/jpg', 'Image/gif', 'Image/bmp'];\n  allowTypeToUploadNames = ['png', 'jpeg', 'jpg', 'gif', 'bmp'];\n\n\n  constructor(public authService: AuthService,\n    private appTranslation: AppTranslationService, private alertify: AlertifyService,\n    private userService: UserService) { }\n\n  ngOnInit(): void {\n    if (this.isCurrentUserProfile)\n      this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n    else\n      this.photoUrl = this.userProfile.photoURL;\n  }\n\n  get isCurrentUserProfile(): boolean {\n    return this.authService.isCurrentUserProfile(this.userProfile.id);\n  }\n\n  isFemaleAccount(): boolean {\n    if (this.userProfile?.gender as Gender === Gender.female as Gender) {\n      return true;\n    } else { return false; }\n  }\n\n  onFileChange(event, files: FileList) {\n    if (this.isUploading) {\n      this.alertify.warning(`يتم رفع صور الرجاء الانتظار لحين الانتهاء`);\n      return;\n    }\n    const maxFileSize = 2; // MB\n    if (event.target.files.length == 1) {\n      let file: File = <File>files[0];\n      if (!this.allowTypeToUpload.find(fn => fn.trim().toLowerCase() === file.type.trim().toLowerCase())) {\n        this.alertify.alert(`تحقق من نوع الملف الذي قمت باختياره ، يسمح فقط بالصور احد الأنواع التالية <br >\n                ${this.allowTypeToUploadNames.join(' , ')}`);\n        return;\n      }\n      if (file.size > (maxFileSize * 1024 * 1024)) {\n        this.alertify.warning(`${event.target.files.name} <br > يجب أن لا يتجاوز حجم الصورة ${maxFileSize} ميقا بايت.`);\n        return;\n      }\n      this.isUploading = true;\n      this.startUploadProfilePhoto(file);\n    }\n  }\n  //     \n  startUploadProfilePhoto(file: File) {\n    const formData = new FormData();\n    formData.append('file', file, file.name);\n    this.userService.updateProfilePhoto(formData, +this.authService.getCurrentUserIdUsingToken()).subscribe(\n      returnPhoto => {\n        this.uploadResponse = returnPhoto;\n        if (<UploadStatus>returnPhoto.status === <UploadStatus>UploadStatus.success ||\n          <UploadStatus>returnPhoto.status === <UploadStatus>UploadStatus.successWithSomeFailure) {\n          this.alertify.success(this.appTranslation.get('Common.Data.SavedSuccessfully'));\n          this.authService.refreshUserProfilePhoto(returnPhoto.data);\n          this.addSuccessfully.emit(returnPhoto.data);\n        } else if (<UploadStatus>returnPhoto.status === <UploadStatus>UploadStatus.failure) {\n          this.alertify.error(returnPhoto.message);\n        }\n      },\n      error => {\n        this.alertify.error(error);\n        this.isUploading = false;\n      },\n      () => { this.isUploading = false; });\n  }\n\n\n\n}\n","<div class=\"profile-stars\">\n    <ngb-rating  [max]=\"5\" [(rate)]=\"rating\" [readonly]=\"true\">\n        <ng-template let-fill=\"fill\" let-index=\"index\">\n          <span class=\"star\" [class.filled]=\"fill === 100\"><i class=\"fa fa-star\"></i></span>\n        </ng-template>\n    </ngb-rating>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-profile-stars',\n  templateUrl: './profile-stars.component.html',\n  styles: [\n  `.star {\n    font-size: 1.3rem;\n    color: #fbedd9;\n  }\n  .filled {\n    color: #EDB867;\n  }\n  .bad {\n    color: #deb0b0;\n  }\n  .filled.bad {\n    color: #ff1e1e;\n  }`]\n})\nexport class ProfileStarsComponent implements OnInit {\n  @Input('Rating') rating: number = 0;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ratings-history',\n  templateUrl: './ratings-history.component.html',\n  styleUrls: ['./ratings-history.component.css']\n})\nexport class RatingsHistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"user-activity\">\n    <div class=\"activity-rate\">\n        <i class=\"fa fa-star\"></i>\n        <i class=\"fa fa-star\"></i>\n        <i class=\"fa fa-star-o\"></i>\n        <i class=\"fa fa-star-o\"></i>\n        <i class=\"fa fa-star-o\"></i>\n    </div>\n    <div class=\"activity-details align-middle\">\n        <span>قام المستخدم بالانضمام للمنصة لأول مره</span>\n        <abbr class=\"activity-time\" title=\"2020/08/08 12:08\">منذ 10 دقائق</abbr>\n    </div>\n</div>\n<div class=\"user-activity\">\n    <div class=\"activity-rate\">\n        <i class=\"fa fa-star\"></i>\n        <i class=\"fa fa-star\"></i>\n        <i class=\"fa fa-star-o\"></i>\n        <i class=\"fa fa-star-o\"></i>\n        <i class=\"fa fa-star-o\"></i>\n    </div>\n    <div class=\"activity-details\">\n        <span>\n            قام جهة التوظيف <a href=\"#\">مطاعم الشرق الأوسط</a> بتقييم أداء الموظف، بعد توظيفه على العرض رقم <a href=\"#\">#223</a> \n            <abbr class=\"activity-time\" title=\"2020/08/08 12:08\">منذ 10 دقائق</abbr>\n        </span>\n        \n    </div>\n</div>","<ng-container *ngFor=\"let ratingDetails of ratingsAndReviews; let i=index\">\n    <app-rating-row-details [RatingAndReview]='ratingDetails'></app-rating-row-details>\n</ng-container>\n\n<div class=\"alert alert-info text-center\" *ngIf=\"!ratingsAndReviews.length\">\n    {{'Rating.NoRatinges'|translate}}\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { RatingAndReview } from 'src/app/_models/Users/rating-and-review';\n\n@Component({\n  selector: 'app-rating-and-reviews-list',\n  templateUrl: './rating-and-reviews-list.component.html',\n  styleUrls: []\n})\nexport class RatingAndReviewsListComponent implements OnInit {\n  @Input('RatingsAndReviews') ratingsAndReviews: RatingAndReview[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex bg-light mb-2\">\n    <div class=\"align-self-center p-2 mx-2\">\n        <ngb-rating [max]=\"5\" [(rate)]=\"ratingAndReview.rating\" [readonly]=\"true\" class=\"activity-rate\">\n            <ng-template let-fill=\"fill\" let-index=\"index\">\n              <span class=\"star\" [class.filled]=\"fill === 100\"><i class=\"fa fa-star\"></i></span>\n            </ng-template>\n        </ngb-rating>\n        <div>{{ratingAndReview?.createdDate | timeAgo}}</div>\n    </div>\n    <div class=\"p-2 flex-grow-1\" [ngSwitch]=\"ratingAndReview.type\">\n        <ng-container *ngSwitchCase=\"RateTypeEnum.ServiceProvider\">\n            <div class=\"d-flex flex-column\">\n                <div><a class=\"text-info\" [routerLink]=\"(ratingAndReview?.reviewerUser) ? ['/profile', ratingAndReview?.reviewerUser?.id , ratingAndReview?.reviewerUser?.fullName] : ['']\" role=\"button\">{{ratingAndReview?.reviewerUser?.fullName}}</a></div>\n                <div class=\"pb-1 text-secondary\"><i class=\"fa fa-tag px-1\"></i>{{'Tasks.Type' | translate }} [{{getServiceOrderReviewDetails.name}}]</div>\n                <div>\n                    <span>{{ratingAndReview?.comment}}</span>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"RateTypeEnum.EmployerRatingTheWorker\">\n            <div class=\"d-flex flex-column\">\n                <div class=\"pb-1 text-secondary\"><i class=\"fa fa-tag px-1\"></i><a class=\"text-info\" [routerLink]=\"(getRatingWorkerByEmployerDetails) ? ['/jobs', 'details', getRatingWorkerByEmployerDetails.id , getRatingWorkerByEmployerDetails.name] : ['']\">{{'Applicants.JobOffer' | translate }} [{{getRatingWorkerByEmployerDetails.name}}]</a></div>\n                <div><i class=\"fa fa-user-circle-o px-1 text-secondary\"></i> <a class=\"text-info\" [routerLink]=\"(ratingAndReview?.reviewerUser) ? ['/profile', ratingAndReview?.reviewerUser?.id , ratingAndReview?.reviewerUser?.fullName] : ['']\" role=\"button\">{{ratingAndReview?.reviewerUser?.fullName}}</a></div>\n                <div>\n                    <span>{{ratingAndReview?.comment}}</span>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"RateTypeEnum.WorkerRatingTheEmployer\">\n            <div class=\"d-flex flex-column\">\n                <div class=\"pb-1 text-secondary\"><i class=\"fa fa-tag px-1\"></i><a class=\"text-info\" [routerLink]=\"(getRatingEmployerByWorkerDetails) ? ['/jobs', 'details', getRatingEmployerByWorkerDetails.id , getRatingEmployerByWorkerDetails.name] : ['']\">{{'Applicants.JobOffer' | translate }} [{{getRatingEmployerByWorkerDetails.name}}]</a></div>\n                <div><i class=\"fa fa-user-circle-o px-1 text-secondary\"></i> <a class=\"text-info\" [routerLink]=\"(ratingAndReview?.reviewerUser) ? ['/profile', ratingAndReview?.reviewerUser?.id , ratingAndReview?.reviewerUser?.fullName] : ['']\" role=\"button\">{{ratingAndReview?.reviewerUser?.fullName}}</a></div>\n                <div>\n                    <span>{{ratingAndReview?.comment}}</span>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n            <div class=\"d-flex flex-column\">\n                <div><a class=\"text-info\" [routerLink]=\"(ratingAndReview?.reviewerUser) ? ['/profile', ratingAndReview?.reviewerUser?.id , ratingAndReview?.reviewerUser?.fullName] : ['']\" role=\"button\">{{ratingAndReview?.reviewerUser?.fullName}}</a></div>\n                <div>\n                    <span>{{ratingAndReview?.comment}}</span>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { RateType, RatingAndReview, RatingEmployerByWorker, RatingTaskOrder, RatingWorkerByEmployer } from 'src/app/_models/Users/rating-and-review';\n\n@Component({\n  selector: 'app-rating-row-details',\n  templateUrl: './rating-row-details.component.html',\n  styleUrls: ['./rating-row-details.component.css']\n})\nexport class RatingRowDetailsComponent implements OnInit {\n  @Input('RatingAndReview') ratingAndReview: RatingAndReview;\n  RateTypeEnum = RateType;\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  get getServiceOrderReviewDetails(): RatingTaskOrder {\n    return JSON.parse(this.ratingAndReview?.details) as RatingTaskOrder;\n  }\n\n  get getRatingWorkerByEmployerDetails(): RatingWorkerByEmployer {\n    return JSON.parse(this.ratingAndReview?.details) as RatingWorkerByEmployer;\n  }\n\n  get getRatingEmployerByWorkerDetails(): RatingEmployerByWorker {\n    return JSON.parse(this.ratingAndReview?.details) as RatingEmployerByWorker;\n  }\n\n}\n","<div *ngIf=\"createdDate\" class=\"profile-since\">\n    {{'users.Profile.MemberSince' | translate }} {{createdDate | timeAgo}}\n</div>\n<div *ngIf=\"lastActive\" class=\"profile-since\">\n    {{'users.Profile.LastActive' | translate }}: {{lastActive | timeAgo}}\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-since-profile',\n  templateUrl: './since-profile.component.html',\n  styleUrls: []\n})\nexport class SinceProfileComponent implements OnInit {\n  @Input('MemberSince') createdDate: any;\n  @Input('LastActivity') lastActive: any;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-activity',\n  templateUrl: './user-activity.component.html',\n  styleUrls: ['./user-activity.component.css']\n})\nexport class UserActivityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"user-activity\">\n    <div class=\"activity-icon bg-info\"><i class=\"fa fa-asterisk align-self-center\"></i></div>\n    <div class=\"activity-details align-middle\">\n        <span>قام المستخدم بالانضمام للمنصة لأول مره</span>\n        <abbr class=\"activity-time\" title=\"2020/08/08 12:08\">منذ 10 دقائق</abbr>\n    </div>\n</div>\n<div class=\"user-activity\">\n    <div class=\"activity-icon bg-info\"><i class=\"fa fa-asterisk align-self-center\"></i></div>\n    <div class=\"activity-details align-middle\">\n        <span>قام المستخدم باكمال الملف الشخصي الخاص به بنسبة 80%</span>\n        <abbr class=\"activity-time\" title=\"2020/08/08 12:08\">منذ 10 دقائق</abbr>\n    </div>\n</div>\n<div class=\"user-activity\">\n    <div class=\"activity-icon bg-success\"><i class=\"fa fa-check-circle-o align-self-center\"></i></div>\n    <div class=\"activity-details\">\n        <span>تم تفعيل البريد الالكتروني الخاص بالمستخدم</span>\n        <abbr class=\"activity-time\" title=\"2020/08/08 12:08\">منذ 10 دقائق</abbr>\n    </div>\n</div>","<app-breadcrumbs title=\"{{taskerAccount.fullName || taskerAccount.enFullName }}\" currentPageTitle=\"{{taskerAccount.fullName || taskerAccount.enFullName }}\"></app-breadcrumbs>\n\n<article id=\"profile\" class=\"content\">\n    <div class=\"container\">\n        <!-- start Normal Edt BootStrap Form -->\n\n        <form [formGroup]=\"edtTaskerAccountForm\" (ngSubmit)=\"editTaskerAccount()\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-5\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Profile.GeneralInfo' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.FirstName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                            <input class=\"form-control\"  maxlength=\"70\" formControlName=\"arFirstName\" placeholder= \"{{'users.Students.FirstName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arFirstName.errors && updateValidator.arFirstName.touched}\"  >\n                            <div *ngIf=\"updateValidator.arFirstName.touched && updateValidator.arFirstName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.arFirstName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.LastName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                            <input class=\"form-control\"  maxlength=\"70\" formControlName=\"arLastName\" placeholder= \"{{'users.Students.LastName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arLastName.errors && updateValidator.arLastName.touched}\"  >\n                            <div *ngIf=\"updateValidator.arLastName.touched && updateValidator.arLastName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.arLastName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\">{{'users.Students.EnFullName' | translate }}<strong class=\"text-danger\">*</strong></span>\n                            </div>\n                            <input class=\"form-control\"  maxlength=\"40\" formControlName=\"enFullName\" placeholder= \"{{'users.Students.EnFullName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.enFullName.errors && updateValidator.enFullName.touched}\"  >\n                            <div *ngIf=\"updateValidator.enFullName.touched && updateValidator.enFullName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.enFullName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-building\"></i>&nbsp;{{'users.Students.City' | translate }}<strong class=\"text-danger\">*</strong></span>\n                                </div>\n                                <select formControlName=\"cityId\" class=\"form-control\" [ngClass]=\"{'is-invalid' : updateValidator.cityId.errors && updateValidator.cityId.touched }\">\n                                    <option value=\"0\" disabled>{{'Common.Form.ChooseFromMenu' | translate }}</option>\n                                    <option *ngFor=\"let city of citiesOptions\" value=\"{{city.id}}\">{{city.name}}</option>\n                                </select>\n                                <div *ngIf=\"updateValidator.cityId.touched && updateValidator.cityId.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.cityId.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend \">\n                                    <span class=\"input-group-text px-1\">{{'users.Students.Gender' | translate }}<strong class=\"text-danger\">*</strong></span>\n                                </div>\n                                <label class=\"form-control px-1 text-center\">\n                                  <input id=\"male\" type=\"radio\" name=\"gender\" [value]=\"1\" formControlName=\"gender\">\n                                  <i class=\"fa fa-lg fa-male text-sky px-1\"></i>{{'Signup.IAmMan' | translate }}\n                                </label>\n                                <label class=\"form-control px-1 text-center\">\n                                    <input id=\"female\" type=\"radio\" name=\"gender\" [value]=\"2\" formControlName=\"gender\">\n                                    <i class=\"fa fa-lg fa-female text-pink px-1\"></i>{{'Signup.IAmWoman' | translate }}\n                                </label>\n                                <div *ngIf=\"updateValidator.gender.touched && updateValidator.gender.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.gender.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                   <span class=\"input-group-text\">{{'users.Students.BirthDay' | translate }}</span>\n                                </div>\n                                <input ngbDatepicker #birthDayDatepicker=\"ngbDatepicker\" [maxDate]=\"maxDate\" [minDate]=\"{year: 1950, month: 1, day: 1}\" [firstDayOfWeek]=\"0\" class=\"form-control\"  formControlName=\"birthDay\" readonly (click)=\"birthDayDatepicker?.toggle()\">\n                                <div class=\"input-group-append\">\n                                    <button class=\"btn btn-outline-secondary calendar\" (click)=\"birthDayDatepicker?.toggle()\" type=\"button\"><i class=\"fa fa-calendar\"></i></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.About' | translate }}</label>\n                        <textarea class=\"form-control\" rows=\"3\"  maxlength=\"500\" formControlName=\"about\" placeholder= \"{{'Common.Form.MaxThousand' | translate:{'value': 'users.Students.About' | translate} }}\"></textarea>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.Languages' | translate }}</label>\n                        <ng-select [loading]=\"isLoadingOptions\" bindValue=\"id\" bindLabel=\"name\" [multiple]=\"true\" [items]=\"languagesOptions\"\n                                formControlName=\"languages\" [clearable]=\"false\" [selectableGroup]=\"true\" [closeOnSelect]=\"false\"\n                                placeholder=\"{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.Languages' | translate} }}\" class=\"custom\">\n                            <ng-template ng-loadingspinner-tmp><div class=\"lds-ellipsis mx-2\"><div></div><div></div><div></div><div></div></div></ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [checked]=\"item$.selected\"/>&nbsp;{{item.name}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'SocialMedias.Title' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-instagram\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"instagram\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Instagram' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.instagram.errors && updateValidator.instagram.touched}\"  >\n                                <div *ngIf=\"updateValidator.instagram.touched && updateValidator.instagram.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.instagram.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-linkedin-square\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"linkedin\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Linkedin' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.linkedin.errors && updateValidator.linkedin.touched}\"  >\n                                <div *ngIf=\"updateValidator.linkedin.touched && updateValidator.linkedin.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.linkedin.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-twitter\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"twitter\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Twitter' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.twitter.errors && updateValidator.twitter.touched}\"  >\n                                <div *ngIf=\"updateValidator.twitter.touched && updateValidator.twitter.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.twitter.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-facebook-square\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"facebook\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Facebook' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.facebook.errors && updateValidator.facebook.touched}\"  >\n                                <div *ngIf=\"updateValidator.facebook.touched && updateValidator.facebook.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.facebook.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer text-right\">\n                    <button class=\"btn btn-success\"  type=\"submit\" [disabled]=\"isSubmitting\">\n                        <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n                        <i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.UpdateData' | translate}}&nbsp;\n                    </button>\n                    <!-- [disabled]=\"isSubmitting || !edtTaskerAccountForm.valid\" -->\n                </div>\n            </div>\n        </form><!-- End Normal Edt BootStrap Form -->\n    </div>\n</article>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LocationsService } from 'src/app/_services/settings/locations.service';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\nimport { LanguagesService } from 'src/app/_services/settings/languages.service';\nimport { zip } from 'rxjs';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { HijriCalenderService } from 'src/app/_helpers/date-and-time/hijri-calender.service';\nimport { TaskerAccountForEdit } from '../../models/tasker-account';\nimport { TaskerAccountUpdate } from 'src/app/_models/Users/tasker-account';\nimport { TaskerAccountsService } from 'src/app/_services/users/tasker-accounts.service';\n\n@Component({\n  selector: 'app-modify-tasker-profile',\n  templateUrl: './modify-tasker-profile.component.html',\n  styleUrls: []\n})\nexport class ModifyTaskerProfileComponent implements OnInit {\n  isLoadingOptions = true;\n  citiesOptions: KeyValuePairResource[] = [];\n  languagesOptions: KeyValuePairResource[] = [];\n  taskerAccount: TaskerAccountForEdit;\n  maxDate: any;\n  public GenderEnum = Gender;\n  edtTaskerAccountForm: FormGroup;\n  isSubmitting: boolean = false;\n  citiesList: KeyValuePairResource[] = [];\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private locationsService: LocationsService,\n    private languagesService: LanguagesService,\n    private router: Router,\n    private taskerAccountsService: TaskerAccountsService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.taskerAccount = data['user'];\n    });\n    this.initEdtForm();\n    this.getAllDefualtsValues();\n    this.maxDate = HijriCalenderService.getToday(-17);\n  }\n\n  getAllDefualtsValues() {\n    zip(\n      this.locationsService.getCitiesList(),\n      this.languagesService.getLanguagesAsList(),\n    ).subscribe(\n      ([locations, languages]) => {\n        this.citiesOptions = locations;\n        this.languagesOptions = languages;\n      },\n      error => { this.alertify.error(error); },\n      () => {\n        this.isLoadingOptions = false;\n        this.enableAllControls();\n      }\n    );\n  }\n\n  initEdtForm() {\n    this.edtTaskerAccountForm = this.formBuilder.group({\n      id: [this.taskerAccount.id, Validators.required],\n      arFirstName: [this.taskerAccount.firstName ?? '', Validators.required],\n      arLastName: [this.taskerAccount.lastName ?? '', Validators.required],\n      enFullName: [this.taskerAccount.enFullName ?? '', [Validators.required]],\n      gender: [this.taskerAccount.gender ?? '', Validators.required],\n      cityId: [{ value: this.taskerAccount.cityId ?? '', disabled: true }, Validators.required],\n      birthDay: [HijriCalenderService.dateToNgbDateOrNull(this.taskerAccount.birthDay) ?? null],\n      about: [this.taskerAccount.taskerAccountData?.about ?? '', Validators.maxLength(500)], //\n      languages: [{ value: this.taskerAccount.languages ?? [], disabled: true }],\n      instagram: [this.taskerAccount.socialMediaAccounts?.instagram ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      linkedin: [this.taskerAccount.socialMediaAccounts?.linkedin ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      twitter: [this.taskerAccount.socialMediaAccounts?.twitter ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      facebook: [this.taskerAccount.socialMediaAccounts?.facebook ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)]\n    });\n  }\n\n  enableAllControls() {\n    this.edtTaskerAccountForm.controls.cityId.enable();\n    this.edtTaskerAccountForm.controls.languages.enable();\n  }\n\n  get updateValidator() { return this.edtTaskerAccountForm.controls; }\n\n  editTaskerAccount() {\n    this.edtTaskerAccountForm.valid;\n    // console.log(this.edtTaskerAccountForm.value);\n    // console.log(\"Invalid Controls:\", this.findInvalidControls());\n    if (this.edtTaskerAccountForm.valid) {\n      this.isSubmitting = true;\n      this.edtTaskerAccountForm.disable();\n      var updatedTaskerAccount = {} as TaskerAccountUpdate;\n      Object.assign(updatedTaskerAccount, this.edtTaskerAccountForm.value);\n      updatedTaskerAccount.birthDay = HijriCalenderService.tryConvertGregorianToDate(this.edtTaskerAccountForm.controls.birthDay.value);\n      this.taskerAccountsService.updateTaskerAccount(this.taskerAccount.id, updatedTaskerAccount).subscribe(\n        returnTaskerAccount => {\n          this.alertify.success(this.appTranslation.get('Common.Messages.UpdatedSuccessfully'));\n          this.router.navigate(['/profile']);\n        },\n        error => { this.alertify.error(error); this.isSubmitting = false; this.edtTaskerAccountForm.enable(); },\n        () => { });\n    } else {\n      this.alertify.warning(this.appTranslation.get('Common.Data.Invalid'));\n      this.edtTaskerAccountForm.markAllAsTouched();\n      this.isSubmitting = false;\n    }\n  }\n\n  // console.log(\"Invalid Controls:\", this.findInvalidControls());\n  public findInvalidControls() {\n    const invalid = [];\n    const controls = this.edtTaskerAccountForm.controls;\n    for (const name in controls) {\n      if (controls[name].invalid) {\n        invalid.push(name);\n      }\n    }\n    return invalid;\n  }\n\n}\n","<!-- ======= Breadcrumbs ======= -->\n<section id=\"breadcrumbs\" class=\"breadcrumbs\">\n  <div class=\"container\">\n      <div class=\"d-flex justify-content-between align-items-center\">\n          <div>\n              <h2>{{'Portfolios.portfolio' | translate }}</h2>\n              <span class=\"sub-title job-title-badge badge badge-info\">{{'Portfolios.New' | translate }}</span>\n          </div>\n          <ol>\n              \n              <li><a [routerLink]=\"['/profile']\">{{'Portfolios.portfolio' | translate }}</a></li>\n          </ol>\n      </div>\n  </div>\n</section><!-- End Breadcrumbs -->\n\n<article id=\"profile\" class=\"content\">\n    <div class=\"container\">\n      <!-- start Normal Add BootStrap CardForm Form -->\n      <form id =\"formAddPortfolio\" [formGroup]=\"addPortfolioForm\" (ngSubmit)=\"addNewPortfolio()\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h5><span class=\"fa fa-plus\"></span>&nbsp;{{'Portfolios.New' | translate }}</h5>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"form-group\">\n              <label class=\"font-weight-bold\" >{{'Portfolios.Title' | translate }}<strong class=\"text-danger\">*</strong></label>\n              <input class= \"form-control default\"  maxlength=\"150\" formControlName=\"title\" [ngClass]=\"{'is-invalid' : addValidator.title.errors && addValidator.title.touched}\"  >\n              <div *ngIf=\"addValidator.title.touched && addValidator.title.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"addValidator.title.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"font-weight-bold\" >{{'Portfolios.Description' | translate }}</label>\n              <textarea class= \"form-control default\" rows=\"6\"  maxlength=\"300\" formControlName=\"description\" placeholder= \"{{'Common.Form.MaxThreeHundred' | translate:{'value': 'Portfolios.DescriptionPlaceHolder' | translate} }}\" [ngClass]=\"{'is-invalid' : addValidator.description.errors && addValidator.description.touched}\"  ></textarea>\n              <div *ngIf=\"addValidator.description.touched && addValidator.description.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"addValidator.description.errors.minlength || addValidator.description.errors.maxlength\" > {{'Common.Form.MaxThreeHundred' | translate:{'value': 'Portfolios.DescriptionPlaceHolder' | translate} }}</div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n                      <label class=\"hidden-xs\">{{'Common.Upload.SelectFiles' | translate:{'value': 'Common.Upload.Images' | translate} }}</label>\n                      <div ng2FileDrop class=\"drop-container dropzone\" [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" (fileOver)=\"fileOverBase($event)\" [uploader]=\"uploader\" > <!-- [class.hovering]=\"isHovering\" -->\n                          <p class=\"m-0\">\n                            {{'Common.Upload.DropZone' | translate:{'value': 'Common.Upload.Images' | translate} }}\n                            <label class=\"upload-button\">\n                              <input type=\"file\" #uploadMult ng2FileSelect [uploader]=\"uploader\" multiple>{{'Common.Upload.SelectManually' | translate }}\n                            </label>\n                          </p>\n                          <p class=\"m-0\">\n                            {{'Common.Upload.Allowed' | translate }} <span class=\"badge badge-info mr-1\">{{'Common.Upload.Only' | translate:{'value': 'Common.Upload.Images' | translate} }}</span> |\n                            {{'Common.Upload.MaxSize' | translate }} <span class=\"badge badge-dark\"> {{'Common.Upload.SizeMega' | translate:{'value':'1'} }} </span>\n                          </p>\n                          <div *ngIf=\"uploader?.queue?.length\">\n                            <p class=\"m-0\">{{'Common.Upload.SelectedFiles' | translate:{'value': 'Common.Upload.Images' | translate} }} {{ uploader?.queue?.length }} <i class=\"fa fa-paperclip\"></i></p>\n                          </div>\n                      </div>\n                      <div *ngIf=\"uploader?.queue?.length\">\n                        <div class=\"table-responsive\">\n                          <table class=\"table table-sm table-bordered table-hover table-light\">\n                            <thead class=\"table-info\">\n                              <tr>\n                                <th class=\"text-center\" width=\"50%\">{{'Common.Upload.FileName' | translate }}</th>\n                                <th class=\"text-center\">{{'Common.Upload.TheSize' | translate }}</th>\n                                <th colspan=\"1\"></th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let item of uploader.queue\">\n                                <td class=\"text-left\" style=\"overflow: hidden;\"><img thumbnail [image]=\"item?._file\">{{ item?.file?.name | slice : 0 : 25 }}</td>\n                                <td class=\"text-center\" *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} mb</td>\n                                <!-- <td class=\"text-center\"><button type=\"button\" class=\"btn btn-success btn-sm pt-0\" (click)=\"item.upload()\" [disabled]=\"item.isReady || item.isUploading || item.isSuccess\"><i class=\"fa fa-upload\"></i></button></td>\n                                <td class=\"text-center\"><button type=\"button\" class=\"btn btn-warning btn-sm pt-0\" (click)=\"item.cancel()\" [disabled]=\"!item.isUploading\"><i class=\"fa fa-ban\"></i></button></td> -->\n                                <td class=\"text-center\"><button type=\"button\" class=\"btn btn-danger btn-sm pt-0\" (click)=\"item.remove()\"><i class=\"fa fa-trash-o\"></i></button></td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                      \n                  <div *ngIf=\"uploader?.queue?.length\" class=\"col-12\" style=\"margin-bottom: 40px\">\n                      <div class=\"progress\">\n                          <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                      </div>\n                      <!-- <div class=\"text-center p-3\">\n                          <button type=\"button\" class=\"btn btn-outline-success btn-sm m-1\" (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                              <i class=\"fa fa-upload\"></i> {{'Common.Upload.UploadAll' | translate }}\n                          </button>\n                          <button type=\"button\" class=\"btn btn-outline-warning btn-sm m-1\" (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                              <i class=\"fa fa-ban\"></i> {{'Common.Upload.CancelAll' | translate }}\n                          </button>\n                          <button type=\"button\" class=\"btn btn-outline-danger btn-sm m-1\" (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                              <i class=\"fa fa-trash-o\"></i> {{'Common.Upload.DeleteAll' | translate }}\n                          </button>\n                      </div>     -->\n                  </div>\n                  \n          </div>\n          <div class=\"card-footer text-right\">\n            <button id=\"btnAddPortfolio\" class=\"btn btn-primary\" [disabled]=\"isSubmitting\" type=\"submit\">\n              <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n              <i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.Save' | translate}}&nbsp;\n            </button>\n          </div>\n        </div>\n      </form>\n      <!-- End Normal Add BootStrap CardForm Form -->\n    </div>\n</article>\n\n\n\n\n\n","import { Component, OnInit, Output, EventEmitter, ViewChild, ElementRef, Input } from '@angular/core';\nimport { Utilities } from 'src/app/_services/utilities.service';\nimport { UploadStatus, UploadHandlerResult } from 'src/app/_helpers/uploader/uploadHandlerResult';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { Portfolio } from '../../../models/portfolio';\nimport { PortfoliosService } from 'src/app/_services/users/portfolios.service';\nimport { Photo } from 'src/app/_models/Users/Photo';\nimport { FileUploader, FileItem } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/_models/Users/User';\nimport { KeyValuePairResource, KeyValueResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { Key } from 'protractor';\nimport { FileUploaderOneRequest } from 'src/app/_helpers/uploader/FileUploader';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-portfolio',\n  templateUrl: './create-portfolio.component.html',\n  styleUrls: ['./create-portfolio.component.css']\n})\nexport class CreatePortfolioComponent implements OnInit {\n  @Output() addSuccessfully: EventEmitter<Portfolio> = new EventEmitter<Portfolio>();\n  addPortfolioForm: FormGroup;\n  isSubmitting: boolean = false;\n\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  uploader: FileUploaderOneRequest;\n  hasBaseDropZoneOver = false;\n  currentMain: Photo;\n  user: User;\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private portfoliosService: PortfoliosService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n    this.initAddForm();\n  }\n\n\n  initAddForm() {\n    this.addPortfolioForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.maxLength(300)],\n    });\n  }\n\n  get addValidator() { return this.addPortfolioForm.controls; }\n\n  addNewPortfolio() {\n    if (this.addPortfolioForm.valid && this.uploader.queue.length > 0) {\n      this.isSubmitting = true;\n      this.addPortfolioForm.disable();\n      this.uploader.uploadAllFiles();\n    } else {\n      if (this.uploader.queue.length <= 0)\n        this.alertify.error('اختر صورة واحده على الأقل');\n      else\n        this.alertify.error(this.appTranslation.get('Common.Data.Invalid'));\n      this.addPortfolioForm.enable();\n      this.addPortfolioForm.markAllAsTouched();\n      this.isSubmitting = false;\n    }\n  }\n\n  // تجهيز رافع الملفات\n  initializeUploader() {\n    const maxFileSize = 1 * 1024 * 1024;\n    const queueLimit = 5;\n\n    this.uploader = new FileUploaderOneRequest({\n      url: `${this.portfoliosService.portfoliosUrl}/images`,\n      itemAlias: 'file',\n      authToken: `Bearer ${localStorage.getItem('token')}`,\n      queueLimit: queueLimit,\n      isHTML5: true,\n      allowedFileType: ['image'], //, 'pdf', 'doc', 'docx'\n      // additionalParameter: {  replyId: '0' },\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: maxFileSize,\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onBuildItemForm = (fileItem, form) => {\n      const formData: KeyValueResource[] = [];\n      Utilities.convertModelToKeyValue(this.addPortfolioForm.value, formData);\n      formData.forEach(data => { form.append(data.key, data.value); });\n    };\n\n    this.uploader.onErrorItem = (item, Response, status, headers) => {\n      this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.UnknownError', item._file.name));\n    };\n\n    this.uploader.onProgressItem = (fileItem, progress) => {\n      console.log(`onProgressItem ${fileItem._file.name}`);\n    };\n\n    this.uploader.onProgressAll = (progress) => {\n      console.log('onProgressAll');\n    };\n\n    this.uploader.onSuccessItem = (item, Response, status, headers) => {\n      console.log('onSuccessItem');\n      if (Response) {\n        var returnPortfolio = JSON.parse(Response);\n        if (Response) {\n          if (<UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.success ||\n            <UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.successWithSomeFailure) {\n            this.alertify.success(this.appTranslation.get('Common.Data.SavedSuccessfully'));\n            this.router.navigate(['./profile']);\n            if (<UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.successWithSomeFailure) {\n              this.alertify.info(returnPortfolio.message);\n            }\n          } else if (<UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.failure) {\n            this.alertify.error(returnPortfolio.message);\n          }\n        }\n      }\n    };\n\n    this.uploader.onCompleteAll = () => {\n      console.log('onCompleteAll');\n      this.addPortfolioForm.reset();\n      this.addPortfolioForm.enable();\n      this.isSubmitting = false;\n    };\n\n    this.uploader.onWhenAddingFileFailed = (item, filter) => {\n      debugger;\n      switch (filter.name) {\n        case 'queueLimit':\n          this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.QueueLimit', queueLimit.toString()));\n          break;\n        case 'fileSize':\n          this.alertify.alert(`${this.appTranslation.getWithValue('Common.Upload.FailureFileName', item.name)} ${Utilities.formatBytes(item.size)}، ${this.appTranslation.getWithValue('Common.Upload.FailureFileSize', Utilities.formatBytes(maxFileSize))}`);\n          break;\n        case 'fileType':\n          this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.FailureFileType', item.name));\n          break;\n        default:\n          this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.UnknownError', item.name));\n          break;\n      }\n    };\n\n    this.uploader.onErrorItem = (item, response: string, status, headers) => {\n      this.alertify.alert(response);\n    };\n  }\n\n\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n\n}\n","<app-article-spinner *ngIf=\"!portfolio\"></app-article-spinner>\n\n<!-- ======= Breadcrumbs ======= -->\n<section *ngIf=\"portfolio\" id=\"breadcrumbs\" class=\"breadcrumbs\">\n    <div class=\"container\">\n        <div class=\"d-flex justify-content-between align-items-center\">\n            <div>\n                <h2><span class=\"mr-1 job-title-badge badge badge-info\">{{'Portfolios.Work'| translate}}</span>{{portfolio?.title}}</h2>\n                <span class=\"sub-title\"><i class=\"fa fa-clock-o\"></i>&nbsp;{{portfolio?.createdDate | timeAgo}}</span>\n            </div>\n            <ol>\n                \n                <li><a [routerLink]=\"['/profile']\">{{'Portfolios.portfolio' | translate }}</a></li>\n            </ol>\n        </div>\n    </div>\n</section><!-- End Breadcrumbs -->\n\n<ng-container *ngIf=\"portfolio\">\n   <!-- ======= Job details Section ======= -->\n   <section id=\"job-details\" class=\"jobs text-left\"> \n        <div class=\"container my-3\">\n            <div>\n                <div class=\"col-md-12 p-0 h-100\">\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            <a data-toggle=\"collapse\" href=\"#portfolio-images\" aria-expanded=\"true\" \n                            id=\"heading-example\" class=\"d-flex align-self-stretch p-3\">\n                            <h4 class=\"flex-grow-1 m-0 text-left\">{{'Common.Upload.Images' | translate }}</h4>\n                            <i class=\"fa fa-chevron-down m-0\" style=\"align-self: center !important;\"></i>\n                            </a>\n                        </div>\n                        <div id=\"portfolio-images\" class=\"collapse show\">\n                            <div class=\"card-block\">\n                                <div class=\"mx-2 img-wrapper\" style=\"display: inline-block;\" *ngFor=\"let photo of portfolio?.photos; let i=index\">\n                                  <img [src]=\"getImageUrl(photo?.publicId ,200)\" class=\"img-thumbnail\">\n                                  <div class=\"text-center mb-2\" >\n                                    <button type=\"button\" (click)=\"setMainPhoto(photo)\" [disabled]=\"photo.isMain\" [ngClass]=\"photo.isMain ? 'btn btn-sm btn-info btn-down' : 'btn btn-sm btn-outline-info btn-down' \">\n                                      <strong>{{'Common.CRUD.IsMain' | translate }}</strong>\n                                    </button>\n                                    <button type=\"button\" [disabled]=\"photo.isMain\" (click)=\"delete(photo.id)\" class=\"btn btn-sm btn-outline-danger btn-down\"><i class=\"fa fa-trash-o\"></i></button>\n                                  </div>\n                                </div>\n                                <div class=\"form-group\">\n                                        <label class=\"hidden-xs\">{{'Common.Upload.SelectFiles' | translate:{'value': 'Common.Upload.Images' | translate} }}</label>\n                                        <div ng2FileDrop class=\"drop-container dropzone\" [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" (fileOver)=\"fileOverBase($event)\" [uploader]=\"uploader\" >\n                                            <p class=\"m-0\">\n                                            {{'Common.Upload.DropZone' | translate:{'value': 'Common.Upload.Images' | translate} }}\n                                            <label class=\"upload-button\">\n                                                <input type=\"file\" #uploadMult ng2FileSelect [uploader]=\"uploader\" multiple>{{'Common.Upload.SelectManually' | translate }}\n                                            </label>\n                                            </p>\n                                            <p class=\"m-0\">\n                                            {{'Common.Upload.Allowed' | translate }} <span class=\"badge badge-info mr-1\">{{'Common.Upload.Only' | translate:{'value': 'Common.Upload.Images' | translate} }}</span> |\n                                            {{'Common.Upload.MaxSize' | translate }} <span class=\"badge badge-dark\"> {{'Common.Upload.SizeMega' | translate:{'value':'1'} }} </span>\n                                            </p>\n                                            <div *ngIf=\"uploader?.queue?.length\">\n                                            <p class=\"m-0\">{{'Common.Upload.SelectedFiles' | translate:{'value': 'Common.Upload.Images' | translate} }} {{ uploader?.queue?.length }} <i class=\"fa fa-paperclip\"></i></p>\n                                            </div>\n                                        </div>\n                                        <div *ngIf=\"uploader?.queue?.length\">\n                                            <div class=\"table-responsive\">\n                                                <table class=\"table table-sm table-bordered table-hover table-light\">\n                                                    <thead class=\"table-info\">\n                                                        <tr>\n                                                        <th class=\"text-center\" width=\"50%\">{{'Common.Upload.FileName' | translate }}</th>\n                                                        <th class=\"text-center\">{{'Common.Upload.TheSize' | translate }}</th>\n                                                        <th colspan=\"3\"></th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        <tr *ngFor=\"let item of uploader.queue\">\n                                                        <td class=\"text-left\" style=\"overflow: hidden;\"><img thumbnail [image]=\"item?._file\">{{ item?.file?.name | slice : 0 : 25 }}</td>\n                                                        <td class=\"text-center\" *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} mb</td>\n                                                        <td class=\"text-center\"><button type=\"button\" class=\"btn btn-success btn-sm pt-0\" (click)=\"item.upload()\" [disabled]=\"item.isReady || item.isUploading || item.isSuccess\"><i class=\"fa fa-upload\"></i></button></td>\n                                                        <td class=\"text-center\"><button type=\"button\" class=\"btn btn-warning btn-sm pt-0\" (click)=\"item.cancel()\" [disabled]=\"!item.isUploading\"><i class=\"fa fa-ban\"></i></button></td>\n                                                        <td class=\"text-center\"><button type=\"button\" class=\"btn btn-danger btn-sm pt-0\" (click)=\"item.remove()\"><i class=\"fa fa-trash-o\"></i></button></td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                            <div>\n                                                <div class=\"progress\">\n                                                    <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                                                </div>\n                                                <div class=\"text-center p-3\">\n                                                    <button type=\"button\" class=\"btn btn-outline-success btn-sm m-1\" (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                                                        <i class=\"fa fa-upload\"></i> تحميل الكل\n                                                    </button>\n                                                    <button type=\"button\" class=\"btn btn-outline-warning btn-sm m-1\" (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                                                        <i class=\"fa fa-ban\"></i> إلغاء الكل\n                                                    </button>\n                                                    <button type=\"button\" class=\"btn btn-outline-danger btn-sm m-1\" (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                                                        <i class=\"fa fa-trash-o\"></i> حذف الكل\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- start Normal Add BootStrap CardForm Form -->\n                    <div class=\"card\">\n                        <form id =\"formAddPortfolio\" [formGroup]=\"editPortfolioForm\" (ngSubmit)=\"updatePortfolio()\">\n                            <div class=\"card-header\">\n                                <a data-toggle=\"collapse\" href=\"#portfolio-description\" aria-expanded=\"true\" \n                                id=\"heading-example\" class=\"d-flex align-self-stretch p-3\">\n                                <h4 class=\"flex-grow-1 m-0 text-left\">{{'Portfolios.DescriptionPlaceHolder' | translate }}</h4>\n                                <i class=\"fa fa-chevron-down m-0\" style=\"align-self: center !important;\"></i>\n                                </a>\n                            </div>\n                            <div class=\"card-body\">\n                                <div class=\"form-group\">\n                                    <label class=\"font-weight-bold\" >{{'Portfolios.Title' | translate }}<strong class=\"text-danger\">*</strong></label>\n                                    <input class= \"form-control default\"  maxlength=\"150\" formControlName=\"title\" [ngClass]=\"{'is-invalid' : editValidator.title.errors && editValidator.title.touched}\"  >\n                                    <div *ngIf=\"editValidator.title.touched && editValidator.title.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"editValidator.title.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"font-weight-bold\" >{{'Portfolios.Description' | translate }}</label>\n                                    <textarea class= \"form-control default\" rows=\"6\"  maxlength=\"300\" formControlName=\"description\" placeholder= \"{{'Common.Form.MaxThreeHundred' | translate:{'value': 'Portfolios.DescriptionPlaceHolder' | translate} }}\" [ngClass]=\"{'is-invalid' : editValidator.description.errors && editValidator.description.touched}\"  ></textarea>\n                                    <div *ngIf=\"editValidator.description.touched && editValidator.description.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"editValidator.description.errors.minlength || editValidator.description.errors.maxlength\" > {{'Common.Form.MaxThreeHundred' | translate:{'value': 'Portfolios.DescriptionPlaceHolder' | translate} }}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"card-footer text-right\">\n                                <button id=\"btnAddPortfolio\" class=\"btn btn-primary\" [disabled]=\"isSubmitting\" type=\"submit\">\n                                <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n                                <i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.Save' | translate}}&nbsp;\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                    <!-- End Normal Add BootStrap CardForm Form -->\n                    <div class=\"d-none d-sm-block\" style=\"height: 200px;\">\n                    </div>\n\n                </div>\n            </div>\n        </div>\n   </section><!-- End Job details Section -->   \n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { Portfolio, PortfolioPhoto } from '../../../models/portfolio';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AppTitleService } from 'src/app/_helpers/app-title.service';\nimport { PortfoliosService } from 'src/app/_services/users/portfolios.service';\nimport { FileUploaderOneRequest } from 'src/app/_helpers/uploader/FileUploader';\nimport { UploadStatus } from 'src/app/_helpers/uploader/uploadHandlerResult';\nimport { Utilities } from 'src/app/_services/utilities.service';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-modify-portfolio',\n  templateUrl: './modify-portfolio.component.html',\n  styleUrls: ['./modify-portfolio.component.css']\n})\nexport class ModifyPortfolioComponent implements OnInit {\n  portfolioId: number = 0;\n  userId: any;\n  portfolio: Portfolio;\n  currentMainPhoto: PortfolioPhoto;\n  uploader: FileUploaderOneRequest;\n  hasBaseDropZoneOver = false;\n  editPortfolioForm: FormGroup;\n  isSubmitting: boolean = false;\n\n  constructor(private router: Router, private route: ActivatedRoute, private alertify: AlertifyService, private formBuilder: FormBuilder,\n    private appTranslation: AppTranslationService, private appTitle: AppTitleService, private portfoliosService: PortfoliosService) { }\n\n  ngOnInit(): void {\n    this.initeditForm();\n    this.route.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('portfolioId') || +paramMap.get('portfolioId') == 0) {\n        this.alertify.error(this.appTranslation.get('Common.Messages.ErrorOnAction'));\n        this.router.navigate(['./profile/', paramMap.get('userId') ?? '']);\n        return;\n      }\n      this.userId = paramMap.get('userId') ?? null;\n      this.portfolioId = +paramMap.get('portfolioId');\n      this.portfoliosService.getPortfolio(this.portfolioId).subscribe(\n        (result: Portfolio) => {\n          this.portfolio = result;\n          if (result) { this.editPortfolioForm.patchValue(result); }\n        },\n        (error: any) => {\n          this.alertify.error(this.appTranslation.get('Common.Messages.ErrorOnAction'));\n          this.router.navigate(['./profile/', paramMap.get('userId') ?? '']);\n        }\n      );\n      console.log(this.portfolioId);\n      this.initializeUploader();\n\n      // تم اضافة ال setTimeout لحل مشكلة ال Expression has changed after it was checked.\n      // setTimeout(() => {\n      //   this.appTitle.changeNavgationTitle(`تذكرة رقم #${this.ticket?.id}`, ``);\n      //   this.appTitle.changeTabTitle(`تذكرة رقم #${this.ticket?.id}`);\n      // }, 0);\n    });\n  }\n\n  getImageUrl(imageName: string, size: number): string {\n    return `${this.portfoliosService.portfoliosUrl}/images/${size ?? 200}/${imageName}`;\n  }\n\n  get currentUrl(): string {\n    return window.location.href;\n  }\n\n  initeditForm() {\n    this.editPortfolioForm = this.formBuilder.group({\n      id: [null, Validators.required],\n      title: ['', Validators.required],\n      description: ['', Validators.maxLength(300)],\n    });\n  }\n\n  get editValidator() { return this.editPortfolioForm.controls; }\n\n  updatePortfolio() {\n    this.editPortfolioForm.markAllAsTouched();\n    if (this.editPortfolioForm.valid) {\n      this.editPortfolioForm.disable();\n      this.isSubmitting = true;\n      this.portfoliosService.updatePortfolio(this.editPortfolioForm.value).subscribe(\n        returnPortfolio => {\n          this.alertify.success(this.appTranslation.get('Common.Data.SavedSuccessfully'));\n          if (returnPortfolio) {\n            this.portfolio.title = returnPortfolio.title;\n            this.portfolio.description = returnPortfolio.description;\n          }\n        },\n        error => { this.alertify.error(error); },\n        () => { });\n      this.editPortfolioForm.enable();\n      this.isSubmitting = false;\n    }\n  }\n\n  // تجهيز رافع الملفات\n  initializeUploader() {\n    const maxFileSize = 1 * 1024 * 1024;\n    const queueLimit = 5;\n\n    this.uploader = new FileUploaderOneRequest({\n      url: `${this.portfoliosService.portfoliosUrl}/${this.portfolioId}/images`,\n      itemAlias: 'file',\n      authToken: `Bearer ${localStorage.getItem('token')}`,\n      queueLimit: queueLimit,\n      isHTML5: true,\n      allowedFileType: ['image'], //, 'pdf', 'doc', 'docx'\n      additionalParameter: { portfolioId: `${this.portfolioId}` },\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: maxFileSize,\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onErrorItem = (item, Response, status, headers) => {\n      this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.UnknownError', item._file.name));\n    };\n\n    this.uploader.onProgressItem = (fileItem, progress) => {\n      console.log(`onProgressItem ${fileItem._file.name}`);\n    };\n\n    this.uploader.onProgressAll = (progress) => {\n      console.log('onProgressAll');\n    };\n\n    this.uploader.onSuccessItem = (item, Response, status, headers) => {\n      console.log('onSuccessItem');\n      if (Response) {\n        var returnPortfolio = JSON.parse(Response);\n        if (Response) {\n          if (<UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.success ||\n            <UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.successWithSomeFailure) {\n            this.alertify.success(this.appTranslation.get('Common.Data.SavedSuccessfully'));\n            this.portfolio.photos.push(returnPortfolio?.data);\n            if (<UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.successWithSomeFailure) {\n              this.alertify.info(returnPortfolio.message);\n            }\n          } else if (<UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.failure) {\n            this.alertify.error(returnPortfolio.message);\n          }\n        }\n      }\n    };\n\n    this.uploader.onCompleteAll = () => {\n      console.log('onCompleteAll');\n    };\n\n    this.uploader.onWhenAddingFileFailed = (item, filter) => {\n      switch (filter.name) {\n        case 'queueLimit':\n          this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.QueueLimit', queueLimit.toString()));\n          break;\n        case 'fileSize':\n          this.alertify.alert(`${this.appTranslation.getWithValue('Common.Upload.FailureFileName', item.name)} ${Utilities.formatBytes(item.size)}، ${this.appTranslation.getWithValue('Common.Upload.FailureFileSize', Utilities.formatBytes(maxFileSize))}`);\n          break;\n        case 'fileType':\n          this.alertify.alert(`${this.appTranslation.getWithValue('Common.Upload.FailureFileType', item.name)}`);\n          break;\n        default:\n          this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.UnknownError', item.name));\n          break;\n      }\n    };\n\n    this.uploader.onErrorItem = (item, response: string, status, headers) => {\n      this.alertify.alert(response);\n    };\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  setMainPhoto(photo: PortfolioPhoto) {\n    this.portfoliosService.setMainPhoto(this.portfolioId, photo.id).subscribe(\n      () => {\n        this.currentMainPhoto = this.portfolio.photos.filter(p => p.isMain === true)[0];\n        this.currentMainPhoto.isMain = false;\n        photo.isMain = true;\n      },\n      () => { this.alertify.error('يوجد مشكلة في الصورة الأساسية'); }\n    );\n  }\n\n  delete(id: number) {\n    this.alertify.confirm(\"هل تريد حذف تلك الصورة\", () => {\n      this.portfoliosService.deletePhoto(this.portfolioId, id).subscribe(\n        () => {\n          this.portfolio.photos.splice(this.portfolio.photos.findIndex(p => p.id === id), 1);\n          this.alertify.success(\"تم حذف الصورة بنجاح\");\n        },\n        error => { this.alertify.error(\"حدث خطأ أثناء حذف الصورة\"); }\n      );\n    });\n  }\n\n\n}\n","<app-article-spinner *ngIf=\"!portfolio\"></app-article-spinner>\n\n   <!-- ======= Breadcrumbs ======= -->\n   <section id=\"breadcrumbs\" class=\"breadcrumbs\">\n    <div class=\"container\">\n      <div class=\"d-flex justify-content-between align-items-center\">\n        <div>\n            <h2><span class=\"mr-1 job-title-badge badge badge-info\">{{'Portfolios.Work'| translate}}</span>{{portfolio?.title}}</h2>\n            <span class=\"sub-title\"><i class=\"fa fa-clock-o\"></i>&nbsp;{{portfolio?.createdDate | timeAgo}}</span>\n        </div>\n        <ol>\n          \n          <li><a [routerLink]=\"['/profile/', userId]\">{{'Portfolios.portfolio' | translate }}</a></li>\n        </ol>\n      </div>\n    </div>\n  </section><!-- End Breadcrumbs -->\n\n<ng-container *ngIf=\"portfolio\">\n   <!-- ======= Job details Section ======= -->\n   <section id=\"job-details\" class=\"jobs\"> \n        <div class=\"container my-3\">\n            <div>\n                <div class=\"col-md-8 p-0 px-md-2 float-md-right h-100\">\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            <a data-toggle=\"collapse\" href=\"#portfolio-images\" aria-expanded=\"true\" \n                            id=\"heading-example\" class=\"d-flex align-self-stretch p-3\">\n                            <h4 class=\"flex-grow-1 m-0 text-left\">{{'Common.Upload.Images' | translate }}</h4>\n                            <i class=\"fa fa-chevron-down m-0\" style=\"align-self: center !important;\"></i>\n                            </a>\n                        </div>\n                        <div id=\"portfolio-images\" class=\"collapse show\">\n                            <div class=\"card-block  text-left\" *ngFor=\"let photo of portfolio?.photos; let i=index\">\n                                <img class=\"card-img-top border p-2\" [src]=\"getImageUrl(photo?.publicId ,500)\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            <a data-toggle=\"collapse\" href=\"#portfolio-description\" aria-expanded=\"true\" \n                            id=\"heading-example\" class=\"d-flex align-self-stretch p-3\">\n                            <h4 class=\"flex-grow-1 m-0 text-left\">{{'Portfolios.DescriptionPlaceHolder' | translate }}</h4>\n                            <i class=\"fa fa-chevron-down m-0\" style=\"align-self: center !important;\"></i>\n                            </a>\n                        </div>\n                        <div id=\"portfolio-description\" class=\"collapse show\">\n                            <div class=\"card-block  text-left\">\n                                {{portfolio?.description}}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"d-none d-sm-block\" style=\"height: 200px;\">\n                    </div>\n\n                </div>\n\n                <div class=\"col-md-4 p-0 float-md-left\">\n                    <div class=\"card \">\n                        <div class=\"card-header p-0\">\n                            <a data-toggle=\"collapse\" href=\"#job-test\" aria-expanded=\"true\" \n                            id=\"heading-example\" class=\"d-flex align-self-stretch p-3\">\n                            <h4 class=\"flex-grow-1 m-0 text-left\">{{'Portfolios.Shared' | translate }}</h4>\n                            <i class=\"fa fa-chevron-down m-0\" style=\"align-self: center !important;\"></i>\n                            </a>\n                        </div>\n                        <div id=\"job-test\" class=\"collapse show\">\n                            <div class=\"card-block text-left\">\n                                <div class=\"input-group mb-3\">\n                                    <input type=\"text\" class=\"form-control\" [value]=\"currentUrl\">\n                                </div>\n                                <div class=\"form-group text-center\">\n                                    <a target=\"blank\" href=\"https://www.facebook.com/sharer/sharer.php?u={{currentUrl}}\" class=\"fa fa-facebook social-button social-button-facebook\" title=\"المشاركة على الفيسبوك\"></a>\n                                    <a target=\"blank\" href=\"https://twitter.com/intent/tweet?url={{currentUrl}}\" class=\"fa fa-twitter social-button social-button-twitter\" title=\"المشاركة على تويتر\"></a>\n                                    <a target=\"blank\" href=\"https://www.linkedin.com/sharing/share-offsite/?url={{currentUrl}}\" class=\"fa fa-linkedin social-button social-button-linkedin\" title=\"المشاركة على لينكدين\"></a>\n                                    <a target=\"blank\" href=\"https://wa.me/?text={{currentUrl}}\" class=\"fa fa-whatsapp social-button social-button-whatsapp\" title=\"المشاركة على الواتس اب\"></a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n   </section><!-- End Job details Section -->   \n</ng-container>","import { Component, OnInit, Input } from '@angular/core';\nimport { Portfolio } from '../../../models/portfolio';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AppTitleService } from 'src/app/_helpers/app-title.service';\nimport { PortfoliosService } from 'src/app/_services/users/portfolios.service';\n\n@Component({\n  selector: 'app-portfolio-details',\n  templateUrl: './portfolio-details.component.html',\n  styleUrls: []\n})\nexport class PortfolioDetailsComponent implements OnInit {\n  portfolioId: number = 0;\n  userId: any;\n  portfolio: Portfolio;\n\n  constructor(private router: Router, private route: ActivatedRoute, private alertify: AlertifyService\n    , private appTranslation: AppTranslationService, private appTitle: AppTitleService, private portfoliosService: PortfoliosService) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('portfolioId') || +paramMap.get('portfolioId') == 0) {\n        this.alertify.error(this.appTranslation.get('Common.Messages.ErrorOnAction'));\n        this.router.navigate(['./profile/', paramMap.get('userId') ?? '']);\n        return;\n      }\n      this.userId = paramMap.get('userId') ?? null;\n      this.portfolioId = +paramMap.get('portfolioId');\n      this.portfoliosService.getPortfolio(this.portfolioId).subscribe(\n        (result: Portfolio) => {\n          this.portfolio = result;\n        },\n        (error: any) => {\n          this.alertify.error(this.appTranslation.get('Common.Messages.ErrorOnAction'));\n          this.router.navigate(['./profile/', paramMap.get('userId') ?? '']);\n        }\n      );\n      console.log(this.portfolioId);\n      // تم اضافة ال setTimeout لحل مشكلة ال Expression has changed after it was checked.\n      // setTimeout(() => {\n      //   this.appTitle.changeNavgationTitle(`تذكرة رقم #${this.ticket?.id}`, ``);\n      //   this.appTitle.changeTabTitle(`تذكرة رقم #${this.ticket?.id}`);\n      // }, 0);\n    });\n  }\n\n  getImageUrl(imageName: string, size: number): string {\n    return `${this.portfoliosService.portfoliosUrl}/images/w/${size ?? 200}/${imageName}`;\n  }\n\n  get currentUrl(): string {\n    return window.location.href;\n  }\n\n\n\n}\n","<div *ngIf=\"isCurrentUserProfile\" class=\"row p-1\">\n    <div class=\"container text-right p-0\">\n        <a [routerLink]=\"[ './portfolio/new']\" class=\"btn btn-primary btn-sm edit-profile\">\n            <i class=\"fa fa-plus-circle fa-lg\"></i> {{'Common.CRUD.Add' | translate }}\n        </a>\n    </div>\n</div>\n<div class=\"row no-padding-sm\">\n    <ng-container *ngIf=\"userPortfolios?.length > 0; else nothingTemplate\">\n        <div class=\"col-md-6 col-lg-4 col-12\" *ngFor=\"let portfolio of userPortfolios; let i = index;\">\n            <div class=\"card-deck\">\n                <div class=\"card border-info mb-3 mx-1\">\n                    <img class=\"card-img-top p-2\" [src]=\"getImageUrl(portfolio?.photos[0]?.publicId ,300)\"\n                        alt=\"Card image cap\">\n                    <div class=\"card-body p-1\">\n                        <h5 class=\"card-title text-info\">{{portfolio?.title}}</h5>\n                        <a *ngIf=\"isCurrentUserProfile\" [routerLink]=\"['/profile' , 'portfolio', 'edit', portfolio?.id ]\" class=\"btn btn-outline-success btn-sm pull-right\">{{'Common.CRUD.Update' | translate }}</a>\n                        <a [routerLink]=\"[ '/profile', 'portfolio', portfolio?.id , portfolio?.title ]\" class=\"btn btn-outline-secondary btn-sm pull-right\">{{'Common.Data.View' | translate}}</a>\n                    </div>\n                    <div class=\"card-footer\">\n                        <small class=\"text-muted\">{{portfolio?.createdDate | timeAgo}}</small>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-template #nothingTemplate>\n        <p class=\"form-control-plaintext text-break text-secondary pt-0 text-center\">\n            {{'Common.Messages.NoRecordWasAdded' | translate:{'value': 'Portfolios.Work' | translate} }}</p>\n    </ng-template>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Portfolio } from '../../../models/portfolio';\nimport { PortfoliosService } from 'src/app/_services/users/portfolios.service';\n\n@Component({\n  selector: 'app-portfolios-list',\n  templateUrl: './portfolios-list.component.html',\n  styleUrls: []\n})\nexport class PortfoliosListComponent implements OnInit {\n  @Input('UserPortfolios') userPortfolios: Portfolio[];\n  @Input('IsCurrentUserProfile') isCurrentUserProfile: boolean;\n\n  constructor(private portfoliosService: PortfoliosService) { }\n\n  ngOnInit(): void {\n  }\n\n  getImageUrl(imageName: string, size: number): string {\n    return `${this.portfoliosService.portfoliosUrl}/images/${size ?? 200}/${imageName}`;\n  }\n\n}\n","<app-breadcrumbs title=\"{{'Menu.MyAccount' | translate }}\" currentPageTitle=\"{{userProfile?.fullName}}\"></app-breadcrumbs>\n\n<!-- ======= member profile ======= -->\n<section id=\"profile\" class=\"profile\">\n    <div class=\"container\">\n        <div class=\"row\" id=\"user-profile\">\n            <div class=\"col-lg-3 col-md-4 col-sm-4 p-0\">\n                <div class=\"main-box\">\n                    <h4 class=\"user-name\" [ngClass]=\"getGenderStyle()\">{{userProfile.fullName}}</h4>\n                    <div class=\"profile-status\">\n                        <i class=\"fa fa-check-circle\"></i>&nbsp;{{userProfile?.studentAccountData?.accountStatusName}}\n                    </div>\n\n                    <app-profile-image [UserProfileData]=\"userProfile\"></app-profile-image>\n                    <app-profile-stars [Rating]=\"userProfile?.totalRating\"></app-profile-stars>\n                    <app-since-profile [MemberSince]=\"userProfile?.createdDate\" [LastActivity]=\"userProfile?.lastActive\"></app-since-profile>\n                    <app-jobs-searcher-counters></app-jobs-searcher-counters>\n                    <app-change-user-password *ngIf=\"isCurrentUserProfile\"></app-change-user-password>\n                    <div *ngIf=\"!isCurrentUserProfile\" class=\"profile-message-btn center-block text-center\">\n                        <a class=\"btn btn-success text-white\" (click)=\"showChatBox()\">\n                            <i class=\"fa fa-envelope\"></i> {{'Chatbox.SendMessage' | translate }}\n                        </a>\n                    </div>\n\n                </div>\n            </div>\n\n            <div class=\"col-lg-9 col-md-8 col-sm-8 p-0 px-md-2\">\n                <div class=\"main-box \">\n                    <ul class=\"nav nav-tabs\" id=\"user-tab\" role=\"tablist\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link active\" id=\"about-user-tab\" data-toggle=\"tab\" href=\"#aboutUser\" role=\"tab\" aria-controls=\"about-user-tab\" aria-selected=\"true\">بياناتي</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" id=\"portfolios-tab\" data-toggle=\"tab\" href=\"#portfolios\" role=\"tab\" aria-controls=\"portfolios\" aria-selected=\"false\">معرض أعمالي</a>\n                        </li>\n\n                        <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"ratings-history-tab\" data-toggle=\"tab\" href=\"#ratings-history\" role=\"tab\" aria-controls=\"ratings-history\" aria-selected=\"false\">التقييمات</a>\n                        </li>\n\n                        <li *ngIf=\"!isCurrentUserProfile\" class=\"nav-item\">\n                          <a #chatboxTab class=\"nav-link\" id=\"chatbox-tab\" data-toggle=\"tab\" href=\"#chatbox\" role=\"tab\" aria-controls=\"chatbox\" aria-selected=\"false\">المحادثة</a>\n                        </li>\n                    </ul>\n\n                    <div class=\"tab-content  p-2\" id=\"myTabContent\">\n                        <div class=\"tab-pane fade show active\" id=\"aboutUser\" role=\"tabpanel\" aria-labelledby=\"about-user-tab\">\n                            <div class=\"d-flex justify-content-between align-items-start mb-2\">\n                                <h4 class=\"text-left\"><span class=\"section-header-behind-line behind-line-gray px-2 pb-1\">{{'users.Students.PersonalInfo' | translate }}</span></h4>\n                                <a *ngIf=\"isCurrentUserProfile\" [routerLink]=\"['/profile' , 'tasker', 'edit' ]\" class=\"btn btn-primary btn-sm edit-profile\">\n                                    <i class=\"fa fa-pencil-square fa-lg\"></i> {{'Common.CRUD.Update' | translate }}\n                                </a>\n                            </div>\n                            <app-personal-details [UserProfileData]=\"userProfile\" ></app-personal-details>\n                            <app-member-contact *ngIf=\"userProfile?.displayContactInfo\" [UserProfileData]=\"userProfile\"></app-member-contact>\n                            <app-language-skills [Languages]=\"userProfile?.languages\"></app-language-skills>\n                            <app-user-tasks-list [CurrentUserId]=\"userProfile?.id\" [CityName]=\"userProfile?.cityName\" [UserTasksPrices]=\"userProfile?.favoriteTasks\"></app-user-tasks-list>\n                        </div>\n\n                        <div class=\"tab-pane fade\" id=\"portfolios\" role=\"tabpanel\" aria-labelledby=\"portfolios-tab\">\n                            <app-portfolios-list [IsCurrentUserProfile]=\"isCurrentUserProfile\" [UserPortfolios]=\"userProfile.portfolios\"></app-portfolios-list>\n                        </div>\n\n                        <div class=\"tab-pane fade\" id=\"ratings-history\" role=\"tabpanel\" aria-labelledby=\"ratings-history-tab\">\n                            <app-rating-and-reviews-list [RatingsAndReviews]=\"userProfile.ratingsGot\"></app-rating-and-reviews-list>\n                        </div>\n\n                        <div *ngIf=\"!isCurrentUserProfile\" class=\"tab-pane fade profile-chatbox\" id=\"chatbox\" role=\"tabpanel\" aria-labelledby=\"chatbox-tab\">\n                          <ng-container *ngIf=\"!isCurrentUserCanStartConversationWithThisUser; else conversationBox\">\n                            <div *ngIf=\"conversationNotAllowed\"  class=\"alert alert-danger text-center\" role=\"alert\">{{conversationNotAllowed}}</div>\n                            <div *ngIf=\"!conversationNotAllowed\"  class=\"alert alert-warning text-center\" role=\"alert\"><span class=\"spinner-border spinner-border-sm\" role=\"status\"></span>&nbsp;&nbsp;{{'Common.Data.Loading' | translate}}</div>\n\n                          </ng-container>\n                          <ng-template #conversationBox>\n                            <app-conversation-box [RecipientId]=\"userProfile?.id\" [RecipientGender]=\"userProfile?.gender\"></app-conversation-box>\n                          </ng-template>\n                        </div>\n\n\n                      </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- End member profile -->\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/_services/users/User.service';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\nimport { MessageWithObject } from 'src/app/_models/data/actions-result';\n\n@Component({\n  selector: 'app-tasker-profile',\n  templateUrl: './tasker-profile.component.html',\n  styleUrls: []\n})\nexport class TaskerProfileComponent implements OnInit {\n  @Input() userProfile: UserProfileResult;\n  @ViewChild('chatboxTab') chatboxTab: ElementRef<HTMLElement>;\n  isCurrentUserCanStartConversationWithThisUser: boolean = false;\n  conversationNotAllowed: string = null;\n\n  constructor(private router: Router, private route: ActivatedRoute, private userService: UserService, private appTranslation: AppTranslationService,\n    private alertify: AlertifyService, private authService: AuthService, private messagesService: MessagesService,) { }\n\n  ngOnInit(): void {\n    console.log('Tasker Account');\n    if (!this.userProfile) {\n      this.alertify.warning('يوجد مشكلة في عرض بيانات المستخدم أو لا تملك صلاحية مخوله للوصول الى ملفه');\n      this.router.navigate(['']);\n    } else {\n      this.checkIfCurrentUserCanStartChat();\n    }\n  }\n\n  get isCurrentUserProfile(): boolean {\n    return this.authService.isCurrentUserProfile(this.userProfile.id);\n  }\n\n  checkIfCurrentUserCanStartChat() {\n    if (!this.isCurrentUserProfile) {\n      this.messagesService.checkIfCurrentUserCanStartChatWithTheOtherUser(this.authService.currentUser.id, this.userProfile.id).subscribe(\n        (result: MessageWithObject) => {\n          if (result.data === true)\n            this.isCurrentUserCanStartConversationWithThisUser = true;\n          else\n            this.conversationNotAllowed = result.message;\n        },\n        error => {\n          this.conversationNotAllowed = error;\n          this.isCurrentUserCanStartConversationWithThisUser = false;\n        }\n      );\n    }\n  }\n\n\n  getGenderStyle() {\n    if (<Gender>this.userProfile.gender === <Gender>Gender.male) {\n      return 'text-sky';\n    } else if (<Gender>this.userProfile.gender === <Gender>Gender.female) {\n      return 'text-pink';\n    }\n    else { return '' }\n  }\n\n  showChatBox() {\n    this.chatboxTab.nativeElement.click()\n  }\n\n\n}\n","<!-- start Normal Edt Form Bootstrap NGX Modal Dialog -->\n<div class=\"modal-header\">\n\t<h5 class=\"modal-title\"><span class=\"fa fa-pencil\"></span>&nbsp;{{userTask?.task?.name}}</h5>\n\t<button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"activeModal.close()\">\n\t\t<span aria-hidden=\"true\">&times;</span>\n\t</button>\n</div>\n<div class=\"modal-body\" [formGroup]=\"edtUserTaskForm\">\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold\" >{{'Tasks.Price' | translate }}<strong class=\"text-danger\">*</strong></label>\n\t\t<input type=\"number\" step=\"0.1\" min=\"0.01\" max=\"1000\" class=\"form-control\"  formControlName=\"price\" placeholder= \"0.00 ريال\" [ngClass]=\"{'is-invalid' : updateValidator.price.errors && updateValidator.price.touched}\"  >\n\t\t<div *ngIf=\"updateValidator.price.touched && updateValidator.price.errors\" class=\"invalid-feedback\">\n\t\t\t<div *ngIf=\"updateValidator.price.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n\t\t\t<div *ngIf=\"updateValidator.price.errors.pattern\">{{'Common.Validation.Number' | translate }}</div>\n\t\t</div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend \">\n                <span class=\"input-group-text px-1\">{{'Common.Form.Status' | translate:{'value': 'Tasks.Type' | translate} }}</span>\n            </div>\n            <label class=\"form-control px-1 text-center\">\n                <input id=\"enable\" type=\"radio\" name=\"isEnabled\" [value]=\"true\" formControlName=\"isEnabled\">\n                {{'Common.CRUD.Enabled' | translate }}\n            </label>\n            <label class=\"form-control px-1 text-center\">\n                <input id=\"disable\" type=\"radio\" name=\"isEnabled\" [value]=\"false\" formControlName=\"isEnabled\">\n                {{'Common.CRUD.Disabled' | translate }}\n            </label>\n        </div>\n    </div>\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold\" >{{'Tasks.Description' | translate }}</label>\n\t\t<textarea id=\"txtAddDescription\" name=\"txtAddDescription\" class= \"form-control default\" rows=\"3\"  maxlength=\"250\" formControlName=\"description\" placeholder= \"{{'Common.Form.MaxThreeHundred' | translate:{'value': 'Tasks.Description' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.description.errors && updateValidator.description.touched}\"  ></textarea>\n\t</div>\n</div>\n<div class=\"modal-footer  text-right\">\n\t<button id=\"btnEdtUserTask\" class=\"btn btn-success\" [disabled]=\"isSubmitting\" type=\"button\" (click)=\"editUserTask()\">\n\t\t<i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n\t\t<i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.UpdateData' | translate}}&nbsp;\n\t</button>\n</div>\n<!-- End Normal Edt Form Bootstrap NGX Modal Dialog -->","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { UserTask } from 'src/app/_models/Users/user-tasks';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { UserTasksService } from 'src/app/_services/users/user-tasks.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\n\n@Component({\n  selector: 'app-modify-my-task',\n  templateUrl: './modify-my-task.component.html',\n  styleUrls: []\n})\nexport class ModifyMyTaskComponent implements OnInit {\n  @Output() updatedSuccessfully: EventEmitter<UserTask> = new EventEmitter<UserTask>();\n  edtUserTaskForm: FormGroup;\n  isSubmitting: boolean = false;\n  userTask: UserTask;\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private userTasksService: UserTasksService,\n    public activeModal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.initEdtForm();\n  }\n\n  initEdtForm() {\n    this.edtUserTaskForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      price: [0, [Validators.required, Validators.pattern(RegularExpression.Money)]],\n      description: [''],\n      isEnabled: [this.userTask?.isEnabled ?? false],\n    });\n    if (this.userTask) { this.edtUserTaskForm.patchValue(this.userTask); }\n  }\n\n  get updateValidator() { return this.edtUserTaskForm.controls; }\n\n  editUserTask() {\n    this.edtUserTaskForm.markAllAsTouched();\n    if (this.edtUserTaskForm.valid) {\n      this.edtUserTaskForm.disable();\n      this.isSubmitting = true;\n      Object.assign(this.userTask, this.edtUserTaskForm.value);\n      this.userTasksService.updateUserTask(this.userTask).subscribe(\n        returnUserTask => {\n          this.alertify.success(this.appTranslation.get('Common.Data.SavedSuccessfully'));\n          this.updatedSuccessfully.emit(returnUserTask);\n        },\n        error => {\n          this.alertify.error(error);\n          this.isSubmitting = false;\n          this.edtUserTaskForm.enable();\n        },\n        () => { this.isSubmitting = false; });\n    } else { this.alertify.success(this.appTranslation.get('Common.Data.Invalid')); }\n  }\n\n\n\n}","<!-- start Normal Add Form Bootstrap NGX Modal Dialog -->\n<div class=\"modal-header\">\n\t<h5 class=\"modal-title\"><span class=\"fa fa-plus\"></span>&nbsp;{{'Common.Form.AddFormTitle' | translate:{'value': 'Tasks.Service' | translate} }}</h5>\n\t<button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"activeModal.dismiss()\">\n\t\t<span aria-hidden=\"true\">&times;</span>\n\t</button>\n</div>\n<div class=\"modal-body\" [formGroup]=\"addUserTaskForm\">\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold\" >{{'Tasks.Type' | translate }}<strong class=\"text-danger\">*</strong></label>\n\t\t<select formControlName=\"taskId\" class=\"form-control\" [ngClass]=\"{'is-invalid' : addValidator.taskId.errors && addValidator.taskId.touched }\">\n\t\t\t<option [value]=\"''||0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'Tasks.Type' | translate} }}</option>\n\t\t\t<option *ngFor=\"let task of tasksList\" value=\"{{task.id}}\">{{task.name}}</option>\n\t\t</select>\n\t\t<div *ngIf=\"addValidator.taskId.touched && addValidator.taskId.errors\" class=\"invalid-feedback\">\n\t\t\t<div *ngIf=\"addValidator.taskId.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n\t\t</div>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold\" >{{'Tasks.Price' | translate }}<strong class=\"text-danger\">*</strong></label>\n\t\t<input type=\"number\" step=\"0.01\" min=\"0.01\" max=\"1000\" class=\"form-control\"  formControlName=\"price\" placeholder= \"0.00 ريال\" [ngClass]=\"{'is-invalid' : addValidator.price.errors && addValidator.price.touched}\"  >\n\t\t<div *ngIf=\"addValidator.price.touched && addValidator.price.errors\" class=\"invalid-feedback\">\n\t\t\t<div *ngIf=\"addValidator.price.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n\t\t\t<div *ngIf=\"addValidator.price.errors.pattern\">{{'Common.Validation.Number' | translate }}</div>\n\t\t</div>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label id=\"lblCap_txtAddDescription\" for=\"txtAddDescription\" class=\"font-weight-bold\" >{{'Tasks.Description' | translate }}</label>\n\t\t<textarea id=\"txtAddDescription\" name=\"txtAddDescription\" class= \"form-control default\" rows=\"3\"  maxlength=\"250\" formControlName=\"description\" placeholder= \"{{'Common.Form.MaxThreeHundred' | translate:{'value': 'Tasks.Description' | translate} }}\" [ngClass]=\"{'is-invalid' : addValidator.description.errors && addValidator.description.touched}\"  ></textarea>\n\t</div>\n</div>\n<div class=\"modal-footer  text-right\">\n\t<button id=\"btnAddUserTask\" class=\"btn btn-info\" [disabled]=\"isSubmitting\" type=\"button\" (click)=\"addNewUserTask()\">\n\t\t<i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n\t\t<i *ngIf=\"!isSubmitting\" class=\"fa fa-plus-circle\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.Add' | translate}}&nbsp;\n\t</button>\n</div>\n<!-- End Normal Add Form Bootstrap NGX Modal Dialog -->\n\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { UserTask } from 'src/app/_models/Users/user-tasks';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { UserTasksService } from 'src/app/_services/users/user-tasks.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Task } from 'src/app/_models/settings/task';\nimport { TasksService } from 'src/app/_services/settings/tasks.service';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\n\n@Component({\n  selector: 'app-new-user-task-modal',\n  templateUrl: './new-user-task-modal.component.html',\n  styleUrls: []\n})\nexport class NewUserTaskModalComponent implements OnInit {\n  @Output() addSuccessfully: EventEmitter<UserTask> = new EventEmitter<UserTask>();\n  addUserTaskForm: FormGroup;\n  isSubmitting: boolean = false;\n  tasksList: KeyValuePairResource[] = [];\n  @Input() name;\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private tasksService: TasksService,\n    private userTasksService: UserTasksService,\n    public activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n    this.getAllTasks();\n    this.initAddForm();\n  }\n\n  getAllTasks() {\n    this.tasksService.getTasksAsList().subscribe(\n      (list: KeyValuePairResource[]) => { this.tasksList = list; },\n      error => this.alertify.error(error)\n    );\n  }\n\n  initAddForm() {\n    this.addUserTaskForm = this.formBuilder.group({\n      taskId: [0, Validators.required],\n      price: ['', [Validators.required, Validators.pattern(RegularExpression.Money)]],\n      description: ['']\n    });\n  }\n\n  get addValidator() { return this.addUserTaskForm.controls; }\n\n  addNewUserTask() {\n    this.addUserTaskForm.markAllAsTouched();\n    if (this.addUserTaskForm.valid) {\n      this.addUserTaskForm.disable();\n      this.isSubmitting = true;\n      let newItem: any;\n      newItem = Object.assign({}, this.addUserTaskForm.value);\n      this.userTasksService.addNew(newItem).subscribe(\n        returnUserTask => {\n          this.alertify.success(this.appTranslation.get('Common.Data.SavedSuccessfully'));\n          this.addSuccessfully.emit(returnUserTask);\n        },\n        error => {\n          this.alertify.error(error);\n          this.isSubmitting = false;\n          this.addUserTaskForm.enable();\n        },\n        () => { this.isSubmitting = false; });\n    } else { this.alertify.success(this.appTranslation.get('Common.Data.Invalid')); }\n  }\n}","<div class=\"row my-0\">\n    <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n        <span class=\"section-header-behind-line profile-head-line px-2\">{{'Tasks.UserTasks' | translate }}</span>\n        <button type=\"button\" *ngIf=\"isCurrentUserProfile\" class=\"btn btn-success btn-sm action-btn pull-right\" (click)=\"showUserTaskAddModal()\">\n            <i class=\"fa fa-plus-circle\"></i>&nbsp;{{'Common.CRUD.Add' | translate }}\n        </button>\n    </h4>\n\n    <ng-container *ngIf=\"userTasks?.length > 0; else nothingTemplate\">\n        <ul class=\"list-group list-group-flush w-100 p-0 mt-3\" >\n            <li class=\"list-group-item py-1 mb-1\" *ngFor=\"let userTask of userTasks; let i = index;\">\n                <div class=\"form-group row my-0\" >\n                    <div class=\"col-12 col-lg-9\">\n                        <h5 [ngClass]=\"!userTask.isEnabled ? 'text-secondary': 'text-info'\"><i class=\"fa fa-check-circle-o\"></i>&nbsp;&nbsp;{{userTask.task?.name}}\n                         <span class=\"badge badge-secondary\" *ngIf=\"isCurrentUserProfile\" >{{userTask.price| number:'1.1-2'}}&nbsp;{{'Common.Form.SaudiRiyal' | translate }}</span></h5>\n                        <p [ngClass]=\"{'text-secondary': !userTask.isEnabled }\">{{userTask?.description}}</p>\n                    </div>\n                    <div class=\"col-12 col-lg-3 text-center\">\n                        <button *ngIf=\"!isCurrentUserProfile\" type=\"button\" [disabled]=\"!userTask.isEnabled\" (click)=\"showUserTaskOrderModal(userTask)\" class=\"btn btn-primary btn-block px-1\" ><span>{{'Tasks.SelectService' | translate }}</span><br>&nbsp;{{userTask.price| number:'1.1-2'}}&nbsp;{{'Common.Form.SaudiRiyal' | translate }}</button>\n                        <button *ngIf=\"isCurrentUserProfile\" type=\"button\" (click)=\"getUserTaskToEdit(userTask)\" class=\"btn btn-success px-1\" >{{'Common.CRUD.Update' | translate }}</button>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </ng-container>\n    <ng-template #nothingTemplate>\n        <p class=\"form-control-plaintext text-break text-secondary text-center pt-0\">{{'Common.Messages.NoRecordWasAdded' | translate:{'value': 'Tasks.Service' | translate} }}</p>\n    </ng-template>\n</div>\n\n<!-- \n<div class=\"row\" >\n    <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n        <span class=\"section-header-behind-line profile-head-line px-2\">{{'Tasks.UserTasks' | translate }}</span>\n        <button type=\"button\" *ngIf=\"isCurrentUserProfile()\" class=\"btn btn-success btn-sm action-btn pull-right\" (click)=\"showUserTaskAddModal()\">\n            <i class=\"fa fa-plus-circle\"></i>&nbsp;{{'Common.CRUD.Add' | translate }}\n        </button>\n    </h4>\n\n    <div class=\"table-responsive\">\n\n        <table class=\"table table-sm table-light\">\n            <thead *ngIf=\"userTasks?.length\">\n                <tr>\n                    <th *ngFor=\"let c of columns\" class=\"{{c.style}}\">\n                        <div *ngIf=\"c.isSortable\" class=\"align-middle text-{{c.align}}\" >{{ c.title }}</div>\n                        <div *ngIf=\"!c.isSortable\" class=\"align-middle text-{{c.align}}\">{{ c.title }}</div>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngIf=\"!userTasks?.length\">\n                    <th colspan='100%' class=\"text-center text-secondary\" ><span class=\"mb-2\">{{'Common.Messages.NoRecordWasAdded' | translate:{'value': 'Tasks.Service' | translate} }}</span></th>\n                </tr>\n                <ng-container *ngFor=\"let userTask of userTasks\">\n                    <tr [ngClass]=\"{'text-secondary': !userTask.isEnabled }\" class=\"profile-details\">\n                        <td class=\"align-middle text-left\" [ngClass]=\"{'text-info': userTask.isEnabled }\"><strong>{{userTask.task?.name}}</strong></td>\n                        <td class=\"align-middle text-center\">{{userTask.price| number:'1.1-2'}}&nbsp;{{'Common.Form.SaudiRiyal' | translate }}</td>\n                        <td class=\"align-middle text-right\">\n                            <div class=\"btn-group  btn-sm\" role=\"group\" aria-label=\"...\">\n                                <button type=\"button\" class=\"link link-outline-danger btn-sm\" title=\"Delete\" (click)=\"removeUserTask(userTask.id)\"><i class=\"fa fa-trash\"></i></button>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr [ngClass]=\"{'text-secondary': !userTask.isEnabled }\">\n                        <td colspan='100%' class=\"text-left\" ><span class=\"mb-2\">{{userTask?.description}}</span></td>\n                    </tr>\n                </ng-container>\n                \n\n            </tbody>\n        </table>\n    </div>\n</div>\n\n\n<ng-template #popTitle let-vUserTask=\"vUserTask\">{{'Common.Data.MoreInformations' | translate }}</ng-template> \n<ng-template #popContent let-vUserTask=\"vUserTask\">\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold text-info\" >{{'UserTasks.Price' | translate }}&nbsp;:</label>\n\t\t<p class=\"form-control-Static\">{{vUserTask.price}}</p>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold text-info\" >{{'UserTasks.Description' | translate }}&nbsp;:</label>\n\t\t<p class=\"form-control-Static\">{{vUserTask.description}}</p>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold text-info\" >{{'UserTasks.IsEnabledCHeader' | translate }}&nbsp;:</label>\n\t\t<p class=\"form-control-Static\">{{vUserTask.isEnabled}}</p>\n\t</div>\n</ng-template>  -->","import { Component, OnInit, Input } from '@angular/core';\nimport { UserTask } from 'src/app/_models/Users/user-tasks';\nimport { Column, Pagination, PaginationResult } from 'src/app/_models/data/Pagination';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService, ConfirmResult } from 'src/app/_helpers/Alertify';\nimport { UserTasksService } from 'src/app/_services/users/user-tasks.service';\nimport { NgbPopover, NgbModal, NgbModalRef, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { NewUserTaskModalComponent } from '../new-user-task-modal/new-user-task-modal.component';\nimport { ModifyMyTaskComponent } from '../modify-my-task/modify-my-task.component';\nimport { OrderTaskerModalComponent } from 'src/app/components/tasks/order-tasker-modal/order-tasker-modal.component';\n\n@Component({\n  selector: 'app-user-tasks-list',\n  templateUrl: './user-tasks-list.component.html',\n  styleUrls: []\n})\nexport class UserTasksListComponent implements OnInit {\n  @Input('UserTasksPrices') userTasks: UserTask[];\n  @Input('CityName') cityName: string;\n  @Input('CurrentUserId') currentUserId: number;\n  addModalRef: NgbModalRef | null;\n  edtModalRef: NgbModalRef | null;\n  orderModalRef: NgbModalRef | null;\n\n  columns: Column[] = <Column[]>[\n    { title: this.appTranslation.get('Tasks.Type'), align: 'center', key: 'taskId' },\n    { title: this.appTranslation.get('Tasks.Price'), align: 'center', key: 'price' },\n    // { title: this.appTranslation.get('Tasks.IsEnabled'), align: 'center', key: 'isEnabled' },\n    {}\n  ];\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private modalService: NgbModal,\n    private userTasksService: UserTasksService, private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  changeUserTaskStatus(userTask: any, checkboxInput: any) {\n    this.userTasksService.changeUserTaskStatus(userTask.id, checkboxInput.currentTarget.checked).subscribe(\n      result => {\n        this.alertify.info('تم تغيير الحالة بنجاح');\n        userTask.isEnabled = result;\n      },\n      error => { this.alertify.error(error); }\n    );\n  }\n\n  async removeUserTask(id: number) {\n    const confirm = await this.alertify.promisifyConfirm(`تنبيه على أنت على وشك حذف سجل`, `هل أنت متأكد من الحذف؟`);\n    if (confirm === ConfirmResult.Ok) {\n      this.userTasksService.removeUserTask(id).subscribe(\n        () => {\n          this.alertify.info('تم الحذف بنجاح');\n          this.userTasks.splice(this.userTasks.findIndex(e => e.id === id), 1);\n        },\n        error => { this.alertify.error(error); }\n      );\n    }\n  }\n\n  toggleMoreInfo(popover: NgbPopover, vUserTask: UserTask) {\n    if (popover.isOpen()) { popover.close(); } else {\n      popover.placement = 'auto';\n      popover.open({ vUserTask });\n    }\n  }\n\n  get isCurrentUserProfile(): boolean {\n    return this.authService.isCurrentUserProfile(this.currentUserId);\n  }\n\n  showUserTaskAddModal() {\n    const config: NgbModalOptions = {\n      backdrop: 'static',\n      size: 'lg',\n      keyboard: false,\n    };\n    this.addModalRef = this.modalService.open(NewUserTaskModalComponent, config);\n    this.addModalRef.componentInstance.name = 'World';\n    this.addModalRef.componentInstance.addSuccessfully.subscribe((newUserTask: UserTask) => {\n      this.addNewUserTaskToUserTasksList(newUserTask);\n      this.addModalRef.close();\n    });\n  }\n\n  addNewUserTaskToUserTasksList(newUserTask: UserTask) {\n    if (newUserTask) {\n      this.userTasks.unshift(newUserTask);\n    }\n  }\n\n  getUserTaskToEdit(currentUserTask: UserTask) {\n    this.userTasksService.getUserTask(currentUserTask.id).subscribe(\n      (result: UserTask) => {\n        this.showUserTaskEditModal(currentUserTask, result);\n      },\n      error => this.alertify.error(error)\n    );\n  }\n\n  showUserTaskEditModal(currentUserTask: UserTask, apiUserTask: UserTask) {\n    const config: NgbModalOptions = {\n      backdrop: 'static',\n      size: 'lg',\n      keyboard: false,\n    };\n    this.edtModalRef = this.modalService.open(ModifyMyTaskComponent, config);\n    this.edtModalRef.componentInstance.userTask = apiUserTask;\n    this.edtModalRef.componentInstance.updatedSuccessfully.subscribe((updatedUserTask: UserTask) => {\n      this.edtModalRef.close();\n      this.applyChangedUserTask(currentUserTask, updatedUserTask);\n    });\n  }\n\n  applyChangedUserTask(currentUserTask: UserTask, updatedUserTask: UserTask) {\n    if (updatedUserTask) {\n      Object.assign(currentUserTask, updatedUserTask);\n    }\n  }\n\n\n  showUserTaskOrderModal(apiUserTask: UserTask) {\n    const config: NgbModalOptions = {\n      backdrop: 'static',\n      size: 'lg',\n      keyboard: false,\n    };\n    this.orderModalRef = this.modalService.open(OrderTaskerModalComponent, config);\n    this.orderModalRef.componentInstance.userTask = apiUserTask;\n    this.orderModalRef.componentInstance.cityName = this.cityName;\n    this.orderModalRef.componentInstance.orderSuccessfully.subscribe((updatedUserTask: UserTask) => {\n      this.orderModalRef.close();\n    });\n  }\n\n\n\n}","<app-breadcrumbs title=\"{{visitorAccount.fullName || visitorAccount.enFullName }}\" currentPageTitle=\"{{visitorAccount.fullName || visitorAccount.enFullName }}\"></app-breadcrumbs>\n\n<article id=\"profile\" class=\"content\">\n    <div class=\"container\">\n        <!-- start Normal Edt BootStrap Form -->\n\n        <form [formGroup]=\"edtVisitorAccountForm\" (ngSubmit)=\"editVisitorAccount()\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-5\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Profile.GeneralInfo' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.FirstName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                            <input class=\"form-control\"  maxlength=\"70\" formControlName=\"arFirstName\" placeholder= \"{{'users.Students.FirstName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arFirstName.errors && updateValidator.arFirstName.touched}\"  >\n                            <div *ngIf=\"updateValidator.arFirstName.touched && updateValidator.arFirstName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.arFirstName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.LastName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                            <input class=\"form-control\"  maxlength=\"70\" formControlName=\"arLastName\" placeholder= \"{{'users.Students.LastName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arLastName.errors && updateValidator.arLastName.touched}\"  >\n                            <div *ngIf=\"updateValidator.arLastName.touched && updateValidator.arLastName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.arLastName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\">{{'users.Students.EnFullName' | translate }}<strong class=\"text-danger\">*</strong></span>\n                            </div>\n                            <input class=\"form-control\"  maxlength=\"40\" formControlName=\"enFullName\" placeholder= \"{{'users.Students.EnFullName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.enFullName.errors && updateValidator.enFullName.touched}\"  >\n                            <div *ngIf=\"updateValidator.enFullName.touched && updateValidator.enFullName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.enFullName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-building\"></i>&nbsp;{{'users.Students.City' | translate }}<strong class=\"text-danger\">*</strong></span>\n                                </div>\n                                <select formControlName=\"cityId\" class=\"form-control\" [ngClass]=\"{'is-invalid' : updateValidator.cityId.errors && updateValidator.cityId.touched }\">\n                                    <option value=\"0\" disabled>{{'Common.Form.ChooseFromMenu' | translate }}</option>\n                                    <option *ngFor=\"let city of citiesOptions\" value=\"{{city.id}}\">{{city.name}}</option>\n                                </select>\n                                <div *ngIf=\"updateValidator.cityId.touched && updateValidator.cityId.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.cityId.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend \">\n                                    <span class=\"input-group-text px-1\">{{'users.Students.Gender' | translate }}<strong class=\"text-danger\">*</strong></span>\n                                </div>\n                                <label class=\"form-control px-1 text-center\">\n                                  <input id=\"male\" type=\"radio\" name=\"gender\" [value]=\"1\" formControlName=\"gender\">\n                                  <i class=\"fa fa-lg fa-male text-sky px-1\"></i>{{'Signup.IAmMan' | translate }}\n                                </label>\n                                <label class=\"form-control px-1 text-center\">\n                                    <input id=\"female\" type=\"radio\" name=\"gender\" [value]=\"2\" formControlName=\"gender\">\n                                    <i class=\"fa fa-lg fa-female text-pink px-1\"></i>{{'Signup.IAmWoman' | translate }}\n                                </label>\n                                <div *ngIf=\"updateValidator.gender.touched && updateValidator.gender.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.gender.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                   <span class=\"input-group-text\">{{'users.Students.BirthDay' | translate }}</span>\n                                </div>\n                                <input ngbDatepicker #birthDayDatepicker=\"ngbDatepicker\" [maxDate]=\"maxDate\" [minDate]=\"{year: 1950, month: 1, day: 1}\" [firstDayOfWeek]=\"0\" class=\"form-control\"  formControlName=\"birthDay\" readonly (click)=\"birthDayDatepicker?.toggle()\">\n                                <div class=\"input-group-append\">\n                                    <button class=\"btn btn-outline-secondary calendar\" (click)=\"birthDayDatepicker?.toggle()\" type=\"button\"><i class=\"fa fa-calendar\"></i></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'SocialMedias.Title' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-instagram\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"instagram\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Instagram' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.instagram.errors && updateValidator.instagram.touched}\"  >\n                                <div *ngIf=\"updateValidator.instagram.touched && updateValidator.instagram.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.instagram.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-linkedin-square\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"linkedin\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Linkedin' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.linkedin.errors && updateValidator.linkedin.touched}\"  >\n                                <div *ngIf=\"updateValidator.linkedin.touched && updateValidator.linkedin.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.linkedin.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-twitter\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"twitter\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Twitter' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.twitter.errors && updateValidator.twitter.touched}\"  >\n                                <div *ngIf=\"updateValidator.twitter.touched && updateValidator.twitter.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.twitter.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-facebook-square\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"facebook\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Facebook' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.facebook.errors && updateValidator.facebook.touched}\"  >\n                                <div *ngIf=\"updateValidator.facebook.touched && updateValidator.facebook.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.facebook.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer text-right\">\n                    <button class=\"btn btn-success\"  type=\"submit\" [disabled]=\"isSubmitting\">\n                        <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n                        <i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.UpdateData' | translate}}&nbsp;\n                    </button>\n                    <!-- [disabled]=\"isSubmitting || !edtVisitorAccountForm.valid\" -->\n                </div>\n            </div>\n        </form><!-- End Normal Edt BootStrap Form -->\n    </div>\n</article>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { zip } from 'rxjs';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { HijriCalenderService } from 'src/app/_helpers/date-and-time/hijri-calender.service';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { VisitorAccountUpdate } from 'src/app/_models/Users/visitor-account';\nimport { LocationsService } from 'src/app/_services/settings/locations.service';\nimport { VisitorAccountsService } from 'src/app/_services/users/visitor-accounts.service';\nimport { VisitorAccountForEdit } from '../../models/visitor-account';\n\n@Component({\n  selector: 'app-modify-visitor-profile',\n  templateUrl: './modify-visitor-profile.component.html',\n  styleUrls: []\n})\nexport class ModifyVisitorProfileComponent implements OnInit {\n  isLoadingOptions = true;\n  citiesOptions: KeyValuePairResource[] = [];\n  languagesOptions: KeyValuePairResource[] = [];\n\n  visitorAccount: VisitorAccountForEdit;\n  maxDate: any;\n  public GenderEnum = Gender;\n  edtVisitorAccountForm: FormGroup;\n  isSubmitting: boolean = false;\n  citiesList: KeyValuePairResource[] = [];\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n\n    private locationsService: LocationsService,\n    private router: Router,\n    private visitorAccountsService: VisitorAccountsService,\n  ) {\n    this.maxDate = HijriCalenderService.getToday(-17);\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.visitorAccount = data['user'];\n    });\n    this.initEdtForm();\n    this.getAllDefualtsValues();\n  }\n\n  getAllDefualtsValues() {\n    zip(\n      this.locationsService.getCitiesList(),\n    ).subscribe(\n      ([locations]) => {\n        this.citiesOptions = locations;\n      },\n      error => { this.alertify.error(error); },\n      () => {\n        this.isLoadingOptions = false;\n        this.enableAllControls();\n      }\n    );\n  }\n\n  initEdtForm() {\n    this.edtVisitorAccountForm = this.formBuilder.group({\n      id: [this.visitorAccount.id, Validators.required],\n      arFirstName: [this.visitorAccount.firstName ?? '', Validators.required],\n      arLastName: [this.visitorAccount.lastName ?? '', Validators.required],\n      enFullName: [this.visitorAccount.enFullName ?? '', [Validators.required]],\n      gender: [this.visitorAccount.gender ?? '', Validators.required],\n      cityId: [{ value: this.visitorAccount.cityId ?? '', disabled: true }, Validators.required],\n      birthDay: [HijriCalenderService.dateToNgbDateOrNull(this.visitorAccount.birthDay) ?? null],\n      instagram: [this.visitorAccount.socialMediaAccounts?.instagram ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      linkedin: [this.visitorAccount.socialMediaAccounts?.linkedin ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      twitter: [this.visitorAccount.socialMediaAccounts?.twitter ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      facebook: [this.visitorAccount.socialMediaAccounts?.facebook ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)]\n    });\n  }\n\n  enableAllControls() {\n    this.edtVisitorAccountForm.controls.cityId.enable();\n  }\n\n  get updateValidator() { return this.edtVisitorAccountForm.controls; }\n\n  editVisitorAccount() {\n    // console.log(this.edtVisitorAccountForm.value);\n    // console.log(\"Invalid Controls:\", this.findInvalidControls());\n    this.edtVisitorAccountForm.valid;\n    if (this.edtVisitorAccountForm.valid) {\n      this.isSubmitting = true;\n      this.edtVisitorAccountForm.disable();\n      var updatedVisitorAccount = {} as VisitorAccountUpdate;\n      Object.assign(updatedVisitorAccount, this.edtVisitorAccountForm.value);\n      updatedVisitorAccount.birthDay = HijriCalenderService.tryConvertGregorianToDate(this.edtVisitorAccountForm.controls.birthDay.value);\n      this.visitorAccountsService.updateVisitorAccount(this.visitorAccount.id, updatedVisitorAccount).subscribe(\n        returnVisitorAccount => {\n          this.alertify.success(this.appTranslation.get('Common.Messages.UpdatedSuccessfully'));\n          this.router.navigate(['/profile']);\n        },\n        error => { this.alertify.error(error); this.isSubmitting = false; this.edtVisitorAccountForm.enable(); },\n        () => { });\n    } else {\n      this.alertify.warning(this.appTranslation.get('Common.Data.Invalid'));\n      this.edtVisitorAccountForm.markAllAsTouched();\n      this.isSubmitting = false;\n    }\n  }\n\n  // console.log(\"Invalid Controls:\", this.findInvalidControls());\n  // public findInvalidControls() {\n  //   const invalid = [];\n  //   const controls = this.edtVisitorAccountForm.controls;\n  //   for (const name in controls) {\n  //     if (controls[name].invalid) {\n\n  //       console.log(controls[name].errors);\n  //       invalid.push(name);\n  //     }\n  //   }\n  //   return invalid;\n  // }\n\n}\n","<app-breadcrumbs title=\"{{'Menu.MyAccount' | translate }}\" currentPageTitle=\"{{userProfile?.fullName}}\"></app-breadcrumbs>\n\n<!-- ======= member profile ======= -->\n<section id=\"profile\" class=\"profile\">\n    <div class=\"container\">\n        <div class=\"row\" id=\"user-profile\">\n            <div class=\"col-lg-3 col-md-4 col-sm-4 p-0\">\n                <div class=\"main-box\">\n                    <h4 class=\"user-name\" [ngClass]=\"getGenderStyle()\">{{userProfile.fullName}}</h4>\n                    <div class=\"profile-status\">\n                        <i class=\"fa fa-check-circle\"></i>&nbsp;{{userProfile?.studentAccountData?.accountStatusName}}\n                    </div>\n\n                    <app-profile-image [UserProfileData]=\"userProfile\"></app-profile-image>\n                    <app-profile-stars [Rating]=\"userProfile?.totalRating\"></app-profile-stars>\n                    <app-since-profile [MemberSince]=\"userProfile?.createdDate\" [LastActivity]=\"userProfile?.lastActive\"></app-since-profile>\n                    <app-jobs-searcher-counters></app-jobs-searcher-counters>\n\n                    <div *ngIf=\"!isCurrentUserProfile\" class=\"profile-message-btn center-block text-center\">\n                        <a class=\"btn btn-success text-white\" (click)=\"showChatBox()\">\n                            <i class=\"fa fa-envelope\"></i> {{'Chatbox.SendMessage' | translate }}\n                        </a>\n                    </div>\n\n                </div>\n            </div>\n\n            <div class=\"col-lg-9 col-md-8 col-sm-8 p-0 px-md-2\">\n                <div class=\"main-box \">\n                    <ul class=\"nav nav-tabs\" id=\"user-tab\" role=\"tablist\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link active\" id=\"about-user-tab\" data-toggle=\"tab\" href=\"#aboutUser\" role=\"tab\" aria-controls=\"about-user-tab\" aria-selected=\"true\">بياناتي</a>\n                        </li>\n\n                        <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"ratings-history-tab\" data-toggle=\"tab\" href=\"#ratings-history\" role=\"tab\" aria-controls=\"ratings-history\" aria-selected=\"false\">التقييمات</a>\n                        </li>\n\n                        <li *ngIf=\"!isCurrentUserProfile\" class=\"nav-item\">\n                          <a #chatboxTab class=\"nav-link\" id=\"chatbox-tab\" data-toggle=\"tab\" href=\"#chatbox\" role=\"tab\" aria-controls=\"chatbox\" aria-selected=\"false\">المحادثة</a>\n                        </li>\n                    </ul>\n\n                    <div class=\"tab-content  p-2\" id=\"myTabContent\">\n                        <div class=\"tab-pane fade show active\" id=\"aboutUser\" role=\"tabpanel\" aria-labelledby=\"about-user-tab\">\n                            <div class=\"d-flex justify-content-between align-items-start mb-2\">\n                                <h4 class=\"text-left\"><span class=\"section-header-behind-line behind-line-gray px-2 pb-1\">{{'users.Students.PersonalInfo' | translate }}</span></h4>\n                                <a *ngIf=\"isCurrentUserProfile\" [routerLink]=\"['/profile' , 'visitor', 'edit' ]\" class=\"btn btn-primary btn-sm edit-profile\">\n                                    <i class=\"fa fa-pencil-square fa-lg\"></i> {{'Common.CRUD.Update' | translate }}\n                                </a>\n                            </div>\n                            <app-personal-details [UserProfileData]=\"userProfile\" ></app-personal-details>\n                            <app-member-contact *ngIf=\"userProfile?.displayContactInfo\" [UserProfileData]=\"userProfile\"></app-member-contact>\n                        </div>\n\n                        <div class=\"tab-pane fade\" id=\"ratings-history\" role=\"tabpanel\" aria-labelledby=\"ratings-history-tab\">\n                            <app-rating-and-reviews-list [RatingsAndReviews]=\"userProfile.ratingsGot\"></app-rating-and-reviews-list>\n                        </div>\n\n                        <div *ngIf=\"!isCurrentUserProfile\" class=\"tab-pane fade profile-chatbox\" id=\"chatbox\" role=\"tabpanel\" aria-labelledby=\"chatbox-tab\">\n                          <ng-container *ngIf=\"!isCurrentUserCanStartConversationWithThisUser; else conversationBox\">\n                            <div *ngIf=\"conversationNotAllowed\"  class=\"alert alert-danger text-center\" role=\"alert\">{{conversationNotAllowed}}</div>\n                            <div *ngIf=\"!conversationNotAllowed\"  class=\"alert alert-warning text-center\" role=\"alert\"><span class=\"spinner-border spinner-border-sm\" role=\"status\"></span>&nbsp;&nbsp;{{'Common.Data.Loading' | translate}}</div>\n\n                          </ng-container>\n                          <ng-template #conversationBox>\n                            <app-conversation-box [RecipientId]=\"userProfile?.id\" [RecipientGender]=\"userProfile?.gender\"></app-conversation-box>\n                          </ng-template>\n                        </div>\n\n                      </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- End member profile -->\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/_services/users/User.service';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { MessageWithObject } from 'src/app/_models/data/actions-result';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\n\n@Component({\n  selector: 'app-visitor-profile',\n  templateUrl: './visitor-profile.component.html',\n  styleUrls: []\n})\nexport class VisitorProfileComponent implements OnInit {\n  @Input() userProfile: UserProfileResult;\n  @ViewChild('chatboxTab') chatboxTab: ElementRef<HTMLElement>;\n  isCurrentUserCanStartConversationWithThisUser: boolean = false;\n  conversationNotAllowed: string = null;\n\n  constructor(private router: Router, private route: ActivatedRoute, private userService: UserService, private appTranslation: AppTranslationService,\n    private alertify: AlertifyService, private authService: AuthService, private messagesService: MessagesService) { }\n\n  ngOnInit(): void {\n    console.log('Student Account');\n    if (!this.userProfile) {\n      this.alertify.warning('يوجد مشكلة في عرض بيانات المستخدم أو لا تملك صلاحية مخوله للوصول الى ملفه');\n      this.router.navigate(['']);\n    } else {\n      this.checkIfCurrentUserCanStartChat();\n    }\n  }\n\n  get isCurrentUserProfile(): boolean {\n    return this.authService.isCurrentUserProfile(this.userProfile.id);\n  }\n\n\n  checkIfCurrentUserCanStartChat() {\n    if (!this.isCurrentUserProfile) {\n      this.messagesService.checkIfCurrentUserCanStartChatWithTheOtherUser(this.authService.currentUser.id, this.userProfile.id).subscribe(\n        (result: MessageWithObject) => {\n          if (result.data === true)\n            this.isCurrentUserCanStartConversationWithThisUser = true;\n          else\n            this.conversationNotAllowed = result.message;\n        },\n        error => {\n          this.conversationNotAllowed = error;\n          this.isCurrentUserCanStartConversationWithThisUser = false;\n        }\n      );\n    }\n  }\n\n\n  getGenderStyle() {\n    if (<Gender>this.userProfile.gender === <Gender>Gender.male) {\n      return 'text-sky';\n    } else if (<Gender>this.userProfile.gender === <Gender>Gender.female) {\n      return 'text-pink';\n    }\n    else { return '' }\n  }\n\n  showChatBox() {\n    this.chatboxTab.nativeElement.click()\n  }\n\n}\n"]}