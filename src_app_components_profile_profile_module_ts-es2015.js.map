{"version":3,"file":"src_app_components_profile_profile_module_ts-es2015.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC0B;;;;;;;;;;;;;;;;;;;ACpC3B;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,WAAW,gBAAgB,sCAAsC,kBAAkB;AACnF,0BAA0B;AAC1B;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACqC;AACI;AACQ;AACF;AAChD,+BAA+B,iCAAiC;AAChE;AACA;AACA,uCAAuC,wCAAwC,sBAAsB,+BAA+B;AACpI;AACA;AACA;AACA,mCAAmC,yDAAa;AAChD;AACA;AACA,mCAAmC,2DAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+CAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,mDAAU;AACiB;;;;;;;;;;;;;;;ACjD7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACiC;;;;;;;;;;;;;;;;;ACdlC;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,WAAW,gBAAgB,sCAAsC,kBAAkB;AACnF,0BAA0B;AAC1B;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,sCAAsC,gCAAgC;AACtE;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACoB;AACrB;AACA;AACA;AACA,sCAAsC,mCAAmC;AACzE;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;AACxB;AACA;AACA;AACA,sCAAsC,iBAAiB;AACvD;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACqB;;;;;;;;;;;;;;;;;AC3EtB;AACA;AACwD;AAChB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uEAAuB;AACtC;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAa;AACzB;AACA;AACA,oDAAoD,qFAAqC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,iFAAiC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uEAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;;;;;;;;;;;;;;;;ACtD7B;AACA;AACA,gBAAgB,SAAI,IAAI,SAAI;AAC5B,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,aAAa,yBAAyB;AAC1E;AACA;AACA,oCAAoC,aAAa,0BAA0B;AAC3E;AACA;AACA,oCAAoC,aAAa,4BAA4B;AAC7E;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACqB;;;;;;;;;;;;;;;;;;;;;;AC/CtB;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC,iEAAiE,wBAAwB;AACzH;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACwD;AACnB;AAC4B;AACH;AACU;AAClB;AACI;AAC1D;AACA;AACA;AACA,IAAI,mDAAe,IAAI,UAAc;AACrC;AACA;AACA,sBAAsB,KAAyC,GAAG,OAAuB,GAAG,CAAO;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,QAAQ,kDAAc;AACtB,sBAAsB,oDAAY;AAClC;AACA;AACA;AACA,aAAa,mDAAe;AAC5B;AACA;AACA,iBAAiB,mDAAe;AAChC;AACA;AACA;AACA;AACA,aAAa,mDAAe;AAC5B;AACA;AACA,iBAAiB,mDAAe;AAChC;AACA;AACA;AACA;AACA,oDAAoD,iEAAiB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,8DAAqB;AAChF,wBAAwB,4CAAQ,iBAAiB,uDAAc;AAC/D,wCAAwC,oDAAc,iDAAiD,uDAAc;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAc;AAC1D;AACA;AACA;AACA,4CAA4C,oDAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,qEAA4B;AACrF;AACA,iEAAiE,qEAA4B;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,uEAAoB;AAC1E;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,4CAA4C,oDAAc;AAC1D;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA,4CAA4C,oDAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iBAAiB,qEAA4B;AAC7C;AACA;AACA;AACA,2BAA2B,mEAAkB;AAC7C,iBAAiB,2EAAkC;AACnD;AACA;AACA;AACA,2BAA2B,iFAAyB;AACpD,iBAAiB,sEAA6B;AAC9C,2BAA2B,uEAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAiB;AACzC;AACA,4BAA4B,oDAAc;AAC1C;AACA;AACA,8EAA8E,OAAO,uDAAc,MAAM;AACzG;AACA;AACA,uCAAuC,qEAA4B;AACnE,uCAAuC,2EAAkC;AACzE,wCAAwC,oDAAc,2BAA2B,0DAAiB;AAClG,8CAA8C,0DAAiB;AAC/D;AACA;AACA,wCAAwC,oDAAc,4BAA4B,0DAAiB;AACnG;AACA;AACA;AACA;AACA,oCAAoC,oDAAc,2BAA2B,0DAAiB,gFAAgF,uDAAc;AAC5L,0CAA0C,0DAAiB,sCAAsC,uDAAc;AAC/G;AACA;AACA;AACA,gCAAgC,oDAAc,2BAA2B,0DAAiB;AAC1F,sCAAsC,0DAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oDAAc;AACtC;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAc;AAC1C;AACA;AACA;AACA,4BAA4B,sDAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAc;AAC1C;AACA;AACA,4BAA4B,0DAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oDAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACyB;AAC1B;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC/hBA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC,iEAAiE,wBAAwB;AACzH;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACwD;AACX;AACR;AACD;AACN;AAC9B;AACA;AACA,wCAAwC,qBAAqB;AACtD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iEAAiB;AACtD,sDAAsD;AACtD,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,MAAM,2DAAgB,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qBAAqB;AAC7D;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA,wCAAwC,0DAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,4BAA4B,oDAAc;AAC1C;AACA;AACA;AACA,4BAA4B,oDAAc;AAC1C;AACA;AACA;AACA,wBAAwB,oDAAc;AACtC;AACA;AACA;AACA;AACA,4BAA4B,oDAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA,0BAA0B,6CAAO;AACjC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,iEAAsB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iEAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,wBAAwB;AAC5E;AACA;AACA,yBAAyB,iEAAsB;AAC/C;AACA;AACA,yBAAyB,iEAAsB;AAC/C,yBAAyB,iEAAsB;AAC/C;AACA;AACA,iDAAiD,iEAAsB;AACvE;AACA;AACA;AACA;AACA;AACA,yBAAyB,2DAAgB;AACzC;AACA;AACA,yBAAyB,4DAAiB;AAC1C,wCAAwC,0DAAoB;AAC5D;AACA;AACA;AACA;AACA,wCAAwC,sDAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAc;AAC1C;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA,0DAA0D,+BAA+B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qDAAqD;AACpG;AACA;AACA,gCAAgC,oDAAc;AAC9C;AACA;AACA;AACA;AACA,gCAAgC,oDAAc;AAC9C;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAgB;AAC5C;AACA;AACA;AACA,wBAAwB,oDAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,iCAAiC;AAC7F;AACA;AACA,gCAAgC,oDAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAc;AAC1D;AACA;AACA;AACA;AACA;AACA,4CAA4C,0DAAoB;AAChE;AACA;AACA,4CAA4C,0DAAoB;AAChE;AACA;AACA;AACA,kFAAkF,iCAAiC;AACnH;AACA;AACA,gDAAgD,oDAAc;AAC9D;AACA;AACA;AACA,gDAAgD,oDAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0DAAoB;AAC5D;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,4CAA4C,oDAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0DAAoB;AAC5D;AACA;AACA,iFAAiF,yDAAyD;AAC1I;AACA;AACA,gDAAgD,oDAAc,6FAA6F;AAC3J;AACA;AACA;AACA;AACA;AACA,wCAAwC,0DAAoB;AAC5D;AACA,4CAA4C,oDAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0DAAoB;AAC5D;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iEAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iEAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,yEAAyE;AAC5I,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,kFAAkF;AACrJ,iBAAiB;AACjB;AACA,mEAAmE,+EAA+E;AAClJ,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uEAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA,kBAAkB,uEAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iEAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAsB;AACxC;AACA;AACA;AACA,CAAC;AACwB;;;;;;;;;;;;;;;;;;;;;;ACh3BzB;AACA;AACA,gBAAgB,SAAI,IAAI,SAAI;AAC5B,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACkE;AAChB;AACF;AACX;AACe;AACb;AACM;AAC7C;AACA;AACA,WAAW,oDAAc;AACzB,WAAW,oDAAc;AACzB,UAAU,0DAAoB;AAC9B,iBAAiB,0DAAoB;AACrC,UAAU,sDAAgB;AAC1B,aAAa,sDAAgB;AAC7B,WAAW,oDAAc;AACzB,cAAc,uDAAiB;AAC/B,UAAU,mDAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qCAAqC;AACpE;AACA;AACA;AACA;AACA,QAAQ,kDAAc;AACtB;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAa;AAC3C;AACA;AACA,8BAA8B,iDAAa;AAC3C;AACA;AACA;AACA;AACA,QAAQ,kDAAc;AACtB;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA,oDAAoD,gCAAgC,mCAAmC;AACvH;AACA;AACA;AACA,wBAAwB,qCAAqC;AAC7D;AACA,eAAe,cAAc,cAAc,oCAAoC;AAC/E;AACA;AACA,QAAQ,kDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2EAAsB;AAC7D;AACA;AACA,uCAAuC,2EAAsB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qCAAqC;AACxD;AACA,iBAAiB,eAAe,gBAAgB,oCAAoC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2DAAc;AAC3C,eAAe,gEAAoB,4BAA4B,yDAAmB,uBAAuB,6DAAe;AACxH;AACA;AACA,CAAC;AAC+B;AAChC;AACA;AACA;;;;;;;;;;;;;;;ACzHA;AACA;AACA;AACO;AACP;AACA,2EAA2E,yCAAyC;AACpH;AACA,0EAA0E,yCAAyC;AACnH;AACA,0EAA0E,yCAAyC;AACnH;AACA,iFAAiF,+CAA+C;AAChI;AACA,iFAAiF,+CAA+C;AAChI;AACA,oEAAoE,mCAAmC;AACvG;AACA,qEAAqE,oCAAoC;AACzG;AACA,CAAC,kCAAkC;;;;;;;;;;;;;;;ACnBnC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;;;;;;;;;;;;;;;;ACvB7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;;;;;;;;;;;;;;;;;;;;ACtBzC;AACA;AAC6C;AACR;AACS;AACP;AACiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAmB;AACjD;AACA,6BAA6B,kCAAkC;AAC/D;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yDAAmB;AACxC;AACA;AACA,uBAAuB,uEAAuB;AAC9C;AACA,gDAAgD,wBAAwB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iEAAsB;AAC3C;AACA;AACA,qBAAqB,iEAAsB;AAC3C;AACA;AACA,qBAAqB,iEAAsB;AAC3C;AACA;AACA,qBAAqB,2DAAgB;AACrC;AACA;AACA,qBAAqB,4DAAiB;AACtC;AACA;AACA;AACA;AACA,+BAA+B,0DAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kCAAkC;AAChE;AACA,eAAe,YAAY;AAC3B,iBAAiB,QAAQ;AACzB;AACA;AACA,eAAe,uEAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC0B;;;;;;;;;;;;;;;ACxG3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iCAAiC;AACxE;AACA;AACA,CAAC;AACqB;;;;;;;;;;;;;;;;;;;;ACdtB;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC,iEAAiE,wBAAwB;AACzH;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACoD;AACD;AACd;AACS;AACY;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6DAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kDAAc;AACtC,wBAAwB,kDAAc;AACtC,wBAAwB,4CAAQ,iBAAiB,uDAAc;AAC/D;AACA,wCAAwC,oDAAc;AACtD;AACA,+CAA+C,8DAAqB;AACpE;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,+CAA+C,8DAAqB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA,4CAA4C,oDAAc;AAC1D;AACA,kDAAkD,8CAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA,4CAA4C,0DAAoB;AAChE;AACA;AACA;AACA,4CAA4C,oDAAc;AAC1D;AACA,kDAAkD,8CAAS;AAC3D;AACA;AACA;AACA;AACA;AACA,gDAAgD,oDAAc,8CAA8C,qDAAa;AACzH;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oDAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAc;AAC1D;AACA;AACA,+CAA+C,iDAAY;AAC3D;AACA,gDAAgD,oDAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mDAAW;AACjD,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAc;AAC1C;AACA;AACA;AACA;AACA,CAAC;AAC+B;;;;;;;;;;;;;;;;;;;ACzRhC;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,WAAW,gBAAgB,sCAAsC,kBAAkB;AACnF,0BAA0B;AAC1B;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD,gBAAgB,SAAI,IAAI,SAAI;AAC5B,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AAC+D;AACP;AACnB;AACG;AACxC;AACA;AACA;AACA;AACA,sBAAsB,KAAyC,GAAG,OAAuB,GAAG,CAAO;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,sBAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,yCAAyC,sDAAgB;AACzD,mCAAmC,iDAAY;AAC/C;AACA,qCAAqC,sDAAgB;AACrD;AACA;AACA;AACA;AACA,gCAAgC,qDAAY;AAC5C;AACA;AACA,+BAA+B,8CAAS;AACxC;AACA,aAAa;AACb;AACA;AACA;AACA,+BAA+B,+CAAU;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,mDAAU;AACc;;;;;;;;;;;;;;;;;;AC/F1B;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC,iEAAiE,wBAAwB;AACzH;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACqC;AACS;AACsB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kDAAc;AACtC,wBAAwB,kDAAc;AACtC,wBAAwB,4CAAQ,iBAAiB,uDAAc;AAC/D,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,4DAAmB;AACtE;AACA;AACA;AACA;AACA,gCAAgC,sDAAkB,IAAI,wDAAoB;AAC1E,sFAAsF,uBAAuB;AAC7G;AACA;AACA;AACA;AACA,sFAAsF,kCAAkC,mBAAmB;AAC3I;AACA;AACA;AACA;AACA;AACA,6DAA6D,oDAAc,sCAAsC,qDAAa;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,0DAAoB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mDAAW;AACjD,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACoC;;;;;;;;;;;;;;;;ACtJrC;AACA;AAC8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAmB;AACtC;AACA;AACA,CAAC;AACkB;;;;;;;;;;;;;;;ACpCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;;;;;;;;;;;;;;;;;;;;;;;;;ACtB7B;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC,iEAAiE,wBAAwB;AACzH;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACqC;AACE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACc;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACmB;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,+BAA+B,oDAAc;AAC7C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,+BAA+B,oDAAc;AAC7C;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACO;AACP;AACA,iCAAiC,0DAAoB;AACrD;AACA;AACA,eAAe,yDAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,CAAC;AAC8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uDAAiB;AACtC,qBAAqB,oDAAc;AACnC,qFAAqF,8CAAQ;AAC7F;AACA,qBAAqB,sDAAgB;AACrC,oFAAoF,8CAAQ;AAC5F;AACA,qBAAqB,0DAAoB;AACzC,oFAAoF,8CAAQ;AAC5F;AACA;AACA;AACA,mFAAmF,8CAAQ;AAC3F;AACA;AACA;AACA;AACA;AACA,CAAC;AACwB;;;;;;;;;;;;;;;;;;ACtNzB;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC,iEAAiE,wBAAwB;AACzH;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACqC;AACS;AACS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kDAAc;AACtC,wBAAwB,kDAAc;AACtC,wBAAwB,4CAAQ,iBAAiB,uDAAc;AAC/D,wCAAwC,oDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAe;AAC/C;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,mDAAmD,8DAAqB;AACxE;AACA;AACA;AACA;AACA,iDAAiD,0DAAoB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,oDAAc,6CAA6C,qDAAa;AACzH;AACA;AACA;AACA;AACA,mEAAmE;AACnE,yBAAyB;AACzB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,4BAA4B,oDAAc,4CAA4C,qDAAa;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oDAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC6B;;;;;;;;;;;;;;;;;;ACvJ9B;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,WAAW,gBAAgB,sCAAsC,kBAAkB;AACnF,0BAA0B;AAC1B;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AAC8D;AACP;AACnB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+CAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+CAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qDAAY;AAC5C;AACA;AACA,+BAA+B,8CAAS;AACxC;AACA;AACA;AACA,iCAAiC,sDAAgB;AACjD,2BAA2B,8CAAS;AACpC;AACA;AACA,iCAAiC,sDAAgB;AACjD,2BAA2B,iDAAY;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,mDAAU;AACa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrFzB;AACA;AACA;AACA;AACO;AACwD;AACP;AACA;AACY;AACN;AACjB;AACR;AAC4B;AAC1B;AACa;AAChB;;;;;;;;;;;;;;;;ACf0C;AAEvE,MAAM,sBAAuB,SAAQ,yDAAY;IAEpD,YAAY,OAA4B;QACpC,KAAK,CAAC,OAAO,CAAC,CAAC;IACnB,CAAC;IAED,cAAc;QAEV,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QAC/B,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC9B,IAAI,QAAQ,GAAa,IAAI,CAAC;QAC9B,IAAI,CAAC,e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","sources":["./node_modules/@aspnet/signalr/dist/esm/AbortController.js","./node_modules/@aspnet/signalr/dist/esm/DefaultHttpClient.js","./node_modules/@aspnet/signalr/dist/esm/DefaultReconnectPolicy.js","./node_modules/@aspnet/signalr/dist/esm/Errors.js","./node_modules/@aspnet/signalr/dist/esm/HandshakeProtocol.js","./node_modules/@aspnet/signalr/dist/esm/HttpClient.js","./node_modules/@aspnet/signalr/dist/esm/HttpConnection.js","./node_modules/@aspnet/signalr/dist/esm/HubConnection.js","./node_modules/@aspnet/signalr/dist/esm/HubConnectionBuilder.js","./node_modules/@aspnet/signalr/dist/esm/IHubProtocol.js","./node_modules/@aspnet/signalr/dist/esm/ILogger.js","./node_modules/@aspnet/signalr/dist/esm/ITransport.js","./node_modules/@aspnet/signalr/dist/esm/JsonHubProtocol.js","./node_modules/@aspnet/signalr/dist/esm/Loggers.js","./node_modules/@aspnet/signalr/dist/esm/LongPollingTransport.js","./node_modules/@aspnet/signalr/dist/esm/NodeHttpClient.js","./node_modules/@aspnet/signalr/dist/esm/ServerSentEventsTransport.js","./node_modules/@aspnet/signalr/dist/esm/Subject.js","./node_modules/@aspnet/signalr/dist/esm/TextMessageFormat.js","./node_modules/@aspnet/signalr/dist/esm/Utils.js","./node_modules/@aspnet/signalr/dist/esm/WebSocketTransport.js","./node_modules/@aspnet/signalr/dist/esm/XhrHttpClient.js","./node_modules/@aspnet/signalr/dist/esm/index.js","./src/app/_helpers/uploader/FileUploader.ts","./src/app/_models/Users/rating-and-review.ts","./src/app/_models/Users/user-skill.ts","./src/app/_resolvers/Users/member-profile.resolver.ts","./src/app/_resolvers/chats/message.resolver.ts","./src/app/_services/chats/chats.service.ts","./src/app/_services/chats/messages.service.ts","./src/app/_services/settings/education-degrees.service.ts","./src/app/_services/settings/hobbies.service.ts","./src/app/_services/settings/languages.service.ts","./src/app/_services/settings/majors.service.ts","./src/app/_services/settings/universities.service.ts","./src/app/_services/users/business-accounts.service.ts","./src/app/_services/users/portfolios.service.ts","./src/app/_services/users/visitor-accounts.service.ts","./src/app/components/profile/business/business-account-balance/business-account-balance.component.ts","./src/app/components/profile/business/business-account-balance/business-account-balance.component.html","./src/app/components/profile/business/business-account-details/business-account-details.component.ts","./src/app/components/profile/business/business-account-details/business-account-details.component.html","./src/app/components/profile/business/business-account-profile/business-account-profile.component.ts","./src/app/components/profile/business/business-account-profile/business-account-profile.component.html","./src/app/components/profile/business/business-counters/business-counters.component.ts","./src/app/components/profile/business/edit-business-account/edit-business-account.component.ts","./src/app/components/profile/business/edit-business-account/edit-business-account.component.html","./src/app/components/profile/jobs-searcher/edit-jobs-searcher/edit-jobs-searcher.component.ts","./src/app/components/profile/jobs-searcher/edit-jobs-searcher/edit-jobs-searcher.component.html","./src/app/components/profile/jobs-searcher/education-details/education-details.component.ts","./src/app/components/profile/jobs-searcher/education-details/education-details.component.html","./src/app/components/profile/jobs-searcher/job-interests/job-interests.component.ts","./src/app/components/profile/jobs-searcher/job-interests/job-interests.component.html","./src/app/components/profile/jobs-searcher/jobs-searcher-counters/jobs-searcher-counters.component.ts","./src/app/components/profile/jobs-searcher/jobs-searcher-profile/jobs-searcher-profile.component.ts","./src/app/components/profile/jobs-searcher/jobs-searcher-profile/jobs-searcher-profile.component.html","./src/app/components/profile/jobs-searcher/skills/general-skills/general-skills.component.ts","./src/app/components/profile/jobs-searcher/skills/general-skills/general-skills.component.html","./src/app/components/profile/jobs-searcher/skills/hoppies/hoppies.component.ts","./src/app/components/profile/jobs-searcher/skills/hoppies/hoppies.component.html","./src/app/components/profile/jobs-searcher/skills/personal-skills/personal-skills.component.ts","./src/app/components/profile/jobs-searcher/skills/personal-skills/personal-skills.component.html","./src/app/components/profile/profile-routing.module.ts","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.module.ts","./src/app/components/profile/resolvers/edit-member-profile.resolver.ts","./src/app/components/profile/shared/change-user-password/change-user-password.component.ts","./src/app/components/profile/shared/change-user-password/change-user-password.component.html","./src/app/components/profile/shared/chats/conversation-box/conversation-box.component.ts","./src/app/components/profile/shared/chats/conversation-box/conversation-box.component.html","./src/app/components/profile/shared/chats/messages-list/messages-list.component.ts","./src/app/components/profile/shared/chats/messages-list/messages-list.component.html","./src/app/components/profile/shared/language-skills/language-skills.component.ts","./src/app/components/profile/shared/language-skills/language-skills.component.html","./src/app/components/profile/shared/member-contact/member-contact.component.ts","./src/app/components/profile/shared/member-contact/member-contact.component.html","./src/app/components/profile/shared/member-contact/social-media/social-media.component.ts","./src/app/components/profile/shared/member-contact/social-media/social-media.component.html","./src/app/components/profile/shared/personal-details/personal-details.component.ts","./src/app/components/profile/shared/personal-details/personal-details.component.html","./src/app/components/profile/shared/profile-image/profile-image.component.ts","./src/app/components/profile/shared/profile-image/profile-image.component.html","./src/app/components/profile/shared/profile-stars/profile-stars.component.ts","./src/app/components/profile/shared/profile-stars/profile-stars.component.html","./src/app/components/profile/shared/ratings-history/ratings-history.component.ts","./src/app/components/profile/shared/ratings-history/ratings-history.component.html","./src/app/components/profile/shared/ratings/rating-and-reviews-list/rating-and-reviews-list.component.ts","./src/app/components/profile/shared/ratings/rating-and-reviews-list/rating-and-reviews-list.component.html","./src/app/components/profile/shared/ratings/rating-row-details/rating-row-details.component.ts","./src/app/components/profile/shared/ratings/rating-row-details/rating-row-details.component.html","./src/app/components/profile/shared/since-profile/since-profile.component.ts","./src/app/components/profile/shared/since-profile/since-profile.component.html","./src/app/components/profile/shared/user-activity/user-activity.component.ts","./src/app/components/profile/shared/user-activity/user-activity.component.html","./src/app/components/profile/taskers/modify-tasker-profile/modify-tasker-profile.component.ts","./src/app/components/profile/taskers/modify-tasker-profile/modify-tasker-profile.component.html","./src/app/components/profile/taskers/portfolios/create-portfolio/create-portfolio.component.ts","./src/app/components/profile/taskers/portfolios/create-portfolio/create-portfolio.component.html","./src/app/components/profile/taskers/portfolios/modify-portfolio/modify-portfolio.component.ts","./src/app/components/profile/taskers/portfolios/modify-portfolio/modify-portfolio.component.html","./src/app/components/profile/taskers/portfolios/portfolio-details/portfolio-details.component.ts","./src/app/components/profile/taskers/portfolios/portfolio-details/portfolio-details.component.html","./src/app/components/profile/taskers/portfolios/portfolios-list/portfolios-list.component.ts","./src/app/components/profile/taskers/portfolios/portfolios-list/portfolios-list.component.html","./src/app/components/profile/taskers/tasker-profile/tasker-profile.component.ts","./src/app/components/profile/taskers/tasker-profile/tasker-profile.component.html","./src/app/components/profile/taskers/user-tasks/modify-my-task/modify-my-task.component.ts","./src/app/components/profile/taskers/user-tasks/modify-my-task/modify-my-task.component.html","./src/app/components/profile/taskers/user-tasks/new-user-task-modal/new-user-task-modal.component.ts","./src/app/components/profile/taskers/user-tasks/new-user-task-modal/new-user-task-modal.component.html","./src/app/components/profile/taskers/user-tasks/user-tasks-list/user-tasks-list.component.ts","./src/app/components/profile/taskers/user-tasks/user-tasks-list/user-tasks-list.component.html","./src/app/components/profile/visitor/modify-visitor-profile/modify-visitor-profile.component.ts","./src/app/components/profile/visitor/modify-visitor-profile/modify-visitor-profile.component.html","./src/app/components/profile/visitor/visitor-profile/visitor-profile.component.ts","./src/app/components/profile/visitor/visitor-profile/visitor-profile.component.html"],"sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nvar AbortController = /** @class */ (function () {\r\n    function AbortController() {\r\n        this.isAborted = false;\r\n        this.onabort = null;\r\n    }\r\n    AbortController.prototype.abort = function () {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(AbortController.prototype, \"signal\", {\r\n        get: function () {\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbortController.prototype, \"aborted\", {\r\n        get: function () {\r\n            return this.isAborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AbortController;\r\n}());\r\nexport { AbortController };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { AbortError } from \"./Errors\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { NodeHttpClient } from \"./NodeHttpClient\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n/** Default implementation of {@link @aspnet/signalr.HttpClient}. */\r\nvar DefaultHttpClient = /** @class */ (function (_super) {\r\n    __extends(DefaultHttpClient, _super);\r\n    /** Creates a new instance of the {@link @aspnet/signalr.DefaultHttpClient}, using the provided {@link @aspnet/signalr.ILogger} to log messages. */\r\n    function DefaultHttpClient(logger) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof XMLHttpRequest !== \"undefined\") {\r\n            _this.httpClient = new XhrHttpClient(logger);\r\n        }\r\n        else {\r\n            _this.httpClient = new NodeHttpClient(logger);\r\n        }\r\n        return _this;\r\n    }\r\n    /** @inheritDoc */\r\n    DefaultHttpClient.prototype.send = function (request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return this.httpClient.send(request);\r\n    };\r\n    DefaultHttpClient.prototype.getCookieString = function (url) {\r\n        return this.httpClient.getCookieString(url);\r\n    };\r\n    return DefaultHttpClient;\r\n}(HttpClient));\r\nexport { DefaultHttpClient };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nvar DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n/** @private */\r\nvar DefaultReconnectPolicy = /** @class */ (function () {\r\n    function DefaultReconnectPolicy(retryDelays) {\r\n        this.retryDelays = retryDelays !== undefined ? retryDelays.concat([null]) : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n    DefaultReconnectPolicy.prototype.nextRetryDelayInMilliseconds = function (previousRetryCount) {\r\n        return this.retryDelays[previousRetryCount];\r\n    };\r\n    return DefaultReconnectPolicy;\r\n}());\r\nexport { DefaultReconnectPolicy };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/** Error thrown when an HTTP request fails. */\r\nvar HttpError = /** @class */ (function (_super) {\r\n    __extends(HttpError, _super);\r\n    /** Constructs a new instance of {@link @aspnet/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    function HttpError(errorMessage, statusCode) {\r\n        var _newTarget = this.constructor;\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        _this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return HttpError;\r\n}(Error));\r\nexport { HttpError };\r\n/** Error thrown when a timeout elapses. */\r\nvar TimeoutError = /** @class */ (function (_super) {\r\n    __extends(TimeoutError, _super);\r\n    /** Constructs a new instance of {@link @aspnet/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    function TimeoutError(errorMessage) {\r\n        var _newTarget = this.constructor;\r\n        if (errorMessage === void 0) { errorMessage = \"A timeout occurred.\"; }\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return TimeoutError;\r\n}(Error));\r\nexport { TimeoutError };\r\n/** Error thrown when an action is aborted. */\r\nvar AbortError = /** @class */ (function (_super) {\r\n    __extends(AbortError, _super);\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    function AbortError(errorMessage) {\r\n        var _newTarget = this.constructor;\r\n        if (errorMessage === void 0) { errorMessage = \"An abort occurred.\"; }\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return AbortError;\r\n}(Error));\r\nexport { AbortError };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nvar HandshakeProtocol = /** @class */ (function () {\r\n    function HandshakeProtocol() {\r\n    }\r\n    // Handshake request is always JSON\r\n    HandshakeProtocol.prototype.writeHandshakeRequest = function (handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    };\r\n    HandshakeProtocol.prototype.parseHandshakeResponse = function (data) {\r\n        var responseMessage;\r\n        var messageData;\r\n        var remainingData;\r\n        if (isArrayBuffer(data) || (typeof Buffer !== \"undefined\" && data instanceof Buffer)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            var binaryData = new Uint8Array(data);\r\n            var separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            var textData = data;\r\n            var separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        var messages = TextMessageFormat.parse(messageData);\r\n        var response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        responseMessage = response;\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    };\r\n    return HandshakeProtocol;\r\n}());\r\nexport { HandshakeProtocol };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n/** Represents an HTTP response. */\r\nvar HttpResponse = /** @class */ (function () {\r\n    function HttpResponse(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n    return HttpResponse;\r\n}());\r\nexport { HttpResponse };\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nvar HttpClient = /** @class */ (function () {\r\n    function HttpClient() {\r\n    }\r\n    HttpClient.prototype.get = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"GET\", url: url }));\r\n    };\r\n    HttpClient.prototype.post = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"POST\", url: url }));\r\n    };\r\n    HttpClient.prototype.delete = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"DELETE\", url: url }));\r\n    };\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    HttpClient.prototype.getCookieString = function (url) {\r\n        return \"\";\r\n    };\r\n    return HttpClient;\r\n}());\r\nexport { HttpClient };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nvar MAX_REDIRECTS = 100;\r\nvar WebSocketModule = null;\r\nvar EventSourceModule = null;\r\nif (Platform.isNode && typeof require !== \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    var requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    WebSocketModule = requireFunc(\"ws\");\r\n    EventSourceModule = requireFunc(\"eventsource\");\r\n}\r\n/** @private */\r\nvar HttpConnection = /** @class */ (function () {\r\n    function HttpConnection(url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.features = {};\r\n        Arg.isRequired(url, \"url\");\r\n        this.logger = createLogger(options.logger);\r\n        this.baseUrl = this.resolveUrl(url);\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent || false;\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        }\r\n        else if (Platform.isNode && !options.WebSocket) {\r\n            if (WebSocketModule) {\r\n                options.WebSocket = WebSocketModule;\r\n            }\r\n        }\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        }\r\n        else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof EventSourceModule !== \"undefined\") {\r\n                options.EventSource = EventSourceModule;\r\n            }\r\n        }\r\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\r\n        this.connectionState = \"Disconnected\" /* Disconnected */;\r\n        this.connectionStarted = false;\r\n        this.options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    HttpConnection.prototype.start = function (transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var message, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        transferFormat = transferFormat || TransferFormat.Binary;\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.logger.log(LogLevel.Debug, \"Starting connection with transfer format '\" + TransferFormat[transferFormat] + \"'.\");\r\n                        if (this.connectionState !== \"Disconnected\" /* Disconnected */) {\r\n                            return [2 /*return*/, Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"))];\r\n                        }\r\n                        this.connectionState = \"Connecting \" /* Connecting */;\r\n                        this.startInternalPromise = this.startInternal(transferFormat);\r\n                        return [4 /*yield*/, this.startInternalPromise];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (!(this.connectionState === \"Disconnecting\" /* Disconnecting */)) return [3 /*break*/, 3];\r\n                        message = \"Failed to start the HttpConnection before stop() was called.\";\r\n                        this.logger.log(LogLevel.Error, message);\r\n                        // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n                        return [4 /*yield*/, this.stopPromise];\r\n                    case 2:\r\n                        // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n                        _a.sent();\r\n                        return [2 /*return*/, Promise.reject(new Error(message))];\r\n                    case 3:\r\n                        if (this.connectionState !== \"Connected\" /* Connected */) {\r\n                            message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n                            this.logger.log(LogLevel.Error, message);\r\n                            return [2 /*return*/, Promise.reject(new Error(message))];\r\n                        }\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        this.connectionStarted = true;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.send = function (data) {\r\n        if (this.connectionState !== \"Connected\" /* Connected */) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n        // Transport will not be null if state is connected\r\n        return this.transport.send(data);\r\n    };\r\n    HttpConnection.prototype.stop = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.connectionState === \"Disconnected\" /* Disconnected */) {\r\n                            this.logger.log(LogLevel.Debug, \"Call to HttpConnection.stop(\" + error + \") ignored because the connection is already in the disconnected state.\");\r\n                            return [2 /*return*/, Promise.resolve()];\r\n                        }\r\n                        if (this.connectionState === \"Disconnecting\" /* Disconnecting */) {\r\n                            this.logger.log(LogLevel.Debug, \"Call to HttpConnection.stop(\" + error + \") ignored because the connection is already in the disconnecting state.\");\r\n                            return [2 /*return*/, this.stopPromise];\r\n                        }\r\n                        this.connectionState = \"Disconnecting\" /* Disconnecting */;\r\n                        this.stopPromise = new Promise(function (resolve) {\r\n                            // Don't complete stop() until stopConnection() completes.\r\n                            _this.stopPromiseResolver = resolve;\r\n                        });\r\n                        // stopInternal should never throw so just observe it.\r\n                        return [4 /*yield*/, this.stopInternal(error)];\r\n                    case 1:\r\n                        // stopInternal should never throw so just observe it.\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.stopPromise];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.stopInternal = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_1, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Set error as soon as possible otherwise there is a race between\r\n                        // the transport closing and providing an error and the error from a close message\r\n                        // We would prefer the close message error.\r\n                        this.stopError = error;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.startInternalPromise];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        if (!this.transport) return [3 /*break*/, 9];\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, this.transport.stop()];\r\n                    case 6:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        e_2 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"HttpConnection.transport.stop() threw error '\" + e_2 + \"'.\");\r\n                        this.stopConnection();\r\n                        return [3 /*break*/, 8];\r\n                    case 8:\r\n                        this.transport = undefined;\r\n                        return [3 /*break*/, 10];\r\n                    case 9:\r\n                        this.logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n                        this.stopConnection();\r\n                        _a.label = 10;\r\n                    case 10: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.startInternal = function (transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, negotiateResponse, redirects, _loop_1, this_1, e_3;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this.baseUrl;\r\n                        this.accessTokenFactory = this.options.accessTokenFactory;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 12, , 13]);\r\n                        if (!this.options.skipNegotiation) return [3 /*break*/, 5];\r\n                        if (!(this.options.transport === HttpTransportType.WebSockets)) return [3 /*break*/, 3];\r\n                        // No need to add a connection ID in this case\r\n                        this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        return [4 /*yield*/, this.transport.connect(url, transferFormat)];\r\n                    case 2:\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3: throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                    case 4: return [3 /*break*/, 11];\r\n                    case 5:\r\n                        negotiateResponse = null;\r\n                        redirects = 0;\r\n                        _loop_1 = function () {\r\n                            var accessToken_1;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, this_1.getNegotiationResponse(url)];\r\n                                    case 1:\r\n                                        negotiateResponse = _a.sent();\r\n                                        // the user tries to stop the connection when it is being started\r\n                                        if (this_1.connectionState === \"Disconnecting\" /* Disconnecting */ || this_1.connectionState === \"Disconnected\" /* Disconnected */) {\r\n                                            throw new Error(\"The connection was stopped during negotiation.\");\r\n                                        }\r\n                                        if (negotiateResponse.error) {\r\n                                            throw new Error(negotiateResponse.error);\r\n                                        }\r\n                                        if (negotiateResponse.ProtocolVersion) {\r\n                                            throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                                        }\r\n                                        if (negotiateResponse.url) {\r\n                                            url = negotiateResponse.url;\r\n                                        }\r\n                                        if (negotiateResponse.accessToken) {\r\n                                            accessToken_1 = negotiateResponse.accessToken;\r\n                                            this_1.accessTokenFactory = function () { return accessToken_1; };\r\n                                        }\r\n                                        redirects++;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        };\r\n                        this_1 = this;\r\n                        _a.label = 6;\r\n                    case 6: return [5 /*yield**/, _loop_1()];\r\n                    case 7:\r\n                        _a.sent();\r\n                        _a.label = 8;\r\n                    case 8:\r\n                        if (negotiateResponse.url && redirects < MAX_REDIRECTS) return [3 /*break*/, 6];\r\n                        _a.label = 9;\r\n                    case 9:\r\n                        if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                            throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                        }\r\n                        this.connectionId = negotiateResponse.connectionId;\r\n                        return [4 /*yield*/, this.createTransport(url, this.options.transport, negotiateResponse, transferFormat)];\r\n                    case 10:\r\n                        _a.sent();\r\n                        _a.label = 11;\r\n                    case 11:\r\n                        if (this.transport instanceof LongPollingTransport) {\r\n                            this.features.inherentKeepAlive = true;\r\n                        }\r\n                        this.transport.onreceive = this.onreceive;\r\n                        this.transport.onclose = function (e) { return _this.stopConnection(e); };\r\n                        if (this.connectionState === \"Connecting \" /* Connecting */) {\r\n                            // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                            // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                            this.logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                            this.connectionState = \"Connected\" /* Connected */;\r\n                        }\r\n                        return [3 /*break*/, 13];\r\n                    case 12:\r\n                        e_3 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e_3);\r\n                        this.connectionState = \"Disconnected\" /* Disconnected */;\r\n                        this.transport = undefined;\r\n                        return [2 /*return*/, Promise.reject(e_3)];\r\n                    case 13: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.getNegotiationResponse = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, headers, token, negotiateUrl, response, e_4;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _b.sent();\r\n                        if (token) {\r\n                            headers = (_a = {},\r\n                                _a[\"Authorization\"] = \"Bearer \" + token,\r\n                                _a);\r\n                        }\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        negotiateUrl = this.resolveNegotiateUrl(url);\r\n                        this.logger.log(LogLevel.Debug, \"Sending negotiation request: \" + negotiateUrl + \".\");\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        _b.trys.push([3, 5, , 6]);\r\n                        return [4 /*yield*/, this.httpClient.post(negotiateUrl, {\r\n                                content: \"\",\r\n                                headers: headers,\r\n                            })];\r\n                    case 4:\r\n                        response = _b.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            return [2 /*return*/, Promise.reject(new Error(\"Unexpected status code returned from negotiate \" + response.statusCode))];\r\n                        }\r\n                        return [2 /*return*/, JSON.parse(response.content)];\r\n                    case 5:\r\n                        e_4 = _b.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e_4);\r\n                        return [2 /*return*/, Promise.reject(e_4)];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.createConnectUrl = function (url, connectionId) {\r\n        if (!connectionId) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + (\"id=\" + connectionId);\r\n    };\r\n    HttpConnection.prototype.createTransport = function (url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connectUrl, transportExceptions, transports, _i, transports_1, endpoint, transport, ex_1, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        if (!this.isITransport(requestedTransport)) return [3 /*break*/, 2];\r\n                        this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n                        this.transport = requestedTransport;\r\n                        return [4 /*yield*/, this.transport.connect(connectUrl, requestedTransferFormat)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 2:\r\n                        transportExceptions = [];\r\n                        transports = negotiateResponse.availableTransports || [];\r\n                        _i = 0, transports_1 = transports;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (!(_i < transports_1.length)) return [3 /*break*/, 11];\r\n                        endpoint = transports_1[_i];\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        _a.trys.push([4, 9, , 10]);\r\n                        transport = this.resolveTransport(endpoint, requestedTransport, requestedTransferFormat);\r\n                        if (!(typeof transport === \"number\")) return [3 /*break*/, 8];\r\n                        this.transport = this.constructTransport(transport);\r\n                        if (!!negotiateResponse.connectionId) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.getNegotiationResponse(url)];\r\n                    case 5:\r\n                        negotiateResponse = _a.sent();\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        _a.label = 6;\r\n                    case 6: return [4 /*yield*/, this.transport.connect(connectUrl, requestedTransferFormat)];\r\n                    case 7:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 8: return [3 /*break*/, 10];\r\n                    case 9:\r\n                        ex_1 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the transport '\" + endpoint.transport + \"': \" + ex_1);\r\n                        negotiateResponse.connectionId = undefined;\r\n                        transportExceptions.push(endpoint.transport + \" failed: \" + ex_1);\r\n                        if (this.connectionState !== \"Connecting \" /* Connecting */) {\r\n                            message = \"Failed to select transport before stop() was called.\";\r\n                            this.logger.log(LogLevel.Debug, message);\r\n                            return [2 /*return*/, Promise.reject(new Error(message))];\r\n                        }\r\n                        return [3 /*break*/, 10];\r\n                    case 10:\r\n                        _i++;\r\n                        return [3 /*break*/, 3];\r\n                    case 11:\r\n                        if (transportExceptions.length > 0) {\r\n                            return [2 /*return*/, Promise.reject(new Error(\"Unable to connect to the server with any of the available transports. \" + transportExceptions.join(\" \")))];\r\n                        }\r\n                        return [2 /*return*/, Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"))];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.constructTransport = function (transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this.options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.WebSocket);\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this.options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.EventSource);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false);\r\n            default:\r\n                throw new Error(\"Unknown transport: \" + transport + \".\");\r\n        }\r\n    };\r\n    HttpConnection.prototype.resolveTransport = function (endpoint, requestedTransport, requestedTransferFormat) {\r\n        var transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, \"Skipping transport '\" + endpoint.transport + \"' because it is not supported by this client.\");\r\n        }\r\n        else {\r\n            var transferFormats = endpoint.transferFormats.map(function (s) { return TransferFormat[s]; });\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this.options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this.options.EventSource)) {\r\n                        this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it is not supported in your environment.'\");\r\n                        throw new Error(\"'\" + HttpTransportType[transport] + \"' is not supported in your environment.\");\r\n                    }\r\n                    else {\r\n                        this.logger.log(LogLevel.Debug, \"Selecting transport '\" + HttpTransportType[transport] + \"'.\");\r\n                        return transport;\r\n                    }\r\n                }\r\n                else {\r\n                    this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it does not support the requested transfer format '\" + TransferFormat[requestedTransferFormat] + \"'.\");\r\n                    throw new Error(\"'\" + HttpTransportType[transport] + \"' does not support \" + TransferFormat[requestedTransferFormat] + \".\");\r\n                }\r\n            }\r\n            else {\r\n                this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it was disabled by the client.\");\r\n                throw new Error(\"'\" + HttpTransportType[transport] + \"' is disabled by the client.\");\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    HttpConnection.prototype.isITransport = function (transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    };\r\n    HttpConnection.prototype.stopConnection = function (error) {\r\n        this.logger.log(LogLevel.Debug, \"HttpConnection.stopConnection(\" + error + \") called while in state \" + this.connectionState + \".\");\r\n        this.transport = undefined;\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this.stopError || error;\r\n        this.stopError = undefined;\r\n        if (this.connectionState === \"Disconnected\" /* Disconnected */) {\r\n            this.logger.log(LogLevel.Debug, \"Call to HttpConnection.stopConnection(\" + error + \") was ignored because the connection is already in the disconnected state.\");\r\n            return;\r\n        }\r\n        if (this.connectionState === \"Connecting \" /* Connecting */) {\r\n            this.logger.log(LogLevel.Warning, \"Call to HttpConnection.stopConnection(\" + error + \") was ignored because the connection hasn't yet left the in the connecting state.\");\r\n            return;\r\n        }\r\n        if (this.connectionState === \"Disconnecting\" /* Disconnecting */) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this.stopPromiseResolver();\r\n        }\r\n        if (error) {\r\n            this.logger.log(LogLevel.Error, \"Connection disconnected with error '\" + error + \"'.\");\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n        this.connectionId = undefined;\r\n        this.connectionState = \"Disconnected\" /* Disconnected */;\r\n        if (this.onclose && this.connectionStarted) {\r\n            this.connectionStarted = false;\r\n            try {\r\n                this.onclose(error);\r\n            }\r\n            catch (e) {\r\n                this.logger.log(LogLevel.Error, \"HttpConnection.onclose(\" + error + \") threw error '\" + e + \"'.\");\r\n            }\r\n        }\r\n    };\r\n    HttpConnection.prototype.resolveUrl = function (url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (!Platform.isBrowser || !window.document) {\r\n            throw new Error(\"Cannot resolve '\" + url + \"'.\");\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative  path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        var aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this.logger.log(LogLevel.Information, \"Normalizing '\" + url + \"' to '\" + aTag.href + \"'.\");\r\n        return aTag.href;\r\n    };\r\n    HttpConnection.prototype.resolveNegotiateUrl = function (url) {\r\n        var index = url.indexOf(\"?\");\r\n        var negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n        return negotiateUrl;\r\n    };\r\n    return HttpConnection;\r\n}());\r\nexport { HttpConnection };\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg } from \"./Utils\";\r\nvar DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\nvar DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport var HubConnectionState;\r\n(function (HubConnectionState) {\r\n    /** The hub connection is disconnected. */\r\n    HubConnectionState[\"Disconnected\"] = \"Disconnected\";\r\n    /** The hub connection is connecting. */\r\n    HubConnectionState[\"Connecting\"] = \"Connecting\";\r\n    /** The hub connection is connected. */\r\n    HubConnectionState[\"Connected\"] = \"Connected\";\r\n    /** The hub connection is disconnecting. */\r\n    HubConnectionState[\"Disconnecting\"] = \"Disconnecting\";\r\n    /** The hub connection is reconnecting. */\r\n    HubConnectionState[\"Reconnecting\"] = \"Reconnecting\";\r\n})(HubConnectionState || (HubConnectionState = {}));\r\n/** Represents a connection to a SignalR Hub. */\r\nvar HubConnection = /** @class */ (function () {\r\n    function HubConnection(connection, logger, protocol, reconnectPolicy) {\r\n        var _this = this;\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.reconnectPolicy = reconnectPolicy;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = function (data) { return _this.processIncomingData(data); };\r\n        this.connection.onclose = function (error) { return _this.connectionClosed(error); };\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.reconnectingCallbacks = [];\r\n        this.reconnectedCallbacks = [];\r\n        this.invocationId = 0;\r\n        this.receivedHandshakeResponse = false;\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n        this.cachedPingMessage = this.protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    HubConnection.create = function (connection, logger, protocol, reconnectPolicy) {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\r\n    };\r\n    Object.defineProperty(HubConnection.prototype, \"state\", {\r\n        /** Indicates the state of the {@link HubConnection} to the server. */\r\n        get: function () {\r\n            return this.connectionState;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HubConnection.prototype, \"connectionId\", {\r\n        /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n         *  in the disconnected state or if the negotiation step was skipped.\r\n         */\r\n        get: function () {\r\n            return this.connection ? (this.connection.connectionId || null) : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.start = function () {\r\n        this.startPromise = this.startWithStateTransitions();\r\n        return this.startPromise;\r\n    };\r\n    HubConnection.prototype.startWithStateTransitions = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.connectionState !== HubConnectionState.Disconnected) {\r\n                            return [2 /*return*/, Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"))];\r\n                        }\r\n                        this.connectionState = HubConnectionState.Connecting;\r\n                        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.startInternal()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.connectionState = HubConnectionState.Connected;\r\n                        this.connectionStarted = true;\r\n                        this.logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        this.connectionState = HubConnectionState.Disconnected;\r\n                        this.logger.log(LogLevel.Debug, \"HubConnection failed to start successfully because of error '\" + e_1 + \"'.\");\r\n                        return [2 /*return*/, Promise.reject(e_1)];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HubConnection.prototype.startInternal = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var handshakePromise, handshakeRequest, e_2;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.stopDuringStartError = undefined;\r\n                        this.receivedHandshakeResponse = false;\r\n                        handshakePromise = new Promise(function (resolve, reject) {\r\n                            _this.handshakeResolver = resolve;\r\n                            _this.handshakeRejecter = reject;\r\n                        });\r\n                        return [4 /*yield*/, this.connection.start(this.protocol.transferFormat)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 5, , 7]);\r\n                        handshakeRequest = {\r\n                            protocol: this.protocol.name,\r\n                            version: this.protocol.version,\r\n                        };\r\n                        this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n                        return [4 /*yield*/, this.sendMessage(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest))];\r\n                    case 3:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Information, \"Using HubProtocol '\" + this.protocol.name + \"'.\");\r\n                        // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n                        this.cleanupTimeout();\r\n                        this.resetTimeoutPeriod();\r\n                        this.resetKeepAliveInterval();\r\n                        return [4 /*yield*/, handshakePromise];\r\n                    case 4:\r\n                        _a.sent();\r\n                        // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n                        // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n                        // and the connection was closed.\r\n                        if (this.stopDuringStartError) {\r\n                            // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                            // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                            // will cause the calling continuation to get scheduled to run later.\r\n                            throw this.stopDuringStartError;\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 5:\r\n                        e_2 = _a.sent();\r\n                        this.logger.log(LogLevel.Debug, \"Hub handshake failed with error '\" + e_2 + \"' during start(). Stopping HubConnection.\");\r\n                        this.cleanupTimeout();\r\n                        this.cleanupPingTimer();\r\n                        // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n                        // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n                        return [4 /*yield*/, this.connection.stop(e_2)];\r\n                    case 6:\r\n                        // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n                        // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n                        _a.sent();\r\n                        throw e_2;\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.stop = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var startPromise, e_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        startPromise = this.startPromise;\r\n                        this.stopPromise = this.stopInternal();\r\n                        return [4 /*yield*/, this.stopPromise];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        // Awaiting undefined continues immediately\r\n                        return [4 /*yield*/, startPromise];\r\n                    case 3:\r\n                        // Awaiting undefined continues immediately\r\n                        _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_3 = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HubConnection.prototype.stopInternal = function (error) {\r\n        if (this.connectionState === HubConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, \"Call to HubConnection.stop(\" + error + \") ignored because it is already in the disconnected state.\");\r\n            return Promise.resolve();\r\n        }\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, \"Call to HttpConnection.stop(\" + error + \") ignored because the connection is already in the disconnecting state.\");\r\n            return this.stopPromise;\r\n        }\r\n        this.connectionState = HubConnectionState.Disconnecting;\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        if (this.reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this.logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n            clearTimeout(this.reconnectDelayHandle);\r\n            this.reconnectDelayHandle = undefined;\r\n            this.completeClose();\r\n            return Promise.resolve();\r\n        }\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        this.stopDuringStartError = error || new Error(\"The connection was stopped before the hub handshake could complete.\");\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    };\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    HubConnection.prototype.stream = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var _a = this.replaceStreamingParams(args), streams = _a[0], streamIds = _a[1];\r\n        var invocationDescriptor = this.createStreamInvocation(methodName, args, streamIds);\r\n        var promiseQueue;\r\n        var subject = new Subject();\r\n        subject.cancelCallback = function () {\r\n            var cancelInvocation = _this.createCancelInvocation(invocationDescriptor.invocationId);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n            return promiseQueue.then(function () {\r\n                return _this.sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n        this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    }\r\n                    else {\r\n                        subject.complete();\r\n                    }\r\n                }\r\n                else {\r\n                    subject.next((invocationEvent.item));\r\n                }\r\n            }\r\n        };\r\n        promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n            .catch(function (e) {\r\n            subject.error(e);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        this.launchStreams(streams, promiseQueue);\r\n        return subject;\r\n    };\r\n    HubConnection.prototype.sendMessage = function (message) {\r\n        this.resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    };\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    HubConnection.prototype.sendWithProtocol = function (message) {\r\n        return this.sendMessage(this.protocol.writeMessage(message));\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.send = function (methodName) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var _a = this.replaceStreamingParams(args), streams = _a[0], streamIds = _a[1];\r\n        var sendPromise = this.sendWithProtocol(this.createInvocation(methodName, args, true, streamIds));\r\n        this.launchStreams(streams, sendPromise);\r\n        return sendPromise;\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    HubConnection.prototype.invoke = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var _a = this.replaceStreamingParams(args), streams = _a[0], streamIds = _a[1];\r\n        var invocationDescriptor = this.createInvocation(methodName, args, false, streamIds);\r\n        var p = new Promise(function (resolve, reject) {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            _this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        }\r\n                        else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(new Error(\"Unexpected message type: \" + invocationEvent.type));\r\n                    }\r\n                }\r\n            };\r\n            var promiseQueue = _this.sendWithProtocol(invocationDescriptor)\r\n                .catch(function (e) {\r\n                reject(e);\r\n                // invocationId will always have a value for a non-blocking invocation\r\n                delete _this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n            _this.launchStreams(streams, promiseQueue);\r\n        });\r\n        return p;\r\n    };\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    HubConnection.prototype.on = function (methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this.methods[methodName].push(newMethod);\r\n    };\r\n    HubConnection.prototype.off = function (methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        var handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            var removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this.methods[methodName];\r\n        }\r\n    };\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    HubConnection.prototype.onclose = function (callback) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    };\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    HubConnection.prototype.onreconnecting = function (callback) {\r\n        if (callback) {\r\n            this.reconnectingCallbacks.push(callback);\r\n        }\r\n    };\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    HubConnection.prototype.onreconnected = function (callback) {\r\n        if (callback) {\r\n            this.reconnectedCallbacks.push(callback);\r\n        }\r\n    };\r\n    HubConnection.prototype.processIncomingData = function (data) {\r\n        this.cleanupTimeout();\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            var messages = this.protocol.parseMessages(data, this.logger);\r\n            for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n                var message = messages_1[_i];\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        var callback = this.callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        // We don't want to wait on the stop itself.\r\n                        this.stopPromise = this.stopInternal(message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined);\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, \"Invalid message type: \" + message.type + \".\");\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this.resetTimeoutPeriod();\r\n    };\r\n    HubConnection.prototype.processHandshakeResponse = function (data) {\r\n        var _a;\r\n        var responseMessage;\r\n        var remainingData;\r\n        try {\r\n            _a = this.handshakeProtocol.parseHandshakeResponse(data), remainingData = _a[0], responseMessage = _a[1];\r\n        }\r\n        catch (e) {\r\n            var message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n            var error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            var message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n            var error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        this.handshakeResolver();\r\n        return remainingData;\r\n    };\r\n    HubConnection.prototype.resetKeepAliveInterval = function () {\r\n        var _this = this;\r\n        this.cleanupPingTimer();\r\n        this.pingServerHandle = setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!(this.connectionState === HubConnectionState.Connected)) return [3 /*break*/, 4];\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.sendMessage(this.cachedPingMessage)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        // We don't care about the error. It should be seen elsewhere in the client.\r\n                        // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                        this.cleanupPingTimer();\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); }, this.keepAliveIntervalInMilliseconds);\r\n    };\r\n    HubConnection.prototype.resetTimeoutPeriod = function () {\r\n        var _this = this;\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(function () { return _this.serverTimeout(); }, this.serverTimeoutInMilliseconds);\r\n        }\r\n    };\r\n    HubConnection.prototype.serverTimeout = function () {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // tslint:disable-next-line:no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    };\r\n    HubConnection.prototype.invokeClientMethod = function (invocationMessage) {\r\n        var _this = this;\r\n        var methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            try {\r\n                methods.forEach(function (m) { return m.apply(_this, invocationMessage.arguments); });\r\n            }\r\n            catch (e) {\r\n                this.logger.log(LogLevel.Error, \"A callback for the method \" + invocationMessage.target.toLowerCase() + \" threw error '\" + e + \"'.\");\r\n            }\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                var message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n                // We don't want to wait on the stop itself.\r\n                this.stopPromise = this.stopInternal(new Error(message));\r\n            }\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Warning, \"No client method with the name '\" + invocationMessage.target + \"' found.\");\r\n        }\r\n    };\r\n    HubConnection.prototype.connectionClosed = function (error) {\r\n        this.logger.log(LogLevel.Debug, \"HubConnection.connectionClosed(\" + error + \") called while in state \" + this.connectionState + \".\");\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this.stopDuringStartError = this.stopDuringStartError || error || new Error(\"The underlying connection was closed before the hub handshake could complete.\");\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this.handshakeResolver) {\r\n            this.handshakeResolver();\r\n        }\r\n        this.cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.completeClose(error);\r\n        }\r\n        else if (this.connectionState === HubConnectionState.Connected && this.reconnectPolicy) {\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.reconnect(error);\r\n        }\r\n        else if (this.connectionState === HubConnectionState.Connected) {\r\n            this.completeClose(error);\r\n        }\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    };\r\n    HubConnection.prototype.completeClose = function (error) {\r\n        var _this = this;\r\n        if (this.connectionStarted) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.connectionStarted = false;\r\n            try {\r\n                this.closedCallbacks.forEach(function (c) { return c.apply(_this, [error]); });\r\n            }\r\n            catch (e) {\r\n                this.logger.log(LogLevel.Error, \"An onclose callback called with error '\" + error + \"' threw error '\" + e + \"'.\");\r\n            }\r\n        }\r\n    };\r\n    HubConnection.prototype.reconnect = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var reconnectStartTime, previousReconnectAttempts, nextRetryDelay, e_4;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        reconnectStartTime = Date.now();\r\n                        previousReconnectAttempts = 0;\r\n                        nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, 0);\r\n                        if (nextRetryDelay === null) {\r\n                            this.logger.log(LogLevel.Debug, \"Connection not reconnecting because the IReconnectPolicy returned null on the first reconnect attempt.\");\r\n                            this.completeClose(error);\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this.connectionState = HubConnectionState.Reconnecting;\r\n                        if (error) {\r\n                            this.logger.log(LogLevel.Information, \"Connection reconnecting because of error '\" + error + \"'.\");\r\n                        }\r\n                        else {\r\n                            this.logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n                        }\r\n                        if (this.onreconnecting) {\r\n                            try {\r\n                                this.reconnectingCallbacks.forEach(function (c) { return c.apply(_this, [error]); });\r\n                            }\r\n                            catch (e) {\r\n                                this.logger.log(LogLevel.Error, \"An onreconnecting callback called with error '\" + error + \"' threw error '\" + e + \"'.\");\r\n                            }\r\n                            // Exit early if an onreconnecting callback called connection.stop().\r\n                            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                                return [2 /*return*/];\r\n                            }\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(nextRetryDelay !== null)) return [3 /*break*/, 7];\r\n                        this.logger.log(LogLevel.Information, \"Reconnect attempt number \" + previousReconnectAttempts + \" will start in \" + nextRetryDelay + \" ms.\");\r\n                        return [4 /*yield*/, new Promise(function (resolve) {\r\n                                _this.reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.reconnectDelayHandle = undefined;\r\n                        if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                            this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                            return [2 /*return*/];\r\n                        }\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 6]);\r\n                        return [4 /*yield*/, this.startInternal()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.connectionState = HubConnectionState.Connected;\r\n                        this.logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n                        if (this.onreconnected) {\r\n                            try {\r\n                                this.reconnectedCallbacks.forEach(function (c) { return c.apply(_this, [_this.connection.connectionId]); });\r\n                            }\r\n                            catch (e) {\r\n                                this.logger.log(LogLevel.Error, \"An onreconnected callback called with connectionId '\" + this.connection.connectionId + \"; threw error '\" + e + \"'.\");\r\n                            }\r\n                        }\r\n                        return [2 /*return*/];\r\n                    case 5:\r\n                        e_4 = _a.sent();\r\n                        this.logger.log(LogLevel.Information, \"Reconnect attempt failed because of error '\" + e_4 + \"'.\");\r\n                        if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                            this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect attempt. Done reconnecting.\");\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 6:\r\n                        nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime);\r\n                        return [3 /*break*/, 1];\r\n                    case 7:\r\n                        this.logger.log(LogLevel.Information, \"Reconnect retries have been exhausted after \" + (Date.now() - reconnectStartTime) + \" ms and \" + previousReconnectAttempts + \" failed attempts. Connection disconnecting.\");\r\n                        this.completeClose();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HubConnection.prototype.getNextRetryDelay = function (previousRetryCount, elapsedMilliseconds) {\r\n        try {\r\n            return this.reconnectPolicy.nextRetryDelayInMilliseconds(previousRetryCount, elapsedMilliseconds);\r\n        }\r\n        catch (e) {\r\n            this.logger.log(LogLevel.Error, \"IReconnectPolicy.nextRetryDelayInMilliseconds(\" + previousRetryCount + \", \" + elapsedMilliseconds + \") threw error '\" + e + \"'.\");\r\n            return null;\r\n        }\r\n    };\r\n    HubConnection.prototype.cancelCallbacksWithError = function (error) {\r\n        var callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach(function (key) {\r\n            var callback = callbacks[key];\r\n            callback(null, error);\r\n        });\r\n    };\r\n    HubConnection.prototype.cleanupPingTimer = function () {\r\n        if (this.pingServerHandle) {\r\n            clearTimeout(this.pingServerHandle);\r\n        }\r\n    };\r\n    HubConnection.prototype.cleanupTimeout = function () {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    };\r\n    HubConnection.prototype.createInvocation = function (methodName, args, nonblocking, streamIds) {\r\n        if (nonblocking) {\r\n            return {\r\n                arguments: args,\r\n                streamIds: streamIds,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n        else {\r\n            var invocationId = this.invocationId;\r\n            this.invocationId++;\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds: streamIds,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n    };\r\n    HubConnection.prototype.launchStreams = function (streams, promiseQueue) {\r\n        var _this = this;\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n        var _loop_1 = function (streamId) {\r\n            streams[streamId].subscribe({\r\n                complete: function () {\r\n                    promiseQueue = promiseQueue.then(function () { return _this.sendWithProtocol(_this.createCompletionMessage(streamId)); });\r\n                },\r\n                error: function (err) {\r\n                    var message;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    }\r\n                    else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    }\r\n                    else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n                    promiseQueue = promiseQueue.then(function () { return _this.sendWithProtocol(_this.createCompletionMessage(streamId, message)); });\r\n                },\r\n                next: function (item) {\r\n                    promiseQueue = promiseQueue.then(function () { return _this.sendWithProtocol(_this.createStreamItemMessage(streamId, item)); });\r\n                },\r\n            });\r\n        };\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // tslint:disable-next-line:forin\r\n        for (var streamId in streams) {\r\n            _loop_1(streamId);\r\n        }\r\n    };\r\n    HubConnection.prototype.replaceStreamingParams = function (args) {\r\n        var streams = [];\r\n        var streamIds = [];\r\n        for (var i = 0; i < args.length; i++) {\r\n            var argument = args[i];\r\n            if (this.isObservable(argument)) {\r\n                var streamId = this.invocationId;\r\n                this.invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n        return [streams, streamIds];\r\n    };\r\n    HubConnection.prototype.isObservable = function (arg) {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg.subscribe && typeof arg.subscribe === \"function\";\r\n    };\r\n    HubConnection.prototype.createStreamInvocation = function (methodName, args, streamIds) {\r\n        var invocationId = this.invocationId;\r\n        this.invocationId++;\r\n        return {\r\n            arguments: args,\r\n            invocationId: invocationId.toString(),\r\n            streamIds: streamIds,\r\n            target: methodName,\r\n            type: MessageType.StreamInvocation,\r\n        };\r\n    };\r\n    HubConnection.prototype.createCancelInvocation = function (id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    };\r\n    HubConnection.prototype.createStreamItemMessage = function (id, item) {\r\n        return {\r\n            invocationId: id,\r\n            item: item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    };\r\n    HubConnection.prototype.createCompletionMessage = function (id, error, result) {\r\n        if (error) {\r\n            return {\r\n                error: error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n        return {\r\n            invocationId: id,\r\n            result: result,\r\n            type: MessageType.Completion,\r\n        };\r\n    };\r\n    return HubConnection;\r\n}());\r\nexport { HubConnection };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n// tslint:disable:object-literal-sort-keys\r\nvar LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\nfunction parseLogLevel(name) {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    var mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    }\r\n    else {\r\n        throw new Error(\"Unknown log level: \" + name);\r\n    }\r\n}\r\n/** A builder for configuring {@link @aspnet/signalr.HubConnection} instances. */\r\nvar HubConnectionBuilder = /** @class */ (function () {\r\n    function HubConnectionBuilder() {\r\n    }\r\n    HubConnectionBuilder.prototype.configureLogging = function (logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else if (typeof logging === \"string\") {\r\n            var logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    };\r\n    HubConnectionBuilder.prototype.withUrl = function (url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = __assign({}, this.httpConnectionOptions, transportTypeOrOptions);\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = __assign({}, this.httpConnectionOptions, { transport: transportTypeOrOptions });\r\n        }\r\n        return this;\r\n    };\r\n    /** Configures the {@link @aspnet/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @aspnet/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    HubConnectionBuilder.prototype.withHubProtocol = function (protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    };\r\n    HubConnectionBuilder.prototype.withAutomaticReconnect = function (retryDelaysOrReconnectPolicy) {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        }\r\n        else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        }\r\n        else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n        return this;\r\n    };\r\n    /** Creates a {@link @aspnet/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @aspnet/signalr.HubConnection}.\r\n     */\r\n    HubConnectionBuilder.prototype.build = function () {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        var httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        var connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy);\r\n    };\r\n    return HubConnectionBuilder;\r\n}());\r\nexport { HubConnectionBuilder };\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @aspnet/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @aspnet/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @aspnet/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @aspnet/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @aspnet/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @aspnet/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @aspnet/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n})(MessageType || (MessageType = {}));\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nvar JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nvar JsonHubProtocol = /** @class */ (function () {\r\n    function JsonHubProtocol() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 1;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @aspnet/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    JsonHubProtocol.prototype.parseMessages = function (input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        var messages = TextMessageFormat.parse(input);\r\n        var hubMessages = [];\r\n        for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n            var message = messages_1[_i];\r\n            var parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    };\r\n    /** Writes the specified {@link @aspnet/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    JsonHubProtocol.prototype.writeMessage = function (message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    };\r\n    JsonHubProtocol.prototype.isInvocationMessage = function (message) {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    };\r\n    JsonHubProtocol.prototype.isStreamItemMessage = function (message) {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    };\r\n    JsonHubProtocol.prototype.isCompletionMessage = function (message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    };\r\n    JsonHubProtocol.prototype.assertNotEmptyString = function (value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    };\r\n    return JsonHubProtocol;\r\n}());\r\nexport { JsonHubProtocol };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nvar NullLogger = /** @class */ (function () {\r\n    function NullLogger() {\r\n    }\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    NullLogger.prototype.log = function (_logLevel, _message) {\r\n    };\r\n    /** The singleton instance of the {@link @aspnet/signalr.NullLogger}. */\r\n    NullLogger.instance = new NullLogger();\r\n    return NullLogger;\r\n}());\r\nexport { NullLogger };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nvar LongPollingTransport = /** @class */ (function () {\r\n    function LongPollingTransport(httpClient, accessTokenFactory, logger, logMessageContent) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = logMessageContent;\r\n        this.running = false;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    Object.defineProperty(LongPollingTransport.prototype, \"pollAborted\", {\r\n        // This is an internal type, not exported from 'index' so this is really just internal.\r\n        get: function () {\r\n            return this.pollAbort.aborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LongPollingTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pollOptions, token, pollUrl, response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.url = url;\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n                        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n                        if (transferFormat === TransferFormat.Binary &&\r\n                            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n                            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n                        }\r\n                        pollOptions = {\r\n                            abortSignal: this.pollAbort.signal,\r\n                            headers: {},\r\n                            timeout: 100000,\r\n                        };\r\n                        if (transferFormat === TransferFormat.Binary) {\r\n                            pollOptions.responseType = \"arraybuffer\";\r\n                        }\r\n                        return [4 /*yield*/, this.getAccessToken()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        pollUrl = url + \"&_=\" + Date.now();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl + \".\");\r\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode + \".\");\r\n                            // Mark running as false so that the poll immediately ends and runs the close logic\r\n                            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            this.running = true;\r\n                        }\r\n                        this.receiving = this.poll(this.url, pollOptions);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.getAccessToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.updateHeaderToken = function (request, token) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = \"Bearer \" + token;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    };\r\n    LongPollingTransport.prototype.poll = function (url, pollOptions) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token, pollUrl, response, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, , 8, 9]);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!this.running) return [3 /*break*/, 7];\r\n                        return [4 /*yield*/, this.getAccessToken()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 6]);\r\n                        pollUrl = url + \"&_=\" + Date.now();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl + \".\");\r\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\r\n                    case 4:\r\n                        response = _a.sent();\r\n                        if (response.statusCode === 204) {\r\n                            this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n                            this.running = false;\r\n                        }\r\n                        else if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode + \".\");\r\n                            // Unexpected status code\r\n                            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            // Process the response\r\n                            if (response.content) {\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) data received. \" + getDataDetail(response.content, this.logMessageContent) + \".\");\r\n                                if (this.onreceive) {\r\n                                    this.onreceive(response.content);\r\n                                }\r\n                            }\r\n                            else {\r\n                                // This is another way timeout manifest.\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        e_1 = _a.sent();\r\n                        if (!this.running) {\r\n                            // Log but disregard errors that occur after stopping\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll errored after shutdown: \" + e_1.message);\r\n                        }\r\n                        else {\r\n                            if (e_1 instanceof TimeoutError) {\r\n                                // Ignore timeouts and reissue the poll.\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                            }\r\n                            else {\r\n                                // Close the connection with the error as the result.\r\n                                this.closeError = e_1;\r\n                                this.running = false;\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [3 /*break*/, 1];\r\n                    case 7: return [3 /*break*/, 9];\r\n                    case 8:\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n                        // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n                        // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n                        if (!this.pollAborted) {\r\n                            this.raiseOnClose();\r\n                        }\r\n                        return [7 /*endfinally*/];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.send = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.running) {\r\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\r\n                }\r\n                return [2 /*return*/, sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.stop = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var deleteOptions, token;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n                        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n                        this.running = false;\r\n                        this.pollAbort.abort();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, , 5, 6]);\r\n                        return [4 /*yield*/, this.receiving];\r\n                    case 2:\r\n                        _a.sent();\r\n                        // Send DELETE to clean up long polling on the server\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) sending DELETE request to \" + this.url + \".\");\r\n                        deleteOptions = {\r\n                            headers: {},\r\n                        };\r\n                        return [4 /*yield*/, this.getAccessToken()];\r\n                    case 3:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(deleteOptions, token);\r\n                        return [4 /*yield*/, this.httpClient.delete(this.url, deleteOptions)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n                        // Raise close event here instead of in polling\r\n                        // It needs to happen after the DELETE request is sent\r\n                        this.raiseOnClose();\r\n                        return [7 /*endfinally*/];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.raiseOnClose = function () {\r\n        if (this.onclose) {\r\n            var logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this.closeError) {\r\n                logMessage += \" Error: \" + this.closeError;\r\n            }\r\n            this.logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this.closeError);\r\n        }\r\n    };\r\n    return LongPollingTransport;\r\n}());\r\nexport { LongPollingTransport };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\nvar requestModule;\r\nif (typeof XMLHttpRequest === \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    var requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    requestModule = requireFunc(\"request\");\r\n}\r\nvar NodeHttpClient = /** @class */ (function (_super) {\r\n    __extends(NodeHttpClient, _super);\r\n    function NodeHttpClient(logger) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof requestModule === \"undefined\") {\r\n            throw new Error(\"The 'request' module could not be loaded.\");\r\n        }\r\n        _this.logger = logger;\r\n        _this.cookieJar = requestModule.jar();\r\n        _this.request = requestModule.defaults({ jar: _this.cookieJar });\r\n        return _this;\r\n    }\r\n    NodeHttpClient.prototype.send = function (httpRequest) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var requestBody;\r\n            if (isArrayBuffer(httpRequest.content)) {\r\n                requestBody = Buffer.from(httpRequest.content);\r\n            }\r\n            else {\r\n                requestBody = httpRequest.content || \"\";\r\n            }\r\n            var currentRequest = _this.request(httpRequest.url, {\r\n                body: requestBody,\r\n                // If binary is expected 'null' should be used, otherwise for text 'utf8'\r\n                encoding: httpRequest.responseType === \"arraybuffer\" ? null : \"utf8\",\r\n                headers: __assign({ \r\n                    // Tell auth middleware to 401 instead of redirecting\r\n                    \"X-Requested-With\": \"XMLHttpRequest\" }, httpRequest.headers),\r\n                method: httpRequest.method,\r\n                timeout: httpRequest.timeout,\r\n            }, function (error, response, body) {\r\n                if (httpRequest.abortSignal) {\r\n                    httpRequest.abortSignal.onabort = null;\r\n                }\r\n                if (error) {\r\n                    if (error.code === \"ETIMEDOUT\") {\r\n                        _this.logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\r\n                        reject(new TimeoutError());\r\n                    }\r\n                    _this.logger.log(LogLevel.Warning, \"Error from HTTP request. \" + error);\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                if (response.statusCode >= 200 && response.statusCode < 300) {\r\n                    resolve(new HttpResponse(response.statusCode, response.statusMessage || \"\", body));\r\n                }\r\n                else {\r\n                    reject(new HttpError(response.statusMessage || \"\", response.statusCode || 0));\r\n                }\r\n            });\r\n            if (httpRequest.abortSignal) {\r\n                httpRequest.abortSignal.onabort = function () {\r\n                    currentRequest.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n        });\r\n    };\r\n    NodeHttpClient.prototype.getCookieString = function (url) {\r\n        return this.cookieJar.getCookieString(url);\r\n    };\r\n    return NodeHttpClient;\r\n}(HttpClient));\r\nexport { NodeHttpClient };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, Platform, sendMessage } from \"./Utils\";\r\n/** @private */\r\nvar ServerSentEventsTransport = /** @class */ (function () {\r\n    function ServerSentEventsTransport(httpClient, accessTokenFactory, logger, logMessageContent, eventSourceConstructor) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.logMessageContent = logMessageContent;\r\n        this.eventSourceConstructor = eventSourceConstructor;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    ServerSentEventsTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n                        // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\r\n                        this.url = url;\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (token) {\r\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                            var opened = false;\r\n                            if (transferFormat !== TransferFormat.Text) {\r\n                                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                                return;\r\n                            }\r\n                            var eventSource;\r\n                            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                                eventSource = new _this.eventSourceConstructor(url, { withCredentials: true });\r\n                            }\r\n                            else {\r\n                                // Non-browser passes cookies via the dictionary\r\n                                var cookies = _this.httpClient.getCookieString(url);\r\n                                eventSource = new _this.eventSourceConstructor(url, { withCredentials: true, headers: { Cookie: cookies } });\r\n                            }\r\n                            try {\r\n                                eventSource.onmessage = function (e) {\r\n                                    if (_this.onreceive) {\r\n                                        try {\r\n                                            _this.logger.log(LogLevel.Trace, \"(SSE transport) data received. \" + getDataDetail(e.data, _this.logMessageContent) + \".\");\r\n                                            _this.onreceive(e.data);\r\n                                        }\r\n                                        catch (error) {\r\n                                            _this.close(error);\r\n                                            return;\r\n                                        }\r\n                                    }\r\n                                };\r\n                                eventSource.onerror = function (e) {\r\n                                    var error = new Error(e.data || \"Error occurred\");\r\n                                    if (opened) {\r\n                                        _this.close(error);\r\n                                    }\r\n                                    else {\r\n                                        reject(error);\r\n                                    }\r\n                                };\r\n                                eventSource.onopen = function () {\r\n                                    _this.logger.log(LogLevel.Information, \"SSE connected to \" + _this.url);\r\n                                    _this.eventSource = eventSource;\r\n                                    opened = true;\r\n                                    resolve();\r\n                                };\r\n                            }\r\n                            catch (e) {\r\n                                reject(e);\r\n                                return;\r\n                            }\r\n                        })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerSentEventsTransport.prototype.send = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.eventSource) {\r\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\r\n                }\r\n                return [2 /*return*/, sendMessage(this.logger, \"SSE\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\r\n            });\r\n        });\r\n    };\r\n    ServerSentEventsTransport.prototype.stop = function () {\r\n        this.close();\r\n        return Promise.resolve();\r\n    };\r\n    ServerSentEventsTransport.prototype.close = function (e) {\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = undefined;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    };\r\n    return ServerSentEventsTransport;\r\n}());\r\nexport { ServerSentEventsTransport };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { SubjectSubscription } from \"./Utils\";\r\n/** Stream implementation to stream items to the server. */\r\nvar Subject = /** @class */ (function () {\r\n    function Subject() {\r\n        this.observers = [];\r\n    }\r\n    Subject.prototype.next = function (item) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            observer.next(item);\r\n        }\r\n    };\r\n    Subject.prototype.error = function (err) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.complete = function () {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.subscribe = function (observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    };\r\n    return Subject;\r\n}());\r\nexport { Subject };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Not exported from index\r\n/** @private */\r\nvar TextMessageFormat = /** @class */ (function () {\r\n    function TextMessageFormat() {\r\n    }\r\n    TextMessageFormat.write = function (output) {\r\n        return \"\" + output + TextMessageFormat.RecordSeparator;\r\n    };\r\n    TextMessageFormat.parse = function (input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        var messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    };\r\n    TextMessageFormat.RecordSeparatorCode = 0x1e;\r\n    TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n    return TextMessageFormat;\r\n}());\r\nexport { TextMessageFormat };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n/** @private */\r\nvar Arg = /** @class */ (function () {\r\n    function Arg() {\r\n    }\r\n    Arg.isRequired = function (val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(\"The '\" + name + \"' argument is required.\");\r\n        }\r\n    };\r\n    Arg.isIn = function (val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(\"Unknown \" + name + \" value: \" + val + \".\");\r\n        }\r\n    };\r\n    return Arg;\r\n}());\r\nexport { Arg };\r\n/** @private */\r\nvar Platform = /** @class */ (function () {\r\n    function Platform() {\r\n    }\r\n    Object.defineProperty(Platform, \"isBrowser\", {\r\n        get: function () {\r\n            return typeof window === \"object\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Platform, \"isWebWorker\", {\r\n        get: function () {\r\n            return typeof self === \"object\" && \"importScripts\" in self;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Platform, \"isNode\", {\r\n        get: function () {\r\n            return !this.isBrowser && !this.isWebWorker;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Platform;\r\n}());\r\nexport { Platform };\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    var detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = \"Binary data of length \" + data.byteLength;\r\n        if (includeContent) {\r\n            detail += \". Content: '\" + formatArrayBuffer(data) + \"'\";\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = \"String data of length \" + data.length;\r\n        if (includeContent) {\r\n            detail += \". Content: '\" + data + \"'\";\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    var view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    var str = \"\";\r\n    view.forEach(function (num) {\r\n        var pad = num < 16 ? \"0\" : \"\";\r\n        str += \"0x\" + pad + num.toString(16) + \" \";\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n/** @private */\r\nexport function sendMessage(logger, transportName, httpClient, url, accessTokenFactory, content, logMessageContent) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, headers, token, responseType, response;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    if (!accessTokenFactory) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, accessTokenFactory()];\r\n                case 1:\r\n                    token = _b.sent();\r\n                    if (token) {\r\n                        headers = (_a = {},\r\n                            _a[\"Authorization\"] = \"Bearer \" + token,\r\n                            _a);\r\n                    }\r\n                    _b.label = 2;\r\n                case 2:\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) sending data. \" + getDataDetail(content, logMessageContent) + \".\");\r\n                    responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n                    return [4 /*yield*/, httpClient.post(url, {\r\n                            content: content,\r\n                            headers: headers,\r\n                            responseType: responseType,\r\n                        })];\r\n                case 3:\r\n                    response = _b.sent();\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) request complete. Response status: \" + response.statusCode + \".\");\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nvar SubjectSubscription = /** @class */ (function () {\r\n    function SubjectSubscription(subject, observer) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n    SubjectSubscription.prototype.dispose = function () {\r\n        var index = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n        if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\r\n            this.subject.cancelCallback().catch(function (_) { });\r\n        }\r\n    };\r\n    return SubjectSubscription;\r\n}());\r\nexport { SubjectSubscription };\r\n/** @private */\r\nvar ConsoleLogger = /** @class */ (function () {\r\n    function ConsoleLogger(minimumLogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n        this.outputConsole = console;\r\n    }\r\n    ConsoleLogger.prototype.log = function (logLevel, message) {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.outputConsole.error(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.outputConsole.warn(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.outputConsole.info(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.outputConsole.log(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return ConsoleLogger;\r\n}());\r\nexport { ConsoleLogger };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, Platform } from \"./Utils\";\r\n/** @private */\r\nvar WebSocketTransport = /** @class */ (function () {\r\n    function WebSocketTransport(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logMessageContent = logMessageContent;\r\n        this.webSocketConstructor = webSocketConstructor;\r\n        this.httpClient = httpClient;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    WebSocketTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (token) {\r\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                            url = url.replace(/^http/, \"ws\");\r\n                            var webSocket;\r\n                            var cookies = _this.httpClient.getCookieString(url);\r\n                            if (Platform.isNode && cookies) {\r\n                                // Only pass cookies when in non-browser environments\r\n                                webSocket = new _this.webSocketConstructor(url, undefined, {\r\n                                    headers: {\r\n                                        Cookie: \"\" + cookies,\r\n                                    },\r\n                                });\r\n                            }\r\n                            if (!webSocket) {\r\n                                // Chrome is not happy with passing 'undefined' as protocol\r\n                                webSocket = new _this.webSocketConstructor(url);\r\n                            }\r\n                            if (transferFormat === TransferFormat.Binary) {\r\n                                webSocket.binaryType = \"arraybuffer\";\r\n                            }\r\n                            // tslint:disable-next-line:variable-name\r\n                            webSocket.onopen = function (_event) {\r\n                                _this.logger.log(LogLevel.Information, \"WebSocket connected to \" + url + \".\");\r\n                                _this.webSocket = webSocket;\r\n                                resolve();\r\n                            };\r\n                            webSocket.onerror = function (event) {\r\n                                var error = null;\r\n                                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                                    error = event.error;\r\n                                }\r\n                                reject(error);\r\n                            };\r\n                            webSocket.onmessage = function (message) {\r\n                                _this.logger.log(LogLevel.Trace, \"(WebSockets transport) data received. \" + getDataDetail(message.data, _this.logMessageContent) + \".\");\r\n                                if (_this.onreceive) {\r\n                                    _this.onreceive(message.data);\r\n                                }\r\n                            };\r\n                            webSocket.onclose = function (event) { return _this.close(event); };\r\n                        })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebSocketTransport.prototype.send = function (data) {\r\n        if (this.webSocket && this.webSocket.readyState === this.webSocketConstructor.OPEN) {\r\n            this.logger.log(LogLevel.Trace, \"(WebSockets transport) sending data. \" + getDataDetail(data, this.logMessageContent) + \".\");\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    };\r\n    WebSocketTransport.prototype.stop = function () {\r\n        if (this.webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this.webSocket.onclose = function () { };\r\n            this.webSocket.onmessage = function () { };\r\n            this.webSocket.onerror = function () { };\r\n            this.webSocket.close();\r\n            this.webSocket = undefined;\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this.close(undefined);\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    WebSocketTransport.prototype.close = function (event) {\r\n        // webSocket will be null if the transport did not start successfully\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (event && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(\"WebSocket closed with status code: \" + event.code + \" (\" + event.reason + \").\"));\r\n            }\r\n            else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    };\r\n    return WebSocketTransport;\r\n}());\r\nexport { WebSocketTransport };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nvar XhrHttpClient = /** @class */ (function (_super) {\r\n    __extends(XhrHttpClient, _super);\r\n    function XhrHttpClient(logger) {\r\n        var _this = _super.call(this) || this;\r\n        _this.logger = logger;\r\n        return _this;\r\n    }\r\n    /** @inheritDoc */\r\n    XhrHttpClient.prototype.send = function (request) {\r\n        var _this = this;\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = true;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n            var headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach(function (header) {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = function () {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = function () {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = function () {\r\n                _this.logger.log(LogLevel.Warning, \"Error from HTTP request. \" + xhr.status + \": \" + xhr.statusText + \".\");\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = function () {\r\n                _this.logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    };\r\n    return XhrHttpClient;\r\n}(HttpClient));\r\nexport { XhrHttpClient };\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport var VERSION = \"3.0.0-preview6.19307.2\";\r\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nexport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { MessageType } from \"./IHubProtocol\";\r\nexport { LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nexport { Subject } from \"./Subject\";\r\n","import { FileItem, FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\nexport class FileUploaderOneRequest extends FileUploader {\n\n    constructor(options: FileUploaderOptions) {\n        super(options);\n    }\n\n    uploadAllFiles(): XMLHttpRequest {\n\n        var xhr = new XMLHttpRequest();\n        var sendable = new FormData();\n        var fakeitem: FileItem = null;\n        this.onBuildItemForm(fakeitem, sendable);\n\n        for (const item of this.queue) {\n            item.isReady = true;\n            item.isUploading = true;\n            item.isUploaded = false;\n            item.isSuccess = false;\n            item.isCancel = false;\n            item.isError = false;\n            item.progress = 0;\n\n            if (typeof item._file.size !== 'number') {\n                throw new TypeError('The file specified is no longer valid');\n            }\n            sendable.append(\"files\", item._file, item.file.name);\n        }\n\n        if (this.options.additionalParameter !== undefined) {\n            Object.keys(this.options.additionalParameter).forEach((key) => {\n                sendable.append(key, this.options.additionalParameter[key]);\n            });\n        }\n\n        // xhr.onload = () => {\n        //     var gist = (xhr.status >= 200 && xhr.status < 300) || xhr.status === 304 ? 'Success' : 'Error';\n        //     var method = 'on' + gist + 'Item';\n        //     this[method](fakeitem, null, xhr.status, null);\n\n        // };\n        xhr.onerror = () => {\n            this.onErrorItem(fakeitem, null, xhr.status, null);\n        };\n\n        xhr.onabort = () => {\n            this.onErrorItem(fakeitem, null, xhr.status, null);\n        };\n\n        xhr.open(\"POST\", this.options.url, true);\n        xhr.withCredentials = true;\n        if (this.options.headers) {\n            for (var _i = 0, _a = this.options.headers; _i < _a.length; _i++) {\n                var header = _a[_i];\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n\n        // ---------------\n        xhr.onload = () => {\n            const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            const response = this._transformResponse(xhr.response, headers);\n            const gist = this._isSuccessCode(xhr.status) ? \"Success\" : \"Error\";\n            const method = \"_on\" + gist + \"Item\";\n            const queueLength = this.queue.length;\n            for (var i = 0; i < queueLength; i++) {\n                this[method](\n                    this.queue[this.queue.length - 1],\n                    response,\n                    xhr.status,\n                    headers\n                );\n                this._onCompleteItem(\n                    this.queue[this.queue.length - 1],\n                    response,\n                    xhr.status,\n                    headers\n                );\n            }\n        };\n        //------\n        xhr.send(sendable);\n        return xhr;\n    };\n\n\n    // this.uploader.uploadAllFiles().onreadystatechange = function () {\n    //   if(this.readyState==4){\n    //     if(this.status==200){\n    //       that.pciturePaths=JSON.parse(this.response).response;\n    //       console.log(JSON.parse(this.response).response);\n    //     }\n    //   }\n    // }\n\n}","import { User, UserIdAndNameDto } from './User';\n\nexport interface RatingAndReview {\n    id: number;\n    rowId: number;\n    type: RateType;\n    rating: number;\n    comment: string;\n    details: string;\n    createdDate: Date;\n    ratedUserId: number;\n    ratedUser: UserIdAndNameDto;\n    reviewerUserId: number;\n    reviewerUser: UserIdAndNameDto;\n}\n\nexport interface RatingTaskOrder {\n    id: number;\n    name: string;\n}\n\nexport interface RatingWorkerByEmployer {\n    id: number;\n    name: string;\n}\n\nexport interface RatingEmployerByWorker {\n    id: number;\n    name: string;\n}\n\nexport enum RateType {\n    General = 0,\n    ServiceProvider = 1,\n    EmployerRatingTheWorker = 2,\n    WorkerRatingTheEmployer = 3,\n}","\nexport interface UserSkillResult {\n    id: number;\n    skillId: number;\n    skill: SkillResult;\n}\n\nexport interface OfferSkillResult {\n    id: number;\n    skillId: number;\n    skill: SkillResult;\n}\n\nexport interface SkillResult {\n    id: number;\n    name: string;\n}\n\n\nexport interface SkillForListDto {\n    id: number;\n    name: string;\n    type: SkillType;\n}\n\n\n\nexport enum SkillType {\n    General = 0,\n    Personal = 1,\n}","import { catchError } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { UserService } from '../../_services/users/User.service';\nimport { User } from 'src/app/_models/Users/User';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { AccountService } from 'src/app/_services/users/account.service';\n\n@Injectable()\nexport class MemberProfileResolver implements Resolve<User> {\n    constructor(private accountService: AccountService, private router: Router, private alertiy: AlertifyService, private authService: AuthService) { }\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\n        let userId = 0;\n        if (route.paramMap.has('userId')) {\n            userId = +route.params['userId'];\n        }\n        else if (!route.paramMap.has('userId') && this.authService.loggedIn()) {\n            userId = this.authService.getCurrentUserIdUsingToken();\n        }\n        else\n            return of(null);\n\n        return this.accountService.getUserProfile(+userId).pipe(\n            catchError(error => {\n                this.alertiy.error('يوجد مشكلة في عرض بيانات المستخدم أو لا تملك صلاحية مخوله للوصول الى ملفه');\n                this.router.navigate(['']);\n                return of(null);\n            })\n        );\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Resolve, Router, ActivatedRouteSnapshot } from \"@angular/router\";\nimport { Observable, of } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { MessageResult } from 'src/app/_models/chats/message';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\n\n\n@Injectable()\nexport class MessageResolver implements Resolve<MessageResult[]>{\n    pageNumber = 1;\n    pageSize = 6;\n    messageType = 'Unread';\n    constructor(private authService: AuthService, private messagesService: MessagesService, private router: Router, private alertify: AlertifyService) { }\n    resolve(route: ActivatedRouteSnapshot): Observable<MessageResult[]> {\n        let userId = 0;\n        if (this.authService.loggedIn())\n            userId = this.authService.getCurrentUserIdUsingToken();\n        else\n            return of(null);\n\n        if (userId === 0)\n            return of(null);\n\n        return this.messagesService.getLastConversations(userId).pipe(\n            catchError(error => {\n                this.alertify.error('يوجد مشكلة في عرض الرسائل');\n                this.router.navigate(['']);\n                return of(null);\n            })\n        )\n    }\n}","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HubConnection, HttpTransportType, LogLevel, HubConnectionBuilder } from '@aspnet/signalr';\nimport { HttpClient } from '@angular/common/http';\nimport { DbKeysService } from 'src/app/_helpers/db-keys';\nimport * as signalR from '@aspnet/signalr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatsService {\n  baseUrl = environment.HubsUrl;\n  chatsUrl = `${this.baseUrl}/chats`;\n  connectionId: string;\n  // لان فيه مشاكل و تعارض مع ال WebSocket \n  // Object.defineProperty(WebSocket, 'OPEN', { value: 1, });\n  private options = { transport: HttpTransportType.ServerSentEvents, logging: LogLevel.Trace };\n  private isConnected: boolean = false;\n  hubConnection: HubConnection;\n\n  unreadMessagesBehavior = new BehaviorSubject<number>(0);\n  unreadMessages = this.unreadMessagesBehavior.asObservable();\n\n  UnUsedCodeBehavior = new BehaviorSubject<number>(0);\n  UnUsedCode = this.UnUsedCodeBehavior.asObservable();\n\n  constructor(private http: HttpClient) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(`${this.chatsUrl}`, this.getRequestOptions())\n      .configureLogging(signalR.LogLevel.Information)\n      .withAutomaticReconnect()\n      .build();\n  }\n\n  startChatHubConnection() {\n    this.hubConnection.start()\n      // من خلال هذا السطر بامكاننا تفعيل التنصت بعد الاتصال بالسيرفر من اجل عدم ظهور خطأ في حالة تأخر الاتصال\n      .then(() => {\n        this.isConnected = true;\n        this.invokeConnectionId()\n      })\n      .catch(err => console.log('Error while establishing connection :('));\n  }\n\n  private getRequestOptions(): any {\n    const auth_token = localStorage.getItem(DbKeysService.ACCESS_TOKEN);\n    const headers = new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': auth_token,\n    })\n    return { headers: headers, transport: HttpTransportType.ServerSentEvents, logging: LogLevel.Trace, accessTokenFactory: () => auth_token };\n  }\n\n  public invokeNewMessage = () => {\n    this.hubConnection.invoke('newMessage', 'this.connectionId');\n  }\n\n  public invokeConnectionId = () => {\n    this.hubConnection.invoke('getconnectionid').then(\n      (data) => {\n        console.log('connectionId:', data);\n        this.connectionId = data;\n      }\n    );\n  }\n\n  startJoinGroupHubConnection(groupName: string) {\n    if (this.isConnected === true) {\n      this.invokeJoinGroup(groupName);\n    } else {\n      this.hubConnection.start()\n        // من خلال هذا السطر بامكاننا تفعيل التنصت بعد الاتصال بالسيرفر من اجل عدم ظهور خطأ في حالة تأخر الاتصال\n        .then(() => {\n          this.isConnected = true;\n          this.invokeJoinGroup(groupName);\n        })\n        .catch(err => console.log('Error while establishing connection :('));\n    }\n  }\n\n  invokeJoinGroup(groupName: string) {\n    // console.log('الانضمام الى المجموعة:', groupName);\n    this.hubConnection.invoke('joinGroup', groupName);\n  }\n\n  registeringCurrentUserToHubConnection() {\n    if (this.isConnected === true) {\n     // this.invokeJoinCurrentUser();\n    } else {\n      this.hubConnection.start()\n        // من خلال هذا السطر بامكاننا تفعيل التنصت بعد الاتصال بالسيرفر من اجل عدم ظهور خطأ في حالة تأخر الاتصال\n        .then(() => {\n          this.isConnected = true;\n        //  this.invokeJoinCurrentUser();\n        })\n        .catch(err => console.log('Error while establishing connection :('));\n    }\n  }\n\n  invokeJoinCurrentUser() {\n    this.hubConnection.invoke('getUserId').then(\n      (data) => {\n        console.log('User Id:', data);\n        this.connectionId = data;\n      }\n    );\n  }\n\n  public broadcastChartData = () => {\n    this.hubConnection.invoke('broadcastchartdata', \"this.data\", this.connectionId)\n      .catch(err => console.error(err));\n  }\n\n  getDefultValuesHubConnection() {\n    this.hubConnection.on('refresh', () => {\n      setTimeout(() => {\n        // this.countSupportRequests().subscribe(res => { this.unreadMessagesBehavior.next(res.toString()); });\n        // this.countTicketsNeedOfficeSupportApproval().subscribe(\n        //   res => {\n        //     this.UnUsedCodeBehavior.next(res.toString());\n        //     console.log('hubConnectionCountTicket');\n        //   });\n      }, 0);\n    });\n  }\n\n  // لها استخدامين \n  //أما تنبيه النظام بتفعيلها بأمر من متصفح المستحدم بشكل يدوي\n  // أو تجاهل هذه الفكشن و يتم تفعيلها من قبل الكنترولر في السيرفر بدون تدخل من متصفح المستخدم\n  invokeNewMessageConnection() {\n    this.hubConnection.invoke('newMessage');\n  }\n\n  invokeRefreshConnection() {\n    this.hubConnection.invoke('refresh');\n  }\n\n  invokeCountConnection() {\n    this.hubConnection.invoke('count');\n  }\n}\n\n\n// طرق الاستخدام \n// 1)\n// this.chatsService.hubConnection.on('refresh', (...data) => {\n//   console.log('data:', data);\n// });\n//------------------\n// 2)\n// this.chatsService.hubConnection.on('refresh', () => {\n//   load or do SomeThing;\n// });","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { MessageResult, Message } from 'src/app/_models/chats/message';\nimport { PaginationResult } from 'src/app/_models/data/Pagination';\nimport { Utilities } from '../utilities.service';\nimport { MessageParams } from 'src/app/_models/chats/message-params';\nimport { MessageWithObject } from 'src/app/_models/data/actions-result';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagesService {\n  baseUrl = environment.ApiUrl;\n  constructor(private http: HttpClient) { }\n\n  getMessage(senderId: number, messageId: number): Observable<MessageResult> {\n    return this.http.get<MessageResult>(`${this.baseUrl}Users/${senderId}/messages/${messageId}`);\n  }\n\n  getMessages(senderId: number): Observable<MessageResult[]> {\n    return this.http.get<MessageResult[]>(`${this.baseUrl}Users/${senderId}/messages`);\n  }\n\n  getPagedMessages(senderId: number, query?: MessageParams): Observable<PaginationResult<MessageResult[]>> {\n    return Utilities.getPaginationResult<MessageResult>(this.http, `${this.baseUrl}Users/${senderId}/messages`, query);\n  }\n\n  getCurrentConversationId(senderId: number, recipientId: number): Observable<MessageWithObject> {\n    return this.http.get<MessageWithObject>(`${this.baseUrl}Users/${senderId}/messages/chats/conversations/id/${recipientId}`);\n  }\n\n  getConversation(senderId: number, recipientId: number) {\n    return this.http.get<MessageResult[]>(`${this.baseUrl}Users/${senderId}/messages/chats/${recipientId}`);\n  }\n\n  checkIfCurrentUserCanStartChatWithTheOtherUser(currentUserId: number, targetUserId: number): Observable<MessageWithObject> {\n    return this.http.get<MessageWithObject>(`${this.baseUrl}Users/${currentUserId}/messages/allows/${targetUserId}`);\n  }\n\n  getLastConversations(senderId: number, query?: MessageParams) {\n    return Utilities.getPaginationResult<MessageResult>(this.http, `${this.baseUrl}Users/${senderId}/messages/chats`, query);\n  }\n\n  sendMessage(senderId: number, message: Message) {\n    return this.http.post(`${this.baseUrl}Users/${senderId}/messages`, message);\n  }\n\n  getUnreadCount(senderId) {\n    return this.http.get(`${this.baseUrl}Users/${senderId}/messages/count`);\n  }\n\n  markAsRead(senderId: number, messageId: number) {\n    return this.http.post(`${this.baseUrl}Users/${senderId}/messages/read/${messageId}`, {}).subscribe();\n  }\n\n  deleteMessage(id: number, senderId: number) {\n    return this.http.post(`${this.baseUrl}Users/${senderId}/messages/${id}`, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { KeyValueChildsPairResource, KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EducationDegreesService {\n  baseUrl = environment.ApiUrl;\n  educationDegreesUrl = `${this.baseUrl}educationDegrees`;\n\n  constructor(private http: HttpClient) { }\n  \n  getEducationDegreesAsList(): Observable<KeyValueChildsPairResource[]> {\n    return this.http.get<KeyValueChildsPairResource[]>(`${this.educationDegreesUrl}/list`);\n  }\n\n  getCertificatesAsList(): Observable<KeyValuePairResource[]> {\n    return this.http.get<KeyValuePairResource[]>(`${this.educationDegreesUrl}/Certificates/list`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HobbiesService {\n\tbaseUrl = environment.ApiUrl ;\n\thobbiesUrl = `${this.baseUrl}hobbies`;\n\n\tconstructor(private http: HttpClient) { }\n\n  getHobbiesAsList(): Observable<KeyValuePairResource[]> {\n    return this.http.get<KeyValuePairResource[]>(`${this.hobbiesUrl}/list`);\n  }\n  \n  \n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguagesService {\n\tbaseUrl = environment.ApiUrl ;\n\tlanguagesUrl = `${this.baseUrl}languages`;\n\n\tconstructor(private http: HttpClient) { }\n\n\tgetLanguage(id: number): Observable<any> {\n\t\treturn this.http.get<any>(`${this.languagesUrl}/${id}`);\n\t}\n\n  getLanguagesAsList(): Observable<KeyValuePairResource[]> {\n    return this.http.get<KeyValuePairResource[]>(`${this.languagesUrl}/list`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { KeyValueChildsPairResource } from 'src/app/_models/data/key-value-pair-resource';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MajorsService {\n  baseUrl = environment.ApiUrl;\n  majorsUrl = `${this.baseUrl}majors`;\n\n  constructor(private http: HttpClient) { }\n\n  getMajorsAsList(): Observable<KeyValueChildsPairResource[]> {\n    return this.http.get<KeyValueChildsPairResource[]>(`${this.majorsUrl}/list`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniversitiesService {\n\tbaseUrl = environment.ApiUrl ;\n\tuniversitiesUrl = `${this.baseUrl}universities`;\n\n\tconstructor(private http: HttpClient) { }\n\n\n\tgetUniversity(id: number): Observable<any> {\n\t\treturn this.http.get<any>(`${this.universitiesUrl}/${id}`);\n  }\n  \n  getUniversitiesAsList(): Observable<KeyValuePairResource[]> {\n    return this.http.get<KeyValuePairResource[]>(`${this.universitiesUrl}/list`);\n  }\n\t\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { BusinessAccount, BusinessAccountResult } from 'src/app/_models/Users/business-account';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class BusinessAccountsService {\n\tbaseUrl = environment.ApiUrl;\n\tbusinessAccountsUrl = `${this.baseUrl}Accounts/business`;\n\n\tconstructor(private http: HttpClient) { }\n\n\t// getUserBusinessAccount(userId: number): Observable<UserBusinessAccount> {\n\t// \treturn this.http.get<UserBusinessAccount>(`${this.businessAccountsUrl}/${userId}`);\n\t// }\n\n\n\tsentTextDate(data: any) {\n\t\treturn this.http.post(`${this.baseUrl}StudentAccounts`, data);\n\t}\n\n\tgetBusinessAccount(userId: number): Observable<BusinessAccount> {\n\t\treturn this.http.get<BusinessAccount>(`${this.businessAccountsUrl}/${userId}`);\n\t}\n\n\tupdateBusinessAccount(userId: number, updatedBusinessAccount: BusinessAccountResult): Observable<BusinessAccount> {\n\t\tconsole.log(userId);\n\t\treturn this.http.put<BusinessAccount>(`${this.businessAccountsUrl}/${userId}`, updatedBusinessAccount);\n\t}\n\n\n}","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpEventType } from '@angular/common/http';\nimport { Portfolio } from 'src/app/components/profile/models/portfolio';\nimport { Observable } from 'rxjs';\nimport { UploadStatus } from 'src/app/_helpers/uploader/uploadHandlerResult';\nimport { map } from 'rxjs/operators';\nimport { Utilities } from '../utilities.service';\nimport { PaginationResult } from 'src/app/_models/data/Pagination';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PortfoliosService {\n  baseUrl = environment.ApiUrl;\n  portfoliosUrl = `${this.baseUrl}portfolios`;\n\n  constructor(private http: HttpClient) { }\n\n  addNew(newPortfolio: Portfolio): Observable<any> {\n    return this.http.post<any>(`${this.portfoliosUrl}`, newPortfolio);\n  }\n\n  addNewWithFile(data: FormData) {\n    const uploadURL = `${this.portfoliosUrl}/files`;\n    const headers = new HttpHeaders().append('Content-Disposition', 'multipart/form-data');\n    return this.http.post<any>(uploadURL, data, {\n      headers: headers,\n      reportProgress: true,\n      observe: 'events'\n    }).pipe(map((event) => {\n      switch (event.type) {\n        case HttpEventType.UploadProgress:\n          const progress = Math.round(100 * event.loaded / event.total);\n          return { status: UploadStatus.progress, message: progress };\n        case HttpEventType.Response:\n          return event.body;\n        default:\n          return `Unhandled event: ${event.type}`;\n      }\n    })\n    );\n  }\n\n  updatePortfolio(updatedPortfolio: Portfolio): Observable<Portfolio> {\n    return this.http.put<Portfolio>(`${this.portfoliosUrl}`, updatedPortfolio);\n  }\n\n  getPortfolio(id: number): Observable<Portfolio> {\n    return this.http.get<Portfolio>(`${this.portfoliosUrl}/${id}`);\n  }\n\n  getPortfolios(): Observable<Portfolio[]> {\n    return this.http.get<Portfolio[]>(this.portfoliosUrl);\n  }\n\n  getPagedPortfolios(query: any): Observable<PaginationResult<Portfolio[]>> {\n    return Utilities.getPaginationResult<Portfolio>(this.http, `${this.portfoliosUrl}/Pages`, query);\n  }\n\n  setMainPhoto(portfolioId: number, photoId: number) {\n    return this.http.put(`${this.portfoliosUrl}/${portfolioId}/photos/${photoId}/setMain`, {});\n  }\n\n  deletePhoto(portfolioId: number, photoId: number) {\n    return this.http.delete(`${this.portfoliosUrl}/${portfolioId}/photos/${photoId}`);\n  }\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { VisitorAccountUpdate } from 'src/app/_models/Users/visitor-account';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisitorAccountsService {\n  baseUrl = environment.ApiUrl;\n  visitorAccountsUrl = `${this.baseUrl}Accounts/visitors`;\n\n  constructor(private http: HttpClient) { }\n\n  getVisitorAccount(id: number): Observable<VisitorAccountUpdate> {\n    return this.http.get<any>(`${this.visitorAccountsUrl}/${id}`);\n  }\n  \n\n  updateVisitorAccount(userId: number, updatedAccount: VisitorAccountUpdate): Observable<any> {\n    return this.http.put<any>(`${this.visitorAccountsUrl}/${userId}`, updatedAccount);\n  }\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AccountEmploymentBagsBalance } from 'src/app/components/jobs/_models/job-offer';\nimport { JobOffersService } from 'src/app/components/jobs/_services/job-offers.service';\n\n@Component({\n  selector: 'app-business-account-balance',\n  templateUrl: './business-account-balance.component.html',\n  styleUrls: ['./business-account-balance.component.css']\n})\nexport class BusinessAccountBalanceComponent implements OnInit {\n  @Output() changeTab: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Input() isCurrentUserProfile: boolean;\n  @Input() isShortDetails: boolean = false;\n  accountBalance: AccountEmploymentBagsBalance;\n  constructor(private jobOffersService :JobOffersService) { }\n\n  ngOnInit(): void {\n    this.loadAccountBalance();\n  }\n\n  loadAccountBalance() {\n    this.jobOffersService.getCurrentAccountJobOffersBalance().subscribe(\n      (result: AccountEmploymentBagsBalance) => {\n         this.accountBalance = result;\n      },\n      error => {\n        // this.alertify.error(error);\n      }\n    );\n  }\n\n  showAccountBalanceTab() {\n    this.changeTab.emit(true);\n  }\n\n}\n","<div class=\"profile-details px-2 py-2 bg-silver\">\n    <ul class=\"list-unstyled\">\n        <li *ngIf=\"isShortDetails\" class=\"d-flex\"><i class=\"fa fa-archive pl-1\"></i><span class=\"px-1 ml-1\">الرصيد المتبقي:</span><span class=\"number\">{{accountBalance?.remainingBalance}} من {{accountBalance?.employmentBags}}</span></li>\n        <li *ngIf=\"!isShortDetails\" class=\"d-flex\"><i class=\"fa fa-archive pl-1\"></i><span class=\"px-1 ml-1\">الرصيد المتبقي:</span><span class=\"number\">{{accountBalance?.remainingBalance}} من {{accountBalance?.employmentBags}} حقيبة توظيف</span></li>\n        <li *ngIf=\"!isShortDetails\" class=\"d-flex\"><i class=\"fa fa-briefcase pl-1\"></i><span class=\"px-1 ml-1\">حقائب محجوزه في طلبات العروض: </span><span class=\"number\">{{accountBalance?.lockedBalance}}</span></li>\n        <li *ngIf=\"!isShortDetails\" class=\"d-flex\">\n          <i class=\"fa fa-id-card pl-1\"></i><span class=\"px-1 ml-1\"> انتهاء الاشتراك الخاص بك: </span>\n          <span class=\"number\">{{accountBalance?.expireAt | date:'yyyy/MM/dd'}}</span>\n        </li>\n\n        <li class=\"d-flex\"><i class=\"fa fa-id-card pl-1\"></i><span class=\"px-1 ml-1\"> الحالة: </span></li>\n        <li class=\"d-flex\"><span class=\"number\">{{accountBalance?.message}}</span></li>\n    </ul>\n    <div *ngIf=\"isCurrentUserProfile\" class=\"profile-message-btn center-block text-center\">\n      <a class=\"btn btn-block btn-sm py-1 px-2 p btn-primary text-white\" (click)=\"showAccountBalanceTab()\">\n          <i class=\"fa fa-briefcase\"></i> تفاصيل أكثر\n      </a>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BusinessAccountResult } from 'src/app/_models/Users/business-account';\n\n@Component({\n  selector: 'app-business-account-details',\n  templateUrl: './business-account-details.component.html',\n  styleUrls: []\n})\nexport class BusinessAccountDetailsComponent implements OnInit {\n  @Input('BusinessAccountData') accountData: BusinessAccountResult;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"\">\n\t<div class=\"form-group\">\n\t\t<label id=\"lblCap_ronlyVewAbout\" for=\"ronlyVewAbout\" class=\"hidden-xs profile-info-title\" >{{'users.Business.About' | translate }}</label>\n\t\t<p class=\"form-control-plaintext text-justify profile-info-details\">{{accountData?.about}}  </p>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label id=\"lblCap_ronlyVewVision\" for=\"ronlyVewVision\" class=\"hidden-xs profile-info-title\" >{{'users.Business.Vision' | translate }}</label>\n\t\t<p class=\"form-control-plaintext text-justify profile-info-details\">{{accountData?.vision}}</p>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label id=\"lblCap_ronlyVewMessage\" for=\"ronlyVewMessage\" class=\"hidden-xs profile-info-title\" >{{'users.Business.Message' | translate }}</label>\n\t\t<p class=\"form-control-plaintext text-justify profile-info-details\">{{accountData?.message}}</p>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label id=\"lblCap_ronlyVewAddress\" for=\"ronlyVewAddress\" class=\"hidden-xs profile-info-title\" >{{'users.Business.Address' | translate }}</label>\n\t\t<p class=\"form-control-plaintext profile-info-details\">{{accountData?.address}}</p>\n\t</div>\n</div>\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { UserService } from 'src/app/_services/users/User.service';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\nimport { MessageWithObject } from 'src/app/_models/data/actions-result';\n\n@Component({\n  selector: 'app-business-account-profile',\n  templateUrl: './business-account-profile.component.html',\n  styleUrls: []\n})\nexport class BusinessAccountProfileComponent implements OnInit {\n  @Input() userProfile: UserProfileResult;\n  @ViewChild('chatboxTab') chatboxTab: ElementRef<HTMLElement>;\n  @ViewChild('accountBalanceTab') accountBalanceTab: ElementRef<HTMLElement>;\n  isCurrentUserCanStartConversationWithThisUser: boolean = false;\n  conversationNotAllowed: string = null;\n\n  constructor(private router: Router, private route: ActivatedRoute, private userService: UserService, private appTranslation: AppTranslationService,\n    private alertify: AlertifyService, private authService: AuthService, private messagesService: MessagesService) { }\n\n  ngOnInit(): void {\n    return\n    if (!this.userProfile) {\n      this.alertify.warning('يوجد مشكلة في عرض بيانات المستخدم أو لا تملك صلاحية مخوله للوصول الى ملفه');\n      this.router.navigate(['']);\n    } else {\n      this.checkIfCurrentUserCanStartChat();\n    }\n  }\n\n  checkIfCurrentUserCanStartChat() {\n    if (!this.isCurrentUserProfile) {\n      this.messagesService.checkIfCurrentUserCanStartChatWithTheOtherUser(this.authService.currentUser.id, this.userProfile.id).subscribe(\n        (result: MessageWithObject) => {\n          if (result.data === true)\n            this.isCurrentUserCanStartConversationWithThisUser = true;\n          else\n            this.conversationNotAllowed = result.message;\n        },\n        error => {\n          this.conversationNotAllowed = error;\n          this.isCurrentUserCanStartConversationWithThisUser = false;\n        }\n      );\n    }\n  }\n\n  get isCurrentUserProfile(): boolean {\n    return this.authService.isCurrentUserProfile(this.userProfile.id);\n  }\n\n  showChatBox(tabContent: HTMLElement) {\n    this.chatboxTab.nativeElement.click()\n    this.accountBalanceTab.nativeElement.click()\n  }\n\n  showAccountBalanceTab(tabContent: HTMLElement) {\n    tabContent.scrollIntoView();\n    this.accountBalanceTab.nativeElement.click()\n  }\n\n\n}\n","<app-breadcrumbs title=\"\" currentPageTitle=\"{{userProfile.fullName}}\"></app-breadcrumbs>\n\n<!-- ======= member profile ======= -->\n<section id=\"profile\" class=\"profile\">\n    <div class=\"container\">\n        <div class=\"row\" id=\"user-profile\">\n            <div class=\"col-lg-3 col-md-4 col-sm-4 p-0\">\n                <div class=\"main-box\">\n                    <h4 class=\"user-name\">{{userProfile.fullName}}</h4>\n                    <div class=\"profile-status\">\n                        <!-- <i class=\"fa fa-check-circle\"></i> نشط الأن -->\n                    </div>\n\n                    <app-profile-image [UserProfileData]=\"userProfile\" ></app-profile-image>\n                    <app-profile-stars [Rating]=\"userProfile?.totalRating\"></app-profile-stars>\n                    <app-since-profile [MemberSince]=\"userProfile?.createdDate\" [LastActivity]=\"userProfile?.lastActive\"></app-since-profile>\n                    <app-business-account-balance [isCurrentUserProfile]=\"isCurrentUserProfile\" (changeTab)=\"showAccountBalanceTab(tabContent)\" [isShortDetails]=\"true\"></app-business-account-balance>\n                    <app-business-counters></app-business-counters>\n                    <div *ngIf=\"!isCurrentUserProfile\" class=\"profile-message-btn center-block text-center\">\n                        <a class=\"btn btn-success text-white\" (click)=\"showChatBox(tabContent)\">\n                            <i class=\"fa fa-envelope\"></i> {{'Chatbox.SendMessage' | translate }}\n                        </a>\n                    </div>\n\n                </div>\n            </div>\n\n            <div class=\"col-lg-9 col-md-8 col-sm-8 p-0 px-md-2\">\n                <div class=\"main-box \">\n                    <ul class=\"nav nav-tabs\" id=\"user-tab\" role=\"tablist\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link active\" id=\"about-user-tab\" data-toggle=\"tab\" href=\"#aboutUser\" role=\"tab\" aria-controls=\"about-user-tab\" aria-selected=\"true\">بياناتي</a>\n                        </li>\n                        <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"ratings-history-tab\" data-toggle=\"tab\" href=\"#ratings-history\" role=\"tab\" aria-controls=\"ratings-history\" aria-selected=\"false\">التقييمات</a>\n                        </li>\n                        <li class=\"nav-item\" *ngIf=\"isCurrentUserProfile\">\n                          <a #accountBalanceTab class=\"nav-link\" id=\"account-balance-tab\" data-toggle=\"tab\" href=\"#account-balance\" role=\"tab\" aria-controls=\"account-balance\" aria-selected=\"false\">الاشتراكات</a>\n                        </li>\n                        <li class=\"nav-item\" *ngIf=\"!isCurrentUserProfile\">\n                          <a #chatboxTab class=\"nav-link\" id=\"chatbox-tab\" data-toggle=\"tab\" href=\"#chatbox\" role=\"tab\" aria-controls=\"chatbox\" aria-selected=\"false\">المحادثة</a>\n                        </li>\n                    </ul>\n\n                    <div #tabContent class=\"tab-content  p-2\" id=\"myTabContent\">\n                        <div class=\"tab-pane fade show active\" id=\"aboutUser\" role=\"tabpanel\" aria-labelledby=\"about-user-tab\">\n                            <div class=\"d-flex justify-content-between align-items-start mb-2\">\n                                <h4 class=\"text-left\"><span class=\"section-header-behind-line behind-line-gray px-2 pb-1\"> نبذة عامة </span></h4>\n                                <a *ngIf=\"isCurrentUserProfile\" [routerLink]=\"['/profile' , 'business', 'edit' ]\" class=\"btn btn-primary btn-sm edit-profile\">\n                                    <i class=\"fa fa-pencil-square fa-lg\"></i> {{'Common.CRUD.Update' | translate }}\n                                </a>\n                            </div>\n                            <app-business-account-details [BusinessAccountData]=\"userProfile.businessAccountData\"></app-business-account-details>\n                            <app-member-contact *ngIf=\"userProfile?.displayContactInfo\" [UserProfileData]=\"userProfile\"></app-member-contact>\n                        </div>\n\n                        <div class=\"tab-pane fade\" id=\"ratings-history\" role=\"tabpanel\" aria-labelledby=\"ratings-history-tab\">\n                            <app-rating-and-reviews-list [RatingsAndReviews]=\"userProfile.ratingsGot\"></app-rating-and-reviews-list>\n                        </div>\n\n                        <div class=\"tab-pane fade\" id=\"account-balance\" role=\"tabpanel\" aria-labelledby=\"account-balance-tab\">\n                            <app-business-account-balance [isShortDetails]=\"false\"></app-business-account-balance>\n                        </div>\n\n                        <div *ngIf=\"!isCurrentUserProfile\" class=\"tab-pane fade profile-chatbox\" id=\"chatbox\" role=\"tabpanel\" aria-labelledby=\"chatbox-tab\">\n                          <ng-container *ngIf=\"!isCurrentUserCanStartConversationWithThisUser; else conversationBox\">\n                              <div *ngIf=\"conversationNotAllowed\"  class=\"alert alert-danger text-center\" role=\"alert\">{{conversationNotAllowed}}</div>\n                              <div *ngIf=\"!conversationNotAllowed\"  class=\"alert alert-warning text-center\" role=\"alert\"><span class=\"spinner-border spinner-border-sm\" role=\"status\"></span>&nbsp;&nbsp;{{'Common.Data.Loading' | translate}}</div>\n                          </ng-container>\n                          <ng-template #conversationBox>\n                            <app-conversation-box [RecipientId]=\"userProfile?.id\" [RecipientGender]=\"userProfile?.gender\"></app-conversation-box>\n                          </ng-template>\n                        </div>\n\n                      </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- End member profile -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-business-counters',\n  templateUrl: './business-counters.component.html',\n  styleUrls: []\n})\nexport class BusinessCountersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { BusinessAccountsService } from 'src/app/_services/users/business-accounts.service';\nimport { BusinessAccount } from 'src/app/_models/Users/business-account';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { LocationsService } from 'src/app/_services/settings/locations.service';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { UserBusinessProfile } from '../../models/user-business-profile';\n\n@Component({\n  selector: 'app-edit-business-account',\n  templateUrl: './edit-business-account.component.html',\n  styleUrls: []\n})\nexport class EditBusinessAccountComponent implements OnInit {\n  userProfile: UserBusinessProfile;\n  edtBusinessAccountForm: FormGroup;\n  isSubmitting: boolean = false;\n  businessAccount = {};\n  citiesList: KeyValuePairResource[] = [];\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private locationsService: LocationsService,\n    private businessAccountsService: BusinessAccountsService) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.userProfile = data['user'];\n      console.log(this.userProfile);\n    });\n    this.initEdtForm();\n    this.loadCitiesList();\n  }\n\n  loadCitiesList() {\n    this.locationsService.getCitiesList().subscribe(\n      result => { this.citiesList = result; },\n      error => { this.alertify.error(error); }\n    );\n  }\n\n  initEdtForm() {\n    this.edtBusinessAccountForm = this.formBuilder.group({\n      id: [this.userProfile.id, Validators.required],\n      arFullName: [this.userProfile.arFullName ?? this.userProfile.fullName, Validators.required],\n      enFullName: [this.userProfile.enFullName, [Validators.required,Validators.pattern(RegularExpression.EnglishLettersRegExp)]],\n      cityId: [this.userProfile.cityId, Validators.required],\n      address: [this.userProfile.businessAccountData?.address, Validators.maxLength(300)],\n      about: [this.userProfile.businessAccountData?.about, Validators.maxLength(1000)],\n      vision: [this.userProfile.businessAccountData?.vision, Validators.maxLength(1000)],\n      message: [this.userProfile.businessAccountData?.message, Validators.maxLength(1000)],\n      instagram: [this.userProfile.socialMediaAccounts?.instagram, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      linkedin: [this.userProfile.socialMediaAccounts?.linkedin, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      twitter: [this.userProfile.socialMediaAccounts?.twitter, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      facebook: [this.userProfile.socialMediaAccounts?.facebook, Validators.pattern(RegularExpression.SocialMediaAccounts)]\n    });\n    if (this.businessAccount) { this.edtBusinessAccountForm.patchValue(this.businessAccount); }\n  }\n\n  get updateValidator() { return this.edtBusinessAccountForm.controls; }\n\n  editBusinessAccount() {\n    this.edtBusinessAccountForm.valid;\n    if (this.edtBusinessAccountForm.valid) {\n      this.isSubmitting = true;\n      this.edtBusinessAccountForm.disable();\n      this.businessAccountsService.updateBusinessAccount(this.userProfile.id, this.edtBusinessAccountForm.value).subscribe(\n        returnBusinessAccount => {\n          this.alertify.success(this.appTranslation.get('Common.Messages.UpdatedSuccessfully'));\n          this.router.navigate(['/profile']);\n        },\n        error => {\n          this.alertify.error(error);\n          this.isSubmitting = false;\n          this.edtBusinessAccountForm.enable();\n        },\n        () => { });\n    } else {\n      this.alertify.success(this.appTranslation.get('Common.Data.Invalid'));\n      this.edtBusinessAccountForm.markAllAsTouched();\n      this.isSubmitting = false;\n    }\n  }\n\n}\n","<app-breadcrumbs title=\"{{userProfile.fullName || userProfile.enFullName }}\" currentPageTitle=\"{{userProfile.fullName || userProfile.enFullName }}\"></app-breadcrumbs>\n\n<article id=\"profile\" class=\"content\">\n    <div class=\"container\">\n        <!-- start Normal Edt BootStrap Form -->\n        <form id =\"formEdtExtendedBusinessAccount\" [formGroup]=\"edtBusinessAccountForm\" (ngSubmit)=\"editBusinessAccount()\">\n            <div class=\"card\">\n                <!-- <div class=\"card-header bg-info\">\n                    <h5><span class=\"fa fa-pencil\"></span>&nbsp;{{'users.Business.businessAccount' | translate }}</h5>\n                </div> -->\n                <div class=\"card-body\">\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-5\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Profile.GeneralInfo' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-group\">\n                        <label id=\"lblCap_txtEditArFullName\" for=\"txtEditArFullName\" class=\"font-weight-bold\" >{{'users.Business.ArFullName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                        <input id=\"txtEditArFullName\" name=\"txtEditArFullName\"  class= \"form-control default\"  maxlength=\"100\" formControlName=\"arFullName\" placeholder= \"{{'users.Business.NamePlaceHolder' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arFullName.errors && updateValidator.arFullName.touched}\"  >\n                        <div *ngIf=\"updateValidator.arFullName.touched && updateValidator.arFullName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"updateValidator.arFullName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label id=\"lblCap_txtEditEnFullName\" for=\"txtEditEnFullName\" class=\"font-weight-bold\" >{{'users.Business.EnFullName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                        <input id=\"txtEditEnFullName\" name=\"txtEditEnFullName\"  \n                        class= \"form-control default\"  maxlength=\"100\" formControlName=\"enFullName\" \n                        placeholder= \"{{'users.Business.NamePlaceHolder' | translate }}\" \n                        [ngClass]=\"{'is-invalid' : updateValidator.enFullName.errors && updateValidator.enFullName.touched}\"\n                        >\n                        <div *ngIf=\"updateValidator.enFullName.touched && updateValidator.enFullName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"updateValidator.enFullName.errors.pattern\">{{'Common.Validation.EnglishName' | translate }}</div>\n                            <div *ngIf=\"updateValidator.enFullName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\"><i class=\"fa fa-building\"></i>&nbsp;{{'users.Business.City' | translate }}</span>\n                            </div>\n                            <select id=\"ddlAddCityId\" name=\"ddlAddCityId\" formControlName=\"cityId\" class=\"form-control\" [ngClass]=\"{'is-invalid' : updateValidator.cityId.errors && updateValidator.cityId.touched }\">\n                                <option value=\"0\" disabled>{{'Common.Form.ChooseFromMenu' | translate }}</option>\n                                <option *ngFor=\"let city of citiesList\" value=\"{{city.id}}\">{{city.name}}</option>\n                            </select>\n                            <div *ngIf=\"updateValidator.cityId.touched && updateValidator.cityId.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.cityId.errors.required\">{{'Common.Validation.SelectedRequiredMsg' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label id=\"lblCap_txtEditAddress\" for=\"txtEditAddress\" class=\"font-weight-bold\" >{{'users.Business.Address' | translate }}</label>\n                        <textarea id=\"txtEditAddress\" name=\"txtEditAddress\" class= \"form-control default\" rows=\"2\"  maxlength=\"300\" formControlName=\"address\" placeholder= \"{{'Common.Form.MaxThreeHundred' | translate:{'value': 'users.Business.Address' | translate} }}\"></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                        <label id=\"lblCap_txtEditAbout\" for=\"txtEditAbout\" class=\"font-weight-bold\" >{{'users.Business.About' | translate }}</label>\n                        <textarea id=\"txtEditAbout\" name=\"txtEditAbout\" class= \"form-control default\" rows=\"5\"  maxlength=\"1000\" formControlName=\"about\" placeholder= \"{{'Common.Form.MaxThousand' | translate:{'value': 'users.Business.About' | translate} }}\"></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                        <label id=\"lblCap_txtEditVision\" for=\"txtEditVision\" class=\"font-weight-bold\" >{{'users.Business.Vision' | translate }}</label>\n                        <textarea id=\"txtEditVision\" name=\"txtEditVision\" class= \"form-control default\" rows=\"3\"  maxlength=\"1000\" formControlName=\"vision\" placeholder= \"{{'Common.Form.MaxThousand' | translate:{'value': 'users.Business.Vision' | translate} }}\" ></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                        <label id=\"lblCap_txtEditMessage\" for=\"txtEditMessage\" class=\"font-weight-bold\" >{{'users.Business.Message' | translate }}</label>\n                        <textarea id=\"txtEditMessage\" name=\"txtEditMessage\" class= \"form-control default\" rows=\"3\"  maxlength=\"1000\" formControlName=\"message\" placeholder= \"{{'Common.Form.MaxThousand' | translate:{'value': 'users.Business.Message' | translate} }}\" ></textarea>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'SocialMedias.Title' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\"><span class=\"fa fa-instagram\"></span></span>\n                            </div>\n                                <input id=\"txtEditInstagram\" name=\"txtEditInstagram\"  class= \"form-control default\"  formControlName=\"instagram\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Instagram' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.instagram.errors && updateValidator.instagram.touched}\"  >\n                                <div *ngIf=\"updateValidator.instagram.touched && updateValidator.instagram.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.instagram.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-linkedin-square\"></span></span>\n                                </div>\n                                <input id=\"txtEditLinkedin\" name=\"txtEditLinkedin\"  class= \"form-control default\"  formControlName=\"linkedin\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Linkedin' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.linkedin.errors && updateValidator.linkedin.touched}\"  >\n                                <div *ngIf=\"updateValidator.linkedin.touched && updateValidator.linkedin.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.linkedin.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-twitter\"></span></span>\n                                </div>\n                                <input id=\"txtEditTwitter\" name=\"txtEditTwitter\"  class= \"form-control default\"  formControlName=\"twitter\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Twitter' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.twitter.errors && updateValidator.twitter.touched}\"  >\n                                <div *ngIf=\"updateValidator.twitter.touched && updateValidator.twitter.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.twitter.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-facebook-square\"></span></span>\n                                </div>\n                                <input id=\"txtEditFacebook\" name=\"txtEditFacebook\"  class= \"form-control default\"  formControlName=\"facebook\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Facebook' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.facebook.errors && updateValidator.facebook.touched}\"  >\n                                <div *ngIf=\"updateValidator.facebook.touched && updateValidator.facebook.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.facebook.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer text-right\">\n                <button id=\"btnEdtExtendedBusinessAccount\" class=\"btn btn-success\" [disabled]=\"isSubmitting || !edtBusinessAccountForm.valid\" type=\"submit\">\n                    <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n                    <i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.UpdateData' | translate}}&nbsp;\n                </button>\n                </div>\n            </div>\n        </form><!-- End Normal Edt BootStrap Form -->\n    </div>\n</article>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LocationsService } from 'src/app/_services/settings/locations.service';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\nimport { HobbiesService } from 'src/app/_services/settings/hobbies.service';\nimport { SkillsService } from 'src/app/_services/settings/skills.service';\nimport { LanguagesService } from 'src/app/_services/settings/languages.service';\nimport { JobCategoriesService } from 'src/app/_services/settings/job-categories.service';\nimport { EducationDegreesService } from 'src/app/_services/settings/education-degrees.service';\nimport { MajorsService } from 'src/app/_services/settings/majors.service';\nimport { UniversitiesService } from 'src/app/_services/settings/universities.service';\nimport { forkJoin, zip } from 'rxjs';\nimport { JobCategoryResult } from 'src/app/_models/Users/job-category';\nimport { KeyValuePairResource, KeyValueChildsPairResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { StudentAccountForEdit } from '../../models/student-account';\nimport { SkillForListDto, SkillType } from 'src/app/_models/Users/user-skill';\nimport { StudentAccountsService } from 'src/app/_services/users/student-accounts.service';\nimport { StudentAccountUpdate } from 'src/app/_models/Users/student-account';\nimport { HijriCalenderService } from 'src/app/_helpers/date-and-time/hijri-calender.service';\nimport { GregorianCalenderFormatterProvider } from 'src/app/_helpers/gregorian-calender.service';\n\n@Component({\n  selector: 'app-edit-jobs-searcher',\n  templateUrl: './edit-jobs-searcher.component.html',\n  styleUrls: []\n})\nexport class EditJobsSearcherComponent implements OnInit {\n  isLoadingOptions = true;\n  citiesOptions: KeyValuePairResource[] = [];\n  hobbiesOptions: KeyValuePairResource[] = [];\n  generalSkillsOptions: SkillForListDto[] = [];\n  personalSkillsOptions: SkillForListDto[] = [];\n  languagesOptions: KeyValuePairResource[] = [];\n  jobCategoriesOptions: JobCategoryResult[] = [];\n  educationDegreesOptions: KeyValueChildsPairResource[] = [];\n  educationLevelsOptions: KeyValuePairResource[] = [];\n  certificatesOptions: KeyValuePairResource[] = [];\n  majorsOptions: KeyValueChildsPairResource[] = [];\n  subMajorsOptions: KeyValuePairResource[] = [];\n  universitiesOptions: KeyValuePairResource[] = [];\n\n  studentAccount: StudentAccountForEdit;\n  maxDate: any;\n  public GenderEnum = Gender;\n  edtStudentAccountForm: FormGroup;\n  isSubmitting: boolean = false;\n  citiesList: KeyValuePairResource[] = [];\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n\n    private locationsService: LocationsService,\n    private hobbiesService: HobbiesService,\n    private skillsService: SkillsService,\n    private languagesService: LanguagesService,\n    private jobCategoriesService: JobCategoriesService,\n    private educationDegreesService: EducationDegreesService,\n    private majorsService: MajorsService,\n    private universitiesService: UniversitiesService,\n    private router: Router,\n    private studentAccountsService: StudentAccountsService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.studentAccount = data['user'];\n    });\n    this.initEdtForm();\n    this.getAllDefualtsValues();\n    this.maxDate = HijriCalenderService.getToday(-17);\n\n  }\n\n  getAllDefualtsValues() {\n    zip(\n      this.locationsService.getCitiesList(),\n      this.hobbiesService.getHobbiesAsList(),\n      this.skillsService.getSkillsAsList(),\n      this.languagesService.getLanguagesAsList(),\n      this.educationDegreesService.getEducationDegreesAsList(),\n      this.educationDegreesService.getCertificatesAsList(),\n      this.majorsService.getMajorsAsList(),\n      this.universitiesService.getUniversitiesAsList(),\n      this.jobCategoriesService.getJobCategoriesAsList(),\n    ).subscribe(\n      ([locations, hobbies, skills, languages, educationDegrees, certificates, majors, universities, jobCategories]) => {\n        this.citiesOptions = locations;\n        this.hobbiesOptions = hobbies;\n        this.generalSkillsOptions = [...(<SkillForListDto[]>skills).filter(s => s.type === SkillType.General)];\n        this.personalSkillsOptions = [...(<SkillForListDto[]>skills).filter(s => s.type === SkillType.Personal)];\n        this.languagesOptions = languages;\n        this.jobCategoriesOptions = jobCategories;\n        this.universitiesOptions = universities;\n        this.certificatesOptions = certificates;\n        this.educationDegreesOptions = <KeyValueChildsPairResource[]>educationDegrees;\n        this.majorsOptions = <KeyValueChildsPairResource[]>majors;\n      },\n      error => { this.alertify.error(error); },\n      () => {\n        this.isLoadingOptions = false;\n        this.onChangeLoadSubMajors(+this.selectedMajor?.majorId ?? 0);\n        this.onChangeLoadEducationLevels(+this.selectedEducationsDegree?.educationDegreeId ?? 0);\n        this.enableAllControls();\n      }\n    );\n  }\n\n  enableAllControls() {\n    this.edtStudentAccountForm.controls.cityId.enable();\n    this.edtStudentAccountForm.controls.jobCategories.enable();\n    this.edtStudentAccountForm.controls.languages.enable();\n    this.edtStudentAccountForm.controls.generalSkills.enable();\n    this.edtStudentAccountForm.controls.personalSkills.enable();\n    this.edtStudentAccountForm.controls.hobbies.enable();\n  }\n\n  initEdtForm() {\n    this.edtStudentAccountForm = this.formBuilder.group({\n      id: [this.studentAccount.id, Validators.required],\n      arFirstName: [this.studentAccount.firstName ?? '', Validators.required],\n      arLastName: [this.studentAccount.lastName ?? '', Validators.required],\n      enFullName: [this.studentAccount.enFullName ?? '', [Validators.required]],\n      gender: [this.studentAccount.gender ?? '', Validators.required],\n      cityId: [{ value: this.studentAccount.cityId ?? '', disabled: true }, Validators.required],\n      birthDay: [HijriCalenderService.dateToNgbDateOrNull(this.studentAccount.birthDay) ?? null],\n      socialStatus: [this.studentAccount.studentAccountData?.socialStatus ?? 0],\n      about: [this.studentAccount.studentAccountData?.about ?? '', Validators.maxLength(500)],\n      dayAvailability: [this.studentAccount.studentAccountData?.dayAvailability ?? 0],\n      jobCategories: [{ value: this.studentAccount.interestsJobs ?? [], disabled: true }],\n      universityId: [this.studentAccount.studentAccountData?.universityId ?? 0],\n      certificateId: [this.studentAccount.studentAccountData?.certificate ?? 0],\n      educationsDegreeId: [this.selectedEducationsDegree?.educationDegreeId ?? 0],\n      educationLevelId: [this.studentAccount.studentAccountData?.educationLevelId ?? 0],\n      majorId: [this.selectedMajor?.majorId ?? 0],\n      subMajorId: [this.studentAccount.studentAccountData?.subMajorId ?? 0],\n      languages: [{ value: this.studentAccount.languages ?? [], disabled: true }],\n      generalSkills: [{ value: this.studentAccount.generalSkills ?? [], disabled: true }],\n      personalSkills: [{ value: this.studentAccount.personalSkills ?? [], disabled: true }],\n      hobbies: [{ value: this.studentAccount.hobbies ?? [], disabled: true }],\n      // status: [''],\n      instagram: [this.studentAccount.socialMediaAccounts?.instagram, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      linkedin: [this.studentAccount.socialMediaAccounts?.linkedin, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      twitter: [this.studentAccount.socialMediaAccounts?.twitter, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      facebook: [this.studentAccount.socialMediaAccounts?.facebook, Validators.pattern(RegularExpression.SocialMediaAccounts)]\n    });\n  }\n\n  get selectedEducationsDegree() { return this.studentAccount.studentAccountData?.educationLevel; }\n  get selectedMajor() { return this.studentAccount.studentAccountData?.subMajor; }\n\n  onChangeLoadEducationLevels(eduDegreeId: number) {\n    console.log('eduDegreeId:', eduDegreeId);\n    this.educationLevelsOptions = [];\n    if (eduDegreeId > 0)\n      this.educationLevelsOptions = [...(this.educationDegreesOptions.find(ed => ed.id == +eduDegreeId)?.childs)];\n  }\n\n  onChangeLoadSubMajors(majorId: number) {\n    console.log('majorId:', majorId);\n    this.subMajorsOptions = [];\n    if (majorId > 0)\n      this.subMajorsOptions = [...(this.majorsOptions.find(ed => ed.id == +majorId)?.childs)];\n  }\n\n  get updateValidator() { return this.edtStudentAccountForm.controls; }\n\n  editStudentAccount() {\n    this.edtStudentAccountForm.valid;\n    console.log(this.edtStudentAccountForm.value);\n    console.log(\"Invalid Controls:\", this.findInvalidControls());\n    let birthDay = HijriCalenderService.tryConvertGregorianToDate(this.edtStudentAccountForm.controls.birthDay.value);\n    if (this.edtStudentAccountForm.valid) {\n      this.isSubmitting = true;\n      this.edtStudentAccountForm.disable();\n      let updatedStudentAccount = {} as StudentAccountUpdate;\n      Object.assign(updatedStudentAccount, this.edtStudentAccountForm.value);\n      updatedStudentAccount.birthDay = birthDay;\n      this.studentAccountsService.updateStudentAccount(this.studentAccount.id, updatedStudentAccount).subscribe(\n        returnStudentAccount => {\n          this.alertify.success(this.appTranslation.get('Common.Messages.UpdatedSuccessfully'));\n          this.router.navigate(['/profile']);\n        },\n        error => { this.alertify.error(error); this.isSubmitting = false; this.edtStudentAccountForm.enable(); },\n        () => { });\n    } else {\n      this.alertify.warning(this.appTranslation.get('Common.Data.Invalid'));\n      this.edtStudentAccountForm.markAllAsTouched();\n      this.isSubmitting = false;\n    }\n  }\n\n  // console.log(\"Invalid Controls:\", this.findInvalidControls());\n  public findInvalidControls() {\n    const invalid = [];\n    const controls = this.edtStudentAccountForm.controls;\n    for (const name in controls) {\n      if (controls[name].invalid) {\n        invalid.push(name);\n      }\n    }\n    return invalid;\n  }\n\n}\n","<app-breadcrumbs title=\"{{studentAccount.firstName || studentAccount.enFullName }}\" currentPageTitle=\"{{studentAccount.firstName || studentAccount.enFullName }}\"></app-breadcrumbs>\n\n<article id=\"profile\" class=\"content\">\n    <div class=\"container\">\n        <!-- start Normal Edt BootStrap Form -->\n\n        <form id =\"formEdtExtendedStudentAccount\" [formGroup]=\"edtStudentAccountForm\" (ngSubmit)=\"editStudentAccount()\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-5\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Profile.GeneralInfo' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.FirstName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                            <input class=\"form-control\"  maxlength=\"70\" formControlName=\"arFirstName\" placeholder= \"{{'users.Students.FirstName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arFirstName.errors && updateValidator.arFirstName.touched}\"  >\n                            <div *ngIf=\"updateValidator.arFirstName.touched && updateValidator.arFirstName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.arFirstName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.LastName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                            <input class=\"form-control\"  maxlength=\"70\" formControlName=\"arLastName\" placeholder= \"{{'users.Students.LastName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arLastName.errors && updateValidator.arLastName.touched}\"  >\n                            <div *ngIf=\"updateValidator.arLastName.touched && updateValidator.arLastName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.arLastName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\">{{'users.Students.EnFullName' | translate }}<strong class=\"text-danger\">*</strong></span>\n                            </div>\n                            <input class=\"form-control\"  maxlength=\"100\" formControlName=\"enFullName\" placeholder= \"{{'users.Students.EnFullName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.enFullName.errors && updateValidator.enFullName.touched}\"  >\n                            <div *ngIf=\"updateValidator.enFullName.touched && updateValidator.enFullName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.enFullName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-building\"></i>&nbsp;{{'users.Students.City' | translate }}<strong class=\"text-danger\">*</strong></span>\n                                </div>\n                                <select formControlName=\"cityId\" class=\"form-control\" [ngClass]=\"{'is-invalid' : updateValidator.cityId.errors && updateValidator.cityId.touched }\">\n                                    <option value=\"0\" disabled>{{'Common.Form.ChooseFromMenu' | translate }}</option>\n                                    <option *ngFor=\"let city of citiesOptions\" value=\"{{city.id}}\">{{city.name}}</option>\n                                </select>\n                                <div *ngIf=\"updateValidator.cityId.touched && updateValidator.cityId.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.cityId.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend \">\n                                    <span class=\"input-group-text px-1\">{{'users.Students.Gender' | translate }}<strong class=\"text-danger\">*</strong></span>\n                                </div>\n                                <label class=\"form-control px-1 text-center\">\n                                  <input id=\"male\" type=\"radio\" name=\"gender\" [value]=\"1\" formControlName=\"gender\">\n                                  <i class=\"fa fa-lg fa-male text-sky px-1\"></i>{{'Signup.IAmMan' | translate }}\n                                </label>\n                                <label class=\"form-control px-1 text-center\">\n                                    <input id=\"female\" type=\"radio\" name=\"gender\" [value]=\"2\" formControlName=\"gender\">\n                                    <i class=\"fa fa-lg fa-female text-pink px-1\"></i>{{'Signup.IAmWoman' | translate }}\n                                </label>\n                                <div *ngIf=\"updateValidator.gender.touched && updateValidator.gender.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.gender.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                   <span class=\"input-group-text\">{{'users.Students.BirthDay' | translate }}</span>\n                                </div>\n                                <input ngbDatepicker #birthDayDatepicker=\"ngbDatepicker\" [maxDate]=\"maxDate\" [minDate]=\"{year: 1950, month: 1, day: 1}\" [firstDayOfWeek]=\"0\" class=\"form-control\"  formControlName=\"birthDay\" readonly (click)=\"birthDayDatepicker?.toggle()\">\n                                <div class=\"input-group-append\">\n                                    <button class=\"btn btn-outline-secondary calendar\" (click)=\"birthDayDatepicker?.toggle()\" type=\"button\"><i class=\"fa fa-calendar\"></i></button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend \">\n                                    <span class=\"input-group-text px-1\">{{'users.Students.SocialStatus' | translate }}</span>\n                                </div>\n                                <label class=\"form-control px-1 text-center\">\n                                    <input id=\"single\" type=\"radio\" name=\"socialStatus\" [value]=\"1\" formControlName=\"socialStatus\">\n                                    {{'users.Students.Single' | translate }}\n                                </label>\n                                <label class=\"form-control px-1 text-center\">\n                                    <input id=\"married\" type=\"radio\" name=\"socialStatus\" [value]=\"2\" formControlName=\"socialStatus\">\n                                    {{'users.Students.Married' | translate }}\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.About' | translate }}</label>\n                        <textarea class=\"form-control\" rows=\"3\"  maxlength=\"500\" formControlName=\"about\" placeholder= \"{{'Common.Form.MaxThousand' | translate:{'value': 'users.Students.About' | translate} }}\"></textarea>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.JobInterests' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.DayAvailability' | translate }}<strong class=\"text-danger\">*</strong></label>\n                        <div class=\"input-group\">\n                            <label class=\"form-control px-1 text-center\">\n                                <input id=\"single\" type=\"radio\" name=\"dayAvailability\" [value]=\"1\" formControlName=\"dayAvailability\">\n                                {{'users.Students.Morning' | translate }}\n                            </label>\n                            <label class=\"form-control px-1 text-center\">\n                                <input id=\"married\" type=\"radio\" name=\"dayAvailability\" [value]=\"2\" formControlName=\"dayAvailability\">\n                                {{'users.Students.Evening' | translate }}\n                            </label>\n                            <label class=\"form-control px-1 text-center\">\n                                <input id=\"married\" type=\"radio\" name=\"dayAvailability\" [value]=\"3\" formControlName=\"dayAvailability\">\n                                {{'users.Students.AllDay' | translate }}\n                            </label>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.JobInterests' | translate }}</label>\n                        <ng-select [loading]=\"isLoadingOptions\" bindValue=\"id\" bindLabel=\"name\" [multiple]=\"true\" [items]=\"jobCategoriesOptions\"\n                                formControlName=\"jobCategories\" [clearable]=\"false\" [selectableGroup]=\"true\" [closeOnSelect]=\"false\"\n                                placeholder=\"{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.JobInterests' | translate} }}\" class=\"custom\">\n                            <ng-template ng-loadingspinner-tmp><div class=\"lds-ellipsis mx-2\"><div></div><div></div><div></div><div></div></div></ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [checked]=\"item$.selected\"/>&nbsp;{{item.name}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.Languages' | translate }}</label>\n                        <ng-select [loading]=\"isLoadingOptions\" bindValue=\"id\" bindLabel=\"name\" [multiple]=\"true\" [items]=\"languagesOptions\"\n                                formControlName=\"languages\" [clearable]=\"false\" [selectableGroup]=\"true\" [closeOnSelect]=\"false\"\n                                placeholder=\"{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.Languages' | translate} }}\" class=\"custom\">\n                            <ng-template ng-loadingspinner-tmp><div class=\"lds-ellipsis mx-2\"><div></div><div></div><div></div><div></div></div></ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [checked]=\"item$.selected\"/>&nbsp;{{item.name}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.Educations' | translate }}</span>\n                    </h4>\n                    \n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.University' | translate }}</label>\n                            <select formControlName=\"universityId\" class=\"form-control\" >\n                                <option [value]=\"'' || 0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.University' | translate} }}</option>\n                                <option *ngFor=\"let university of universitiesOptions\" value=\"{{university.id}}\">{{university.name}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.Certificate' | translate }}</label>\n                            <select formControlName=\"certificateId\" class=\"form-control\" >\n                                <option [value]=\"'' || 0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.Certificate' | translate} }}</option>\n                                <option *ngFor=\"let certificate of certificatesOptions\" value=\"{{certificate.id}}\">{{certificate.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.EducationDegree' | translate }}</label>\n                            <select formControlName=\"educationsDegreeId\" class=\"form-control\" (change)=\"onChangeLoadEducationLevels($event.target.value)\">\n                                <option [value]=\"'' || 0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.EducationDegree' | translate} }}</option>\n                                <option *ngFor=\"let educationDegree of educationDegreesOptions\" value=\"{{educationDegree.id}}\">{{educationDegree.name}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.EducationLevel' | translate }}</label>\n                            <select formControlName=\"educationLevelId\" class=\"form-control\" >\n                                <option [value]=\"'' || 0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.EducationLevel' | translate} }}</option>\n                                <option *ngFor=\"let educationLevel of educationLevelsOptions\" value=\"{{educationLevel.id}}\">{{educationLevel.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.Major' | translate }}</label>\n                            <select formControlName=\"majorId\" class=\"form-control\" (change)=\"onChangeLoadSubMajors($event.target.value)\">\n                                <option [value]=\"'' || 0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.Major' | translate} }}</option>\n                                <option *ngFor=\"let major of majorsOptions\" value=\"{{major.id}}\">{{major.name}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.SubMajor' | translate }}</label>\n                            <select formControlName=\"subMajorId\" class=\"form-control\" >\n                                <option [value]=\"'' || 0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.SubMajor' | translate} }}</option>\n                                <option *ngFor=\"let subMajor of subMajorsOptions\" value=\"{{subMajor.id}}\">{{subMajor.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.Skills' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.GeneralSkills' | translate }}</label>\n                        <ng-select [loading]=\"isLoadingOptions\" bindValue=\"id\" bindLabel=\"name\" [multiple]=\"true\" [items]=\"generalSkillsOptions\"\n                                formControlName=\"generalSkills\" [clearable]=\"false\" [selectableGroup]=\"true\" [closeOnSelect]=\"false\"\n                                placeholder=\"{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.GeneralSkills' | translate} }}\" class=\"custom\">\n                            <ng-template ng-loadingspinner-tmp><div class=\"lds-ellipsis mx-2\"><div></div><div></div><div></div><div></div></div></ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [checked]=\"item$.selected\"/>&nbsp;{{item.name}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.PersonalSkills' | translate }}</label>\n                        <ng-select [loading]=\"isLoadingOptions\" bindValue=\"id\" bindLabel=\"name\" [multiple]=\"true\" [items]=\"personalSkillsOptions\"\n                                formControlName=\"personalSkills\" [clearable]=\"false\" [selectableGroup]=\"true\" [closeOnSelect]=\"false\"\n                                placeholder=\"{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.PersonalSkills' | translate} }}\" class=\"custom\">\n                            <ng-template ng-loadingspinner-tmp><div class=\"lds-ellipsis mx-2\"><div></div><div></div><div></div><div></div></div></ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [checked]=\"item$.selected\"/>&nbsp;{{item.name}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.Hobbies' | translate }}</label>\n                        <ng-select [loading]=\"isLoadingOptions\" bindValue=\"id\" bindLabel=\"name\" [multiple]=\"true\" [items]=\"hobbiesOptions\"\n                                formControlName=\"hobbies\" [clearable]=\"false\" [selectableGroup]=\"true\" [closeOnSelect]=\"false\"\n                                placeholder=\"{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.Hobbies' | translate} }}\" class=\"custom\">\n                            <ng-template ng-loadingspinner-tmp><div class=\"lds-ellipsis mx-2\"><div></div><div></div><div></div><div></div></div></ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [checked]=\"item$.selected\"/>&nbsp;{{item.name}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'SocialMedias.Title' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-instagram\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"instagram\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Instagram' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.instagram.errors && updateValidator.instagram.touched}\"  >\n                                <div *ngIf=\"updateValidator.instagram.touched && updateValidator.instagram.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.instagram.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-linkedin-square\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"linkedin\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Linkedin' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.linkedin.errors && updateValidator.linkedin.touched}\"  >\n                                <div *ngIf=\"updateValidator.linkedin.touched && updateValidator.linkedin.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.linkedin.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-twitter\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"twitter\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Twitter' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.twitter.errors && updateValidator.twitter.touched}\"  >\n                                <div *ngIf=\"updateValidator.twitter.touched && updateValidator.twitter.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.twitter.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-facebook-square\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"facebook\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Facebook' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.facebook.errors && updateValidator.facebook.touched}\"  >\n                                <div *ngIf=\"updateValidator.facebook.touched && updateValidator.facebook.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.facebook.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer text-right\">\n                    <button class=\"btn btn-success\"  type=\"submit\" [disabled]=\"isSubmitting\">\n                        <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n                        <i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.UpdateData' | translate}}&nbsp;\n                    </button>\n                    <!-- [disabled]=\"isSubmitting || !edtStudentAccountForm.valid\" -->\n                </div>\n            </div>\n        </form><!-- End Normal Edt BootStrap Form -->\n    </div>\n</article>\n\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\n\n@Component({\n  selector: 'app-education-details',\n  templateUrl: './education-details.component.html',\n  styleUrls: []\n})\nexport class EducationDetailsComponent implements OnInit {\n  @Input('UserProfileData') userProfile: UserProfileResult;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\" >\n    <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.Educations' | translate }}</span>\n    </h4>\n    <div class=\"col-md-12 pl-4\">\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.Students.University' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.studentAccountData?.university?.name}}</p>\n            </div>\n        </div>\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.Students.Certificate' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.studentAccountData?.certificateName}}</p>\n            </div>\n        </div>\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.Students.EducationDegree' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.studentAccountData?.educationLevel?.educationDegree?.name}}</p>\n            </div>\n        </div>\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.Students.EducationLevel' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.studentAccountData?.educationLevel?.name}}</p>\n            </div>\n        </div>\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.Students.Major' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.studentAccountData?.subMajor?.major?.name}}</p>\n            </div>\n        </div>\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.Students.SubMajor' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.studentAccountData?.subMajor?.name}}</p>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { UserJobCategoryResult } from 'src/app/_models/Users/job-category';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\n\n@Component({\n  selector: 'app-job-interests',\n  templateUrl: './job-interests.component.html',\n  styleUrls: []\n})\nexport class JobInterestsComponent implements OnInit {\n  @Input('UserProfileData') userProfile: UserProfileResult;\n  @Input('Jobs') userJobInterests: UserJobCategoryResult[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\" >\n    <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.JobInterests' | translate }}</span>\n    </h4>\n    <div class=\"col-md-12 pl-4\">\n        <div class=\"form-group row my-0\">\n            <label class=\"col-form-label col-sm-3 profile-info-title\">{{'users.Students.DayAvailability' | translate }}</label>\n            <div class=\"col-sm-9\">\n                <p class=\"form-control-plaintext profile-info-details\"><i class=\"fa fa-clock-o\"></i>&nbsp;&nbsp;{{userProfile?.studentAccountData?.dayAvailabilityName}}</p>\n            </div>\n        </div>\n    </div>\n    <ng-container *ngIf=\"userJobInterests?.length > 0; else nothingTemplate\">\n        <div class=\"col-12 my-2\">\n            <span class=\"h6 badge-xl bg-info\" *ngFor=\"let job of userJobInterests; let i = index;\">{{job?.jobCategory?.name}}</span>\n        </div>\n    </ng-container>\n    <ng-template #nothingTemplate>\n        <div class=\"col-12 my-2\">\n            <p class=\"form-control-plaintext text-break text-secondary pt-0\">{{'Common.Data.NoData' | translate }}</p>\n        </div>\n    </ng-template>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-jobs-searcher-counters',\n  templateUrl: './jobs-searcher-counters.component.html',\n  styleUrls: []\n})\nexport class JobsSearcherCountersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/_services/users/User.service';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { NgbNavChangeEvent } from '@ng-bootstrap/ng-bootstrap';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\nimport { MessageWithObject } from 'src/app/_models/data/actions-result';\n\n@Component({\n  selector: 'app-jobs-searcher-profile',\n  templateUrl: './jobs-searcher-profile.component.html',\n  styleUrls: []\n})\nexport class JobsSearcherProfileComponent implements OnInit {\n  @Input() userProfile: UserProfileResult;\n  @ViewChild('chatboxTab') chatboxTab: ElementRef<HTMLElement>;\n  isCurrentUserCanStartConversationWithThisUser: boolean = false;\n  conversationNotAllowed: string = null;\n\n  constructor(private router: Router, private route: ActivatedRoute, private userService: UserService, private appTranslation: AppTranslationService,\n    private alertify: AlertifyService, private authService: AuthService, private messagesService: MessagesService) { }\n\n  ngOnInit(): void {\n    if (!this.userProfile) {\n      this.alertify.warning('يوجد مشكلة في عرض بيانات المستخدم أو لا تملك صلاحية مخوله للوصول الى ملفه');\n      this.router.navigate(['']);\n    } else {\n      this.checkIfCurrentUserCanStartChat();\n    }\n  }\n\n  get isCurrentUserProfile(): boolean {\n    return this.authService.isCurrentUserProfile(this.userProfile.id);\n  }\n\n  checkIfCurrentUserCanStartChat() {\n    if (!this.isCurrentUserProfile) {\n      this.messagesService.checkIfCurrentUserCanStartChatWithTheOtherUser(this.authService.currentUser.id, this.userProfile.id).subscribe(\n        (result: MessageWithObject) => {\n          if (result.data === true)\n            this.isCurrentUserCanStartConversationWithThisUser = true;\n          else\n            this.conversationNotAllowed = result.message;\n        },\n        error => {\n          this.conversationNotAllowed = error;\n          this.isCurrentUserCanStartConversationWithThisUser = false;\n        }\n      );\n    }\n  }\n\n  getGenderStyle() {\n    if (<Gender>this.userProfile.gender === <Gender>Gender.male) {\n      return 'text-sky';\n    } else if (<Gender>this.userProfile.gender === <Gender>Gender.female) {\n      return 'text-pink';\n    }\n    else { return '' }\n  }\n\n  showChatBox() {\n    this.chatboxTab.nativeElement.click()\n  }\n\n\n}\n","<app-breadcrumbs title=\"\" currentPageTitle=\"ملفي الشخصي\"></app-breadcrumbs>\n\n<!-- ======= member profile ======= -->\n<section id=\"profile\" class=\"profile\">\n    <div class=\"container\">\n        <div class=\"row\" id=\"user-profile\">\n            <div class=\"col-lg-3 col-md-4 col-sm-4 p-0\">\n                <div class=\"main-box\">\n                    <h4 class=\"user-name\" [ngClass]=\"getGenderStyle()\">{{userProfile.fullName}}</h4>\n                    <div class=\"profile-status\">\n                        <i class=\"fa fa-check-circle\"></i>&nbsp;{{userProfile?.studentAccountData?.accountStatusName}}\n                    </div>\n\n                    <app-profile-image [UserProfileData]=\"userProfile\"></app-profile-image>\n                    <app-profile-stars [Rating]=\"userProfile?.totalRating\"></app-profile-stars>\n                    <app-since-profile [MemberSince]=\"userProfile?.createdDate\" [LastActivity]=\"userProfile?.lastActive\"></app-since-profile>\n                    <app-jobs-searcher-counters></app-jobs-searcher-counters>\n\n                    <div *ngIf=\"!isCurrentUserProfile\" class=\"profile-message-btn center-block text-center\">\n                        <a class=\"btn btn-success text-white\" (click)=\"showChatBox()\">\n                            <i class=\"fa fa-envelope\"></i> {{'Chatbox.SendMessage' | translate }}\n                        </a>\n                    </div>\n\n                </div>\n            </div>\n\n            <div class=\"col-lg-9 col-md-8 col-sm-8 p-0 px-md-2\">\n                <div class=\"main-box \">\n                    <ul class=\"nav nav-tabs\" id=\"user-tab\" role=\"tablist\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link active\" id=\"about-user-tab\" data-toggle=\"tab\" href=\"#aboutUser\" role=\"tab\" aria-controls=\"about-user-tab\" aria-selected=\"true\">بياناتي</a>\n                        </li>\n                        <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"ratings-history-tab\" data-toggle=\"tab\" href=\"#ratings-history\" role=\"tab\" aria-controls=\"ratings-history\" aria-selected=\"false\">التقييمات</a>\n                        </li>\n                        <li *ngIf=\"!isCurrentUserProfile\" class=\"nav-item\">\n                          <a #chatboxTab class=\"nav-link\" id=\"chatbox-tab\" data-toggle=\"tab\" href=\"#chatbox\" role=\"tab\" aria-controls=\"chatbox\" aria-selected=\"false\">المحادثة</a>\n                        </li>\n                    </ul>\n\n                    <div class=\"tab-content  p-2\" id=\"myTabContent\">\n                        <div class=\"tab-pane fade show active\" id=\"aboutUser\" role=\"tabpanel\" aria-labelledby=\"about-user-tab\">\n                            <div class=\"d-flex justify-content-between align-items-start mb-2\">\n                                <h4 class=\"text-left\"><span class=\"section-header-behind-line behind-line-gray px-2 pb-1\">{{'users.Students.PersonalInfo' | translate }}</span></h4>\n                                <a *ngIf=\"isCurrentUserProfile\" [routerLink]=\"['/profile' , 'searcher', 'edit' ]\" class=\"btn btn-primary btn-sm edit-profile\">\n                                    <i class=\"fa fa-pencil-square fa-lg\"></i> {{'Common.CRUD.Update' | translate }}\n                                </a>\n                            </div>\n                            <app-personal-details [UserProfileData]=\"userProfile\" ></app-personal-details>\n                            <app-member-contact *ngIf=\"userProfile?.displayContactInfo\" [UserProfileData]=\"userProfile\"></app-member-contact>\n                            <app-job-interests [UserProfileData]=\"userProfile\" [Jobs]=\"userProfile?.interestsJobs\"></app-job-interests>\n                            <app-education-details [UserProfileData]=\"userProfile\"></app-education-details>\n                            <app-language-skills [Languages]=\"userProfile?.languages\"></app-language-skills>\n                            <div class=\"row\">\n                                <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n                                    <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.Skills' | translate }}</span>\n                                </h4>\n                                <div class=\"col-md-12 pl-4\">\n                                    <app-personal-skills [PersonalSkills]=\"userProfile?.personalSkills\"></app-personal-skills>\n                                    <app-general-skills [GeneralSkills]=\"userProfile?.generalSkills\"></app-general-skills>\n                                    <app-hoppies  [Hoppies]=\"userProfile?.hobbies\"></app-hoppies>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"tab-pane fade\" id=\"ratings-history\" role=\"tabpanel\" aria-labelledby=\"ratings-history-tab\">\n                            <app-rating-and-reviews-list [RatingsAndReviews]=\"userProfile.ratingsGot\"></app-rating-and-reviews-list>\n                        </div>\n\n                        <div *ngIf=\"!isCurrentUserProfile\" class=\"tab-pane fade profile-chatbox\" id=\"chatbox\" role=\"tabpanel\" aria-labelledby=\"chatbox-tab\">\n                          <ng-container *ngIf=\"!isCurrentUserCanStartConversationWithThisUser; else conversationBox\">\n                            <div *ngIf=\"conversationNotAllowed\"  class=\"alert alert-danger text-center\" role=\"alert\">{{conversationNotAllowed}}</div>\n                            <div *ngIf=\"!conversationNotAllowed\"  class=\"alert alert-warning text-center\" role=\"alert\"><span class=\"spinner-border spinner-border-sm\" role=\"status\"></span>&nbsp;&nbsp;{{'Common.Data.Loading' | translate}}</div>\n\n                          </ng-container>\n                          <ng-template #conversationBox>\n                            <app-conversation-box [RecipientId]=\"userProfile?.id\" [RecipientGender]=\"userProfile?.gender\"></app-conversation-box>\n                          </ng-template>\n                        </div>\n\n                      </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- End member profile -->\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserSkillResult } from 'src/app/_models/Users/user-skill';\n\n@Component({\n  selector: 'app-general-skills',\n  templateUrl: './general-skills.component.html',\n  styleUrls: []\n})\nexport class GeneralSkillsComponent implements OnInit {\n  @Input('GeneralSkills') UserSkills: UserSkillResult[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"form-group row my-0\">\n    <label class=\"col-form-label profile-info-title pb-0\">{{'users.Students.GeneralSkills' | translate }}</label>\n    <ng-container *ngIf=\"UserSkills?.length > 0; else nothingTemplate\">\n        <div class=\"col-12 my-2\">\n            <div class=\"badge-xl bg-info mb-1 profile-info-details\" *ngFor=\"let skill of UserSkills; let i = index;\">\n                {{skill?.skill?.name}}\n            </div>\n        </div>\n    </ng-container>\n    <ng-template #nothingTemplate>\n        <p class=\"form-control-plaintext text-break text-secondary pt-0\">{{'Common.Data.NoData' | translate }}</p>\n    </ng-template>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { UserHobbyResult } from 'src/app/_models/Users/hobby';\n\n@Component({\n  selector: 'app-hoppies',\n  templateUrl: './hoppies.component.html',\n  styleUrls: []\n})\nexport class HoppiesComponent implements OnInit {\n  @Input('Hoppies') UserHoppies: UserHobbyResult[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"form-group row my-0\">\n    <label class=\"col-form-label profile-info-title pb-0\">{{'users.Students.Hobbies' | translate }}</label>\n    <ng-container *ngIf=\"UserHoppies?.length > 0; else nothingTemplate\">\n        <div class=\"col-12 my-2\">\n            <div class=\"badge-xl bg-info mb-1 profile-info-details\" *ngFor=\"let hobby of UserHoppies; let i = index;\">\n                {{hobby?.hobby?.name}}\n            </div>\n        </div>\n\n\n      \n    </ng-container>\n    <ng-template #nothingTemplate>\n        <p class=\"form-control-plaintext text-break text-secondary pt-0\">{{'Common.Data.NoData' | translate }}</p>\n    </ng-template>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { UserSkillResult } from 'src/app/_models/Users/user-skill';\n\n@Component({\n  selector: 'app-personal-skills',\n  templateUrl: './personal-skills.component.html',\n  styleUrls: []\n})\nexport class PersonalSkillsComponent implements OnInit {\n  @Input('PersonalSkills') UserSkills: UserSkillResult[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"form-group row my-0\">\n    <label class=\"col-form-label profile-info-title pb-0\">{{'users.Students.PersonalSkills' | translate }}</label>\n    <ng-container *ngIf=\"UserSkills?.length > 0; else nothingTemplate\">\n        <div class=\"col-12 my-2\">\n            <div class=\"badge-xl bg-info mb-1 profile-info-details\" *ngFor=\"let skill of UserSkills; let i = index;\">\n                {{skill?.skill?.name}}\n            </div>\n        </div>\n    </ng-container>\n    <ng-template #nothingTemplate>\n        <p class=\"form-control-plaintext text-break text-secondary pt-0\">{{'Common.Data.NoData' | translate }}</p>\n    </ng-template>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//services\nimport { MemberProfileResolver } from 'src/app/_resolvers/Users/member-profile.resolver';\nimport { EditMemberProfileResolver } from './resolvers/edit-member-profile.resolver';\n\n\n//Components\nimport { ProfileComponent } from './profile.component';\nimport { EditBusinessAccountComponent } from './business/edit-business-account/edit-business-account.component';\nimport { EditJobsSearcherComponent } from './jobs-searcher/edit-jobs-searcher/edit-jobs-searcher.component';\nimport { ModifyTaskerProfileComponent } from './taskers/modify-tasker-profile/modify-tasker-profile.component';\nimport { CreatePortfolioComponent } from './taskers/portfolios/create-portfolio/create-portfolio.component';\nimport { MessagesListComponent } from './shared/chats/messages-list/messages-list.component';\nimport { MessageResolver } from 'src/app/_resolvers/chats/message.resolver';\nimport { PortfolioDetailsComponent } from './taskers/portfolios/portfolio-details/portfolio-details.component';\nimport { ModifyPortfolioComponent } from './taskers/portfolios/modify-portfolio/modify-portfolio.component';\nimport { ModifyVisitorProfileComponent } from './visitor/modify-visitor-profile/modify-visitor-profile.component';\n\nconst routes: Routes = [\n  { path: '', component: ProfileComponent, resolve: { user: MemberProfileResolver } },\n  { path: 'messages', component: MessagesListComponent, resolve: { messagesList: MessageResolver }  },\n  { path: ':userId', component: ProfileComponent, resolve: { user: MemberProfileResolver } },\n  { path: 'business/edit', component: EditBusinessAccountComponent, resolve: { user: EditMemberProfileResolver } },\n  { path: 'searcher/edit', component: EditJobsSearcherComponent, resolve: { user: EditMemberProfileResolver } },\n  { path: 'tasker/edit', component: ModifyTaskerProfileComponent, resolve: { user: EditMemberProfileResolver } },\n  { path: 'visitor/edit', component: ModifyVisitorProfileComponent, resolve: { user: EditMemberProfileResolver } },\n  { path: 'portfolio/new', component: CreatePortfolioComponent},\n  { path: 'portfolio/:portfolioId', component: PortfolioDetailsComponent},\n  { path: 'portfolio/edit/:portfolioId', component: ModifyPortfolioComponent},\n  { path: 'portfolio/:portfolioId/:title', component: PortfolioDetailsComponent},\n  { path: ':userId/portfolio/:portfolioId', component: PortfolioDetailsComponent},\n  { path: ':userId/portfolio/:portfolioId/:title', component: PortfolioDetailsComponent},\n  { path: ':userId/:username', component: ProfileComponent, resolve: { user: MemberProfileResolver } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { AccountService } from 'src/app/_services/users/account.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { AccountType } from 'src/app/_models/Users/user-for-register';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: []\n})\nexport class ProfileComponent implements OnInit {\n  userProfile: UserProfileResult;\n  AccountTypeEnum = AccountType;\n\n  constructor(private accountService: AccountService, private route: ActivatedRoute, private alertify: AlertifyService,\n    private authService: AuthService, private appTranslation: AppTranslationService) { \n    }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.userProfile = data['user'];\n    });\n  }\n\n  isBusinessAccount() {\n    if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.businessAccount) {\n      return true;\n    }\n    return false;\n  }\n\n  isStudentAccount() {\n    if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.studentAccount) {\n      return true;\n    }\n    return false;\n  }\n\n  isTaskerAccount() {\n    if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.taskerAccount) {\n      return true;\n    }\n    return false;\n  }\n\n  isVisitorAccount() {\n    if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.visitorAccount) {\n      return true;\n    }\n    return false;\n  }\n\n  isManagerAccount() {\n    if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.managementAccount) {\n      return true;\n    }\n    return false;\n  }\n\n}\n","<ng-container *ngIf=\"isBusinessAccount()\">\n    <app-business-account-profile [userProfile]=\"userProfile\"></app-business-account-profile>\n</ng-container>\n\n<ng-container *ngIf=\"isStudentAccount()\">\n    <app-jobs-searcher-profile [userProfile]=\"userProfile\"></app-jobs-searcher-profile>\n</ng-container>\n\n<ng-container *ngIf=\"isTaskerAccount()\">\n    <app-tasker-profile [userProfile]=\"userProfile\"></app-tasker-profile>\n</ng-container>\n\n<ng-container *ngIf=\"isManagerAccount() || isVisitorAccount()\">\n    <app-visitor-profile [userProfile]=\"userProfile\"></app-visitor-profile>\n</ng-container>","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { ProfileRoutingModule } from './profile-routing.module';\n\n//services\nimport { BusinessAccountsService } from 'src/app/_services/users/business-accounts.service';\nimport { MemberProfileResolver } from 'src/app/_resolvers/Users/member-profile.resolver';\nimport { EditMemberProfileResolver } from './resolvers/edit-member-profile.resolver';\nimport { MessageResolver } from 'src/app/_resolvers/chats/message.resolver';\nimport { JobOffersService } from '../jobs/_services/job-offers.service';\n\n// component\nimport { ProfileComponent } from './profile.component';\n\nimport { MemberContactComponent } from './shared/member-contact/member-contact.component';\nimport { SocialMediaComponent } from './shared/member-contact/social-media/social-media.component';\n\nimport { PersonalDetailsComponent } from './shared/personal-details/personal-details.component';\nimport { LanguageSkillsComponent } from './shared/language-skills/language-skills.component';\nimport { PersonalSkillsComponent } from './jobs-searcher/skills/personal-skills/personal-skills.component';\nimport { GeneralSkillsComponent } from './jobs-searcher/skills/general-skills/general-skills.component';\nimport { HoppiesComponent } from './jobs-searcher/skills/hoppies/hoppies.component';\nimport { EducationDetailsComponent } from './jobs-searcher/education-details/education-details.component';\n\nimport { BusinessAccountProfileComponent } from './business/business-account-profile/business-account-profile.component';\nimport { BusinessAccountDetailsComponent } from './business/business-account-details/business-account-details.component';\nimport { JobsSearcherProfileComponent } from './jobs-searcher/jobs-searcher-profile/jobs-searcher-profile.component';\nimport { ProfileStarsComponent } from './shared/profile-stars/profile-stars.component';\nimport { ProfileImageComponent } from './shared/profile-image/profile-image.component';\nimport { EditBusinessAccountComponent } from './business/edit-business-account/edit-business-account.component';\nimport { SinceProfileComponent } from './shared/since-profile/since-profile.component';\nimport { BusinessCountersComponent } from './business/business-counters/business-counters.component';\nimport { JobsSearcherCountersComponent } from './jobs-searcher/jobs-searcher-counters/jobs-searcher-counters.component';\nimport { EditJobsSearcherComponent } from './jobs-searcher/edit-jobs-searcher/edit-jobs-searcher.component';\nimport { JobInterestsComponent } from './jobs-searcher/job-interests/job-interests.component';\nimport { TaskerProfileComponent } from './taskers/tasker-profile/tasker-profile.component';\nimport { PortfoliosListComponent } from './taskers/portfolios/portfolios-list/portfolios-list.component';\nimport { PortfolioDetailsComponent } from './taskers/portfolios/portfolio-details/portfolio-details.component';\nimport { CreatePortfolioComponent } from './taskers/portfolios/create-portfolio/create-portfolio.component';\nimport { ModifyTaskerProfileComponent } from './taskers/modify-tasker-profile/modify-tasker-profile.component';\nimport { UserTasksListComponent } from './taskers/user-tasks/user-tasks-list/user-tasks-list.component';\nimport { NewUserTaskModalComponent } from './taskers/user-tasks/new-user-task-modal/new-user-task-modal.component';\nimport { MessagesListComponent } from './shared/chats/messages-list/messages-list.component';\nimport { ConversationBoxComponent } from './shared/chats/conversation-box/conversation-box.component';\nimport { RatingsHistoryComponent } from './shared/ratings-history/ratings-history.component';\nimport { UserActivityComponent } from './shared/user-activity/user-activity.component';\nimport { ModifyMyTaskComponent } from './taskers/user-tasks/modify-my-task/modify-my-task.component';\nimport { ModifyPortfolioComponent } from './taskers/portfolios/modify-portfolio/modify-portfolio.component';\nimport { VisitorProfileComponent } from './visitor/visitor-profile/visitor-profile.component';\nimport { ModifyVisitorProfileComponent } from './visitor/modify-visitor-profile/modify-visitor-profile.component';\nimport { RatingAndReviewsListComponent } from './shared/ratings/rating-and-reviews-list/rating-and-reviews-list.component';\nimport { RatingRowDetailsComponent } from './shared/ratings/rating-row-details/rating-row-details.component';\nimport { ChangeUserPasswordComponent } from './shared/change-user-password/change-user-password.component';\nimport { BusinessAccountBalanceComponent } from './business/business-account-balance/business-account-balance.component';\n\n@NgModule({\n  declarations: [\n    ProfileComponent,\n    PersonalDetailsComponent,\n\n    LanguageSkillsComponent,\n    PersonalSkillsComponent,\n    GeneralSkillsComponent,\n    MemberContactComponent,\n    HoppiesComponent,\n    EducationDetailsComponent,\n    SocialMediaComponent,\n    BusinessAccountProfileComponent,\n    BusinessAccountDetailsComponent,\n    JobsSearcherProfileComponent,\n    ProfileStarsComponent,\n    ProfileImageComponent,\n    EditBusinessAccountComponent,\n    SinceProfileComponent,\n    BusinessCountersComponent,\n    JobsSearcherCountersComponent,\n    EditJobsSearcherComponent,\n    JobInterestsComponent,\n    PortfoliosListComponent,\n    PortfolioDetailsComponent,\n    CreatePortfolioComponent,\n    TaskerProfileComponent,\n    ModifyTaskerProfileComponent,\n    UserTasksListComponent,\n    NewUserTaskModalComponent,\n    MessagesListComponent,\n    ConversationBoxComponent,\n    RatingsHistoryComponent,\n    UserActivityComponent,\n    ModifyMyTaskComponent,\n    ModifyPortfolioComponent,\n    VisitorProfileComponent,\n    ModifyVisitorProfileComponent,\n    RatingAndReviewsListComponent,\n    RatingRowDetailsComponent,\n    ChangeUserPasswordComponent,\n    BusinessAccountBalanceComponent,\n  ],\n  imports: [\n    SharedModule,\n    ProfileRoutingModule,\n  ],\n  providers: [\n    MemberProfileResolver,\n    BusinessAccountsService,\n    EditMemberProfileResolver,\n    MessageResolver,\n    JobOffersService,\n  ],\n})\nexport class ProfileModule { }\n","import { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { User } from 'src/app/_models/Users/User';\nimport { AccountService } from 'src/app/_services/users/account.service';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { UserBusinessProfile } from '../models/user-business-profile';\n\n@Injectable()\nexport class EditMemberProfileResolver implements Resolve<User> {\n    constructor(private accountService: AccountService, private router: Router, private alertiy: AlertifyService, private authService: AuthService) { }\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\n        let userId = 0;\n        if (route.paramMap.has('userId')) {\n            userId = +route.params['userId'];\n        }\n        else if (!route.paramMap.has('userId') && this.authService.loggedIn()) {\n            userId = this.authService.getCurrentUserIdUsingToken();\n        }\n        else\n            return of(null);\n\n        return this.accountService.getUserProfileForEdit<UserBusinessProfile>(+userId).pipe(\n            catchError(error => {\n                this.alertiy.error('يوجد مشكلة في عرض بيانات المستخدم أو لا تملك صلاحية مخوله للوصول الى ملفه');\n                this.router.navigate(['']);\n                return of(null);\n            })\n        );\n    }\n}\n","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\nimport { ChangeUserPassword } from 'src/app/_models/Users/user-for-register';\nimport { AuthService } from 'src/app/_services/users/auth.service';\n\n@Component({\n  selector: 'app-change-user-password',\n  templateUrl: './change-user-password.component.html',\n  styleUrls: []\n})\nexport class ChangeUserPasswordComponent implements OnInit {\n  @ViewChild('closeModal') closeModal: ElementRef\n  @Output() updatedSuccessfully: EventEmitter<boolean> = new EventEmitter<boolean>();\n  changeUserPasswordForm: FormGroup;\n  isSubmitting: boolean = false;\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService, private formBuilder: FormBuilder,\n    private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.initCreateForm();\n  }\n\n  initCreateForm() {\n    this.changeUserPasswordForm = this.formBuilder.group({\n      currentPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20), Validators.pattern(RegularExpression.Password)]],\n      newPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20), Validators.pattern(RegularExpression.Password)]],\n    });\n  }\n\n  get addValidator() { return this.changeUserPasswordForm.controls; }\n\n  updateCurrentUserPassword() {\n\n    if (this.changeUserPasswordForm.valid) {\n      this.isSubmitting = true;\n      this.changeUserPasswordForm.disable();\n      let changeUserPassword = {} as ChangeUserPassword;\n      Object.assign(changeUserPassword, this.changeUserPasswordForm.value);\n      if (changeUserPassword.currentPassword === changeUserPassword.newPassword) {\n        this.isSubmitting = false;\n        this.changeUserPasswordForm.enable();\n        this.alertify.warning('فضلاً تحقق من أن كلمة المرور الحالية والجديدة غير متطابقتين');\n        return;\n      }\n      this.authService.changeCurrentUserPassword(changeUserPassword).subscribe(\n        returnMessage => {\n          this.alertify.success(returnMessage.message);\n          this.updatedSuccessfully.emit(true);\n          this.closeModal.nativeElement.click();\n        },\n        error => {\n          this.alertify.error(error);\n          this.isSubmitting = false;\n          this.changeUserPasswordForm.enable();\n          this.updatedSuccessfully.emit(false);\n        },\n        () => { this.isSubmitting = false; this.changeUserPasswordForm.enable(); });\n    } else {\n      this.alertify.warning(this.appTranslation.get('Common.Data.Invalid'));\n      this.changeUserPasswordForm.markAllAsTouched();\n      this.isSubmitting = false;\n    }\n  }\n}","<button id=\"btnToolbarAddNew\"  *ngIf=\"true\" class=\"btn btn-info btn-block\" type=\"button\" data-toggle=\"modal\" data-target=\"#formChangeUserPassword\">\n\t<span class=\"fa fa-unlock-alt\" title=\"{{'Login.ChangePassword' | translate}}\"></span> {{'Login.ChangePassword' | translate }}\n</button>\n<!-- start Normal Create Form Bootstrap Modal Dialog -->\n<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" [formGroup]=\"changeUserPasswordForm\" id=\"formChangeUserPassword\">\n\t<div class=\"modal-dialog\" role=\"document\">\n\t\t<div class=\"modal-content\">\n\t\t\t<div class=\"modal-header\">\n\t\t\t\t<h5 class=\"modal-title\"><span class=\"fa fa-asterisk\"></span>&nbsp;{{'Login.ChangePassword' | translate }}</h5>\n\t\t\t\t<button #closeModal type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t</button>\n\t\t\t</div>\n            <div class=\"modal-body\">\n                <div class=\"form-group\">\n                    <input ShowPassword formControlName=\"currentPassword\" type=\"password\" [ngClass]=\"{'is-invalid' : addValidator.currentPassword.errors && addValidator.currentPassword.touched }\"  class=\"form-control\" placeholder=\"{{'Login.CurrentPassword' | translate }}\" autocomplete=\"new-password\">\n                    <div [hidden]=\"!(addValidator.currentPassword?.touched && addValidator.currentPassword?.errors)\" class=\"invalid-feedback\">\n                        <div [hidden]=\"!addValidator.currentPassword.errors?.required\">{{'Common.Validation.Required' | translate }}</div>\n                        <div [hidden]=\"!addValidator.currentPassword.errors?.minlength\">{{'Signup.PasswordMinLength' | translate }}</div>\n                        <div [hidden]=\"!addValidator.currentPassword.errors?.maxlength\">{{'Signup.PasswordMaxLength' | translate }}</div>\n                        <div [hidden]=\"!addValidator.currentPassword.errors?.pattern\">{{'Signup.PasswordExpressionMsg' | translate }}</div>\n                    </div>\n                </div>  \n                <div class=\"form-group\">\n                    <input ShowPassword formControlName=\"newPassword\" type=\"password\" [ngClass]=\"{'is-invalid' : addValidator.newPassword.errors && addValidator.newPassword.touched }\"  class=\"form-control\" placeholder=\"{{'Login.NewPassword' | translate }}\" autocomplete=\"new-password\">\n                    <div [hidden]=\"!(addValidator.newPassword?.touched && addValidator.newPassword?.errors)\" class=\"invalid-feedback\">\n                        <div [hidden]=\"!addValidator.newPassword.errors?.required\">{{'Common.Validation.Required' | translate }}</div>\n                        <div [hidden]=\"!addValidator.newPassword.errors?.minlength\">{{'Signup.PasswordMinLength' | translate }}</div>\n                        <div [hidden]=\"!addValidator.newPassword.errors?.maxlength\">{{'Signup.PasswordMaxLength' | translate }}</div>\n                        <div [hidden]=\"!addValidator.newPassword.errors?.pattern\">{{'Signup.PasswordExpressionMsg' | translate }}</div>\n                    </div>\n                </div>  \n            </div>\n            <div class=\"modal-footer  text-right\">\n                <button class=\"btn btn-info\" [disabled]=\"isSubmitting || !changeUserPasswordForm.valid\" type=\"button\" (click)=\"updateCurrentUserPassword()\">\n                    <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.Updating'  | translate }}\n                    {{isSubmitting ? '' : 'Login.PasswordReset' | translate}}&nbsp;\n                </button>\n            </div>\n\t\t</div>\n\t</div>\n</div>\n<!-- End Normal Create Form Bootstrap Modal Dialog -->","import { Component, OnInit, Input, ViewChild, ElementRef, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MessageRead, MessageResult } from 'src/app/_models/chats/message';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\nimport { tap } from 'rxjs/operators';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { ChatsService } from 'src/app/_services/chats/chats.service';\nimport { MessageWithObject } from 'src/app/_models/data/actions-result';\n\n@Component({\n  selector: 'app-conversation-box',\n  templateUrl: './conversation-box.component.html',\n  styleUrls: ['./conversation-box.component.css']\n})\nexport class ConversationBoxComponent implements OnInit {\n  @Input('RecipientId') recipientId: number = 0;\n  @Input('CurrentUserId') currentUserId: number = 0;\n  @Input('RecipientGender') recipientGender: Gender = 0;\n  @ViewChild('conversationPanel') conversationPanel: ElementRef<any>;\n  currentConversationID: string;\n  conversationMessages: MessageResult[];\n  isLoadingConversation: boolean = true;\n  newMessage: any = {};\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private authService: AuthService,\n    private messagesService: MessagesService,\n    private chatsService: ChatsService) {\n  }\n\n  ngAfterViewChecked(): void {\n    this.scrollTopChatBoxPanel();\n  }\n\n  scrollTopChatBoxPanel(): void {\n    this.conversationPanel.nativeElement.scrollTop = this.conversationPanel.nativeElement.scrollHeight;\n  }\n\n  isCurrentUserProfile(userId: number): boolean {\n    return this.authService.isCurrentUserProfile(userId);\n  }\n\n  ngOnInit(): void {\n    // this.initConversationMessages();\n    // هذا من أجل الغاء أي مستمع أخر موجود من قبل لمحادثه أخرى\n    this.chatsService.hubConnection.off('receiveMessage');\n    // استقابل أي محادث جديده في هذه المجموعة\n    this.chatsService.hubConnection.on('receiveMessage', (message: MessageResult) => {\n      // في حالة كان المستقبل فانه يضيفه للمحادثه\n      if (this.currentUserId > 0 && message.recipientId === this.currentUserId)\n        this.conversationMessages.push(message);\n    });\n    // عند قراءة الرسالة من قبل المستقبل يتم تحديث حالة الرساله بأنه تم قراءتها\n    this.chatsService.hubConnection.off('markMessageAsRead');\n    this.chatsService.hubConnection.on('markMessageAsRead', (messageRead: MessageRead) => {\n      let messageIndex = this.conversationMessages.findIndex(c => c.id === +messageRead.id);\n      this.conversationMessages[messageIndex].dateRead = messageRead.dateRead;\n      this.conversationMessages[messageIndex].isRead = true;\n    });\n  }\n\n  ngOnDestroy() {\n    this.chatsService.hubConnection.off('receiveMessage');\n    this.chatsService.hubConnection.off('markMessageAsRead');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.initConversationMessages();\n  }\n\n  initConversationMessages(): void {\n    if (this.recipientId > 0) {\n      this.loadConversationMessages();\n    }\n  }\n\n  isFemaleAccount(): boolean {\n    if (this.recipientGender as Gender === Gender.female as Gender) {\n      return true;\n    } else { return false; }\n  }\n\n  makeMessageAsReaded(message: MessageResult) {\n    if (message != null && this.currentUserId > 0 && message.isRead === false && message.recipientId === this.currentUserId) {\n      console.log('makeMessageAsReaded exe');\n      this.messagesService.markAsRead(this.currentUserId, message.id);\n      message.isRead = true;\n    }\n  }\n\n  loadConversationMessages() {\n    const currentUserId = +this.authService.getCurrentUserIdUsingToken();\n    // جلب رقم المحادثه الحالية و الانضمام الي موزع المحادثات\n    this.messagesService.getCurrentConversationId(currentUserId, this.recipientId).subscribe(\n      (result: MessageWithObject) => {\n        // الانضمام الى مجموعة المراسلة الخاصه مع مستخدم الأخر\n        this.chatsService.startJoinGroupHubConnection(result.data.toString());\n      },\n      error => { this.alertify.error(error) }\n    );\n    // عند تحميل المحادثه بالكامل يتم تغيير حالة المحادثه بانه تم قراءتها\n    this.messagesService.getConversation(currentUserId, this.recipientId).pipe(\n      tap(messages => {\n        // // يتم فحص الرسائل رساله رساله و تغيير حالتها كمقروءه\n        // for (const message of messages) {\n        //   if (message.isRead === false && message.recipientId === currentUserId) { this.messagesService.markAsRead(currentUserId, message.id); }\n        // };\n      })).subscribe(\n        messages => {\n          this.conversationMessages = messages.reverse();\n        },\n        error => { this.alertify.error(error); },\n        () => {\n          // تحديث عداد المحادثات الغير مقرؤه والذي يظهر القائمة الرئيسية للموقع\n          setTimeout(() => {\n            this.isLoadingConversation = false;\n            this.messagesService.getUnreadCount(currentUserId).subscribe(res => {\n              this.authService.unreadCount.next(res.toString());\n              setTimeout(() => {\n                this.messagesService.getConversation(currentUserId, this.recipientId).subscribe(messages => this.conversationMessages = messages.reverse());\n              }, 3000);\n            });\n          }, 1000);\n        }\n      )\n  }\n\n  sendMessage() {\n    let userId = 0;\n    if (this.authService.loggedIn())\n      userId = this.authService.getCurrentUserIdUsingToken();\n    this.newMessage.recipientId = this.recipientId;\n    this.messagesService.sendMessage(+userId, this.newMessage).subscribe(\n      (message: MessageResult) => {\n        this.conversationMessages.push(message);\n        this.newMessage.content = '';\n        //this.chatsService.invokeRefreshConnection();\n        // this.chatsService.invokeNewMessage();\n      },\n      error => { this.alertify.error(error) }\n    )\n  }\n\n}\n","\n<div  class=\"msg_history\" #conversationPanel>\n    <ng-container *ngIf=\"!isLoadingConversation && conversationMessages?.length == 0\">\n        <div class=\"container d-flex h-100\">\n            <div class=\"row align-self-center justify-content-center w-100\">\n                <div class=\"d-flex flex-column bd-highlight\">\n                    <div class=\"text-center\">\n                        <i class=\"fa fa-inbox fa-5x fa-fw text-secondary\"></i>\n                    </div>\n                    <div class=\"text-center text-secondary mt-4\">\n                        <h3>لا يوجد أي محادثه مسبقاً مع هذا العضو</h3>\n                    </div>\n                  </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"isLoadingConversation; else conversationTemplate\">\n        <ng-container *ngIf=\"isLoadingConversation && recipientId > 0; else selectRecipientTemplate\">\n            <app-spinner></app-spinner>\n        </ng-container>\n        <ng-template #selectRecipientTemplate>\n            <div class=\"container d-flex h-100\">\n                <div class=\"row align-self-center justify-content-center w-100\">\n                    <div class=\"d-flex flex-column bd-highlight\">\n                        <div class=\"text-center\">\n                            <i class=\"fa fa-inbox fa-5x fa-fw text-secondary\"></i>\n                        </div>\n                        <div class=\"text-center text-secondary mt-4\">\n                            <h3>لا يوجد محادثة لعرضها</h3>\n                        </div>\n                      </div>\n                </div>\n            </div>\n        </ng-template>\n    </ng-container>\n    <ng-template #conversationTemplate>\n        <ng-container *ngFor=\"let message of conversationMessages; let i=index\">\n            <ng-container *ngIf=\"isCurrentUserProfile(+message.senderId); else recipientTemplate\">\n                <div class=\"conversation-item item-right\">\n                    <!-- <div class=\"conversation-user\">\n                        <img src=\" assets/img/team/m-avatar.jpg\" class=\"img-thumbnail\" alt=\"\">\n                    </div> -->\n                    <div class=\"conversation-body\">\n                        <div class=\"d-flex justify-content-between\">\n                            <div class=\"text\">{{message?.content}}</div>\n                            <div class=\"time hidden-xs\">&nbsp;{{message?.messageSent | timeAgo}}</div>\n                        </div>\n                        <div class=\"d-flex justify-content-end\">\n                            <strong *ngIf=\"!message.isRead\" class=\"read align-middle\">(غير مقروءة)</strong>\n                            <strong *ngIf=\"message.isRead\" class=\"read text-success align-middle\"><i class=\"fa fa-check\"></i>(مقروءة {{message.dateRead | timeAgo}})</strong>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template #recipientTemplate>\n                <div class=\"conversation-item item-left\">\n                    <div class=\"conversation-user\">\n                        <img src=\"{{message?.senderPhotoUrl || (isFemaleAccount() ? 'assets/img/team/w-avatar.jpg' : 'assets/img/team/m-avatar.jpg')}}\" class=\"img-thumbnail\" alt=\"\">\n                    </div>\n                    <div class=\"conversation-body\">\n                        <div class=\"d-flex justify-content-between\">\n                            {{makeMessageAsReaded(message)}}\n                            <div class=\"name\">{{message?.senderKnownAs}}</div>\n                            <div class=\"time hidden-xs\">&nbsp;{{message?.messageSent | timeAgo}}</div>\n                        </div>\n                        <div class=\"text\">{{message?.content}}</div>\n                    </div>\n                </div>\n            </ng-template>\n        </ng-container>\n    </ng-template>\n</div>\n<div class=\"type_msg\" *ngIf=\"recipientId\">\n    <form #messageForm=\"ngForm\" (ngSubmit) = \"messageForm.valid && sendMessage();\">\n        <div class=\"input_msg_write d-flex align-items-center\">\n            <input type=\"text\" name=\"content\" [(ngModel)]=\"newMessage.content\" required  class=\"write_msg\" placeholder=\"أكتب رسالتك هنا ...\" [disabled]=\"!(recipientId > 0)\" autocomplete=\"off\"/>\n            <button class=\"msg_send_btn\" type=\"submit\" [disabled]=\"!messageForm.valid && !(recipientId > 0)\"><i class=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i></button>\n        </div>\n    </form>\n</div>\n\n","import { Component, OnInit, HostListener } from '@angular/core';\nimport { MessageResult, Message } from 'src/app/_models/chats/message';\nimport { Column, Pagination, PaginationResult } from 'src/app/_models/data/Pagination';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\nimport { NgbPopover } from '@ng-bootstrap/ng-bootstrap';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { MessageParams } from 'src/app/_models/chats/message-params';\nimport { tap } from 'rxjs/operators';\nimport { ChatsService } from 'src/app/_services/chats/chats.service';\n\n@Component({\n  selector: 'app-messages-list',\n  templateUrl: './messages-list.component.html',\n  styleUrls: ['./messages-list.component.css']\n})\nexport class MessagesListComponent implements OnInit {\n  messagesItems: MessageResult[];\n  selectedConversation: MessageResult = null;\n  entityCaption: string;\n  private readonly PAGE_SIZE = 10;\n  mesaagesQuery: MessageParams = <MessageParams>{ pageSize: this.PAGE_SIZE };\n  screenHeight: number;\n  screenWidth: number;\n  mobileWidth: number = 760;\n  isMobile: boolean = false;\n  toggleMobile: boolean = false;\n  currentUserId: number;\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private messagesService: MessagesService,\n    private chatsService: ChatsService) {\n    this.getScreenSize();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    this.isMobile = this.screenWidth < this.mobileWidth;\n    console.log(this.screenHeight, this.screenWidth);\n  }\n\n  toggleWindows(conversation: MessageResult) {\n    this.selectedConversation = conversation;\n    if (this.selectedConversation) {\n      this.selectedConversation.isRead = true;\n    }\n    this.toggleMobile = !this.toggleMobile;\n  }\n\n\n  ngOnInit() {\n    if (this.authService.loggedIn())\n      this.currentUserId = this.authService.getCurrentUserIdUsingToken();\n    this.route.data.subscribe(data => {\n      this.messagesItems = data['messagesList']?.items;\n      this.mesaagesQuery = data['messagesList']?.pagination as MessageParams;\n    });\n    this.entityCaption = this.appTranslation.get(this.appTranslation.get('Messages.messageCaption'));\n    this.initUpdateListenerMessages();\n  }\n\n  initUpdateListenerMessages(): void {\n\n    this.chatsService.registeringCurrentUserToHubConnection();\n    // // هذا من أجل الغاء أي مستمع أخر موجود من قبل لمحادثه أخرى\n    this.chatsService.hubConnection.off('updateingChatBoxMessages');\n    // // استقابل أي محادث جديده في هذه المجموعة\n    this.chatsService.hubConnection.on('updateingChatBoxMessages', (message: MessageResult) => {\n      this.updateingChatBoxMessages(message);\n    });\n  }\n  // من أجل تحديث قاءمة المحادثات في حال قام مستخدم اخر بمراسلته وهو فاتح لصندوق المحادثات\n  updateingChatBoxMessages(message: MessageResult): void {\n    let conversationId = message.conversationId.toString();\n    let conversationIndex = this.messagesItems.findIndex(c => +c.conversationId === +conversationId);\n    if (this.messagesItems.length > 0 && conversationIndex >= 0){\n      this.messagesItems[conversationIndex] = message;\n      this.messagesItems.sort(function(a, b) {\n        return  +new Date(a.messageSent) - +new Date(b.messageSent);\n      });\n      this.messagesItems.reverse();\n    }\n    else\n      this.messagesItems.unshift(message);\n  }\n\n  ngOnDestroy() {\n    this.chatsService.hubConnection.off('updateingChatBoxMessages');\n  }\n\n  getAllMessages() {\n    this.messagesService.getPagedMessages(this.currentUserId, this.mesaagesQuery).subscribe((res: PaginationResult<MessageResult[]>) => {\n      this.messagesItems = res.items;\n      this.mesaagesQuery = res.pagination as MessageParams;\n    },\n      error => this.alertify.error(this.appTranslation.getWithValue('Common.Data.errorGettingData', this.entityCaption))\n    );\n  }\n\n  onFilterChange() {\n    this.mesaagesQuery.pageNumber = 1;\n    this.getAllMessages();\n  }\n\n  resetFilter() {\n    this.mesaagesQuery = <MessageParams>{\n      pageNumber: 1,\n      pageSize: this.PAGE_SIZE,\n      filterText: ''\n    };\n    this.getAllMessages();\n  }\n\n  refreshData() {\n    this.resetFilter();\n    this.alertify.info('تم تحديث البيانات');\n  }\n\n  sortBy(columnName: string) {\n    if (this.mesaagesQuery.sortBy === columnName) {\n      this.mesaagesQuery.isSortAscending = !this.mesaagesQuery.isSortAscending;\n    } else {\n      this.mesaagesQuery.sortBy = columnName;\n      this.mesaagesQuery.isSortAscending = true;\n    }\n    this.getAllMessages();\n  }\n\n  onPageChange(event: any) {\n    this.mesaagesQuery.pageNumber = event.page;\n    this.getAllMessages();\n  }\n\n  isSelectedConversation(currentConversation: MessageResult) {\n    return this.selectedConversation?.conversationId === currentConversation.conversationId;\n  }\n\n  getContactPicture(lastMessage: MessageResult): string {\n    if (lastMessage.senderId === this.currentUserId)\n      return lastMessage.recipientPhotoUrl;\n    else\n      return lastMessage.senderPhotoUrl;\n  }\n\n  getContactName(lastMessage: MessageResult): string {\n    if (lastMessage?.senderId === this.currentUserId)\n      return lastMessage.recipientKnownAs;\n    else if (lastMessage?.recipientId === this.currentUserId)\n      return lastMessage.senderKnownAs;\n    else\n      return '';\n  }\n\n  getRecipientId(lastMessage: MessageResult): number {\n    if (lastMessage?.senderId === this.currentUserId)\n      return lastMessage.recipientId;\n    else if (lastMessage?.recipientId === this.currentUserId)\n      return lastMessage.senderId;\n    else\n      return 0;\n  }\n\n  isSenderIsCurrentUser(senderId: number): boolean {\n    if (+senderId === this.currentUserId)\n      return true;\n    else\n      return false;\n  }\n\n\n}\n","<app-breadcrumbs title=\"\" currentPageTitle=\"\"></app-breadcrumbs>\n\n<article id=\"profile\" class=\"content\">\n    <div class=\"container\">\n        <div class=\"card\">\n            <div class=\"card-header d-flex justify-content-between\">\n                <h5><span class=\"fa fa-comments\"></span>&nbsp;{{'Chatbox.Chats' | translate }}</h5>\n\n                <div class=\"\">\n                    <div class=\"\">\n                        <div class=\"input-group\">\n                            <input type=\"text\" class=\" form-control\" placeholder=\"البحث\">\n                            <span class=\"input-group-addon\">\n                                <button type=\"button\" class=\"btn btn-success\"> <i class=\"fa fa-search\"\n                                        aria-hidden=\"true\"></i> </button>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-body p-0\">\n                <div class=\"inbox_msg\">\n                    <div [hidden]=\"isMobile && toggleMobile\" class=\"inbox_people pull-left col-md-4\tp-0\">\n\n                        <div class=\"inbox_chat\">\n                          \n <div class=\"container d-flex h-100\" *ngIf=\"!messagesItems.length\">\n                <div class=\"row align-self-center justify-content-center w-100\">\n                    <div class=\"d-flex flex-column bd-highlight\">\n                        <div class=\"text-center\">\n                            <i class=\"fas fa-comment-slash fa-2x text-secondary\"></i>\n                        </div>\n                        <div class=\"text-center text-secondary mt-4\">\n                            <h3>{{'Chatbox.NoContactsNow'|translate}}</h3>\n                        </div>\n                      </div>\n                </div>\n            </div>\n                            <div class=\"chat_list\" *ngFor=\"let conversation of messagesItems; let i=index\"\n                                [ngClass]=\"{'active_chat': isSelectedConversation(conversation)}\"\n                                (click)=\"toggleWindows(conversation)\">\n                                <div class=\"chat_people\">\n                                    <div class=\" chat_img pull-left\"> <img [src]=\"getContactPicture(conversation)\">\n                                    </div>\n                                    <div class=\"chat_ib pl-2 pull-right\">\n                                        <h5>\n                                            {{getContactName(conversation)}}\n                                            <span class=\"chat_date pull-right\">{{conversation?.messageSent |\n                                                timeAgo}}</span>\n                                        </h5>\n                                        <p\n                                            [ngClass]=\"{'font-weight-bold text-dark': !conversation?.isRead && !isSenderIsCurrentUser(conversation?.senderId)}\">\n                                            {{conversation?.content}}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div [hidden]=\"isMobile && !toggleMobile\" class=\"mesgs pull-right col-md-8 p-0\">\n                        <div class=\"headind_srch\">\n                            <div class=\"recent_heading pull-left\">\n                                <h4>{{getContactName(selectedConversation)}}</h4>\n                            </div>\n                            <div *ngIf=\"isMobile\" class=\"pull-right\"><a class=\"nav-link text-danger p-0\"\n                                    (click)=\"toggleWindows(null)\"><i class=\"fa fa-times-circle-o\"></i>&nbsp;غلق</a>\n                            </div>\n                        </div>\n                        <!-- <app-conversation-box [RecipientId]=\"userProfile?.id\" [RecipientGender]=\"userProfile?.gender\"></app-conversation-box> -->\n                        <app-conversation-box [RecipientId]=\"getRecipientId(selectedConversation)\" [RecipientGender]=\"\"\n                            [CurrentUserId]=\"currentUserId\"></app-conversation-box>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</article>","import { Component, OnInit, Input } from '@angular/core';\nimport { UserLanguageResult } from 'src/app/_models/Users/language';\n\n@Component({\n  selector: 'app-language-skills',\n  templateUrl: './language-skills.component.html',\n  styleUrls: []\n})\nexport class LanguageSkillsComponent implements OnInit {\n  @Input('Languages') userLanguages: UserLanguageResult[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\" >\n    <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Students.Languages' | translate }}</span>\n    </h4>\n    <ng-container *ngIf=\"userLanguages?.length > 0; else nothingTemplate\">\n        <div class=\"col-12 my-2\">\n            <span class=\"h6 badge-xl bg-info \" *ngFor=\"let language of userLanguages; let i = index;\"><i class=\"fa fa-language\"></i>&nbsp;&nbsp;{{language?.language?.name}}</span>\n        </div>\n    </ng-container>\n    <ng-template #nothingTemplate>\n        <div class=\"col-12 my-2\">\n            <p class=\"form-control-plaintext text-break text-secondary pt-0\">{{'Common.Data.NoData' | translate }}</p>\n        </div>\n    </ng-template>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { SocialMediaAccountResult, UserProfileResult } from 'src/app/_models/Users/user-profile-result';\n\n@Component({\n  selector: 'app-member-contact',\n  templateUrl: './member-contact.component.html',\n  styleUrls: []\n})\nexport class MemberContactComponent implements OnInit {\n  @Input('UserProfileData') userProfile: UserProfileResult;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"row profile-user-info\">\n    <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Profile.Contact' | translate }}</span>\n    </h4>\n    <div class=\"col-sm-8 pl-4\">\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'Signup.Phone' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.phoneNumber}}&nbsp;<a class=\"text-success\" [href]=\"'https://wa.me/' + userProfile?.whatsApp\" target=\"_blank\"><i class=\"fa fa-whatsapp\"></i></a></p>\n            </div>\n        </div>\n        <div class=\"form-group row my-0\">\n            <label  class=\"col-sm-4 col-form-label profile-info-title\">{{'users.management.Email' | translate }}</label>\n            <div class=\"col-sm-8\">\n                <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.email}}</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-sm-4 profile-social\">\n        <app-social-media [SocialMediaUserAccounts]=\"userProfile?.socialMediaAccounts\"></app-social-media>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { SocialMediaAccountResult } from 'src/app/_models/Users/user-profile-result';\n\n@Component({\n  selector: 'app-social-media',\n  templateUrl: './social-media.component.html',\n  styleUrls: []\n})\nexport class SocialMediaComponent implements OnInit {\n  @Input('SocialMediaUserAccounts') socialMediaAccounts: SocialMediaAccountResult;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul *ngIf=\"socialMediaAccounts\" class=\"list-unstyled\">\n    <li *ngIf=\"socialMediaAccounts.twitter || socialMediaAccounts.twitter !== ''\"><i class=\"fa fa-twitter-square pr-1\"></i><a target=\"_blank\" [href]=\"'https://twitter.com/' + socialMediaAccounts.twitter\">{{socialMediaAccounts?.twitter}}</a></li>\n    <li *ngIf=\"socialMediaAccounts.linkedin || socialMediaAccounts.linkedin !== ''\"><i class=\"fa fa-linkedin-square pr-1\"></i><a target=\"_blank\" [href]=\"'http://ca.linkedin.com/in/' + socialMediaAccounts.linkedin\">{{socialMediaAccounts?.linkedin}}</a></li>\n    <li *ngIf=\"socialMediaAccounts.facebook || socialMediaAccounts.facebook !== ''\"><i class=\"fa fa-facebook-square pr-1\"></i><a target=\"_blank\" [href]=\"'https://www.facebook.com/' + socialMediaAccounts.facebook\">{{socialMediaAccounts?.facebook}}</a></li>\n    <li *ngIf=\"socialMediaAccounts.instagram || socialMediaAccounts.instagram !== ''\" ><i class=\"fa fa-instagram pr-1\"></i><a target=\"_blank\" [href]=\"'https://www.instagram.com/' + socialMediaAccounts.instagram\">{{socialMediaAccounts?.instagram}}</a></li>\n</ul>","import { Component, OnInit, Input } from '@angular/core';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { Gender, AccountType } from 'src/app/_models/Users/user-for-register';\n\n@Component({\n  selector: 'app-personal-details',\n  templateUrl: './personal-details.component.html',\n  styles: [``]\n})\nexport class PersonalDetailsComponent implements OnInit {\n  @Input('UserProfileData') userProfile: UserProfileResult;\n  GenderEnum: Gender;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n  getGenderStyle() {\n    if (<Gender>this.userProfile.gender === <Gender>Gender.male) {\n      return 'fa fa-lg fa-male text-sky';\n    } else if (<Gender>this.userProfile.gender === <Gender>Gender.female) {\n      return 'fa fa-lg fa-female text-pink';\n    }\n    else { return '' }\n  }\n\n  showAboutField(): boolean {\n    if ((<AccountType>this.userProfile.accountType === <AccountType>AccountType.taskerAccount) ||\n      (<AccountType>this.userProfile.accountType === <AccountType>AccountType.studentAccount)) {\n      return true;\n    }\n    return false;\n  }\n\n  get getAboutValue(): string {\n    if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.taskerAccount)\n      return this.userProfile?.taskerAccountData?.about;\n    else if (<AccountType>this.userProfile.accountType === <AccountType>AccountType.studentAccount)\n      return this.userProfile?.studentAccountData?.about;\n  }\n\n}\n","<div class=\"col-md-12 pl-4\">\n    <div class=\"form-group row my-0\">\n        <label  class=\"col-sm-3 col-form-label profile-info-title\">{{'users.Profile.Name' | translate }}</label>\n        <div class=\"col-sm-9\">\n            <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.fullName}}</p>\n        </div>\n    </div>\n    <div class=\"form-group row my-0\">\n        <label class=\"col-form-label col-sm-3 profile-info-title\">{{'users.Students.City' | translate }}</label>\n        <div class=\"col-sm-3\">\n            <p class=\"form-control-plaintext profile-info-details\"><i class=\"fa fa-map-marker\"></i>&nbsp;&nbsp;{{userProfile?.cityName}}</p>\n        </div>\n        <label class=\"col-form-label col-sm-3 profile-info-title\">{{'users.Students.Gender' | translate }}</label>\n        <div class=\"col-sm-3\">\n            <p class=\"form-control-plaintext profile-info-details\"><i [ngClass]=\"getGenderStyle()\"></i>&nbsp;&nbsp;{{userProfile?.genderName}}</p>\n        </div>\n    </div>\n    <div class=\"form-group row my-0\">\n        <label class=\"col-form-label col-sm-3 profile-info-title\">{{'users.Students.Age' | translate }}</label>\n        <div class=\"col-sm-3\">\n            <p class=\"form-control-plaintext profile-info-details\">{{userProfile?.age}}</p>\n        </div>\n    </div>\n    <div *ngIf=\"showAboutField()\" class=\"form-group row my-0\">\n        <label  class=\"col-sm-12 col-form-label profile-info-title\">{{'users.Students.About' | translate }}</label>\n        <div class=\"col-sm-12\">\n            <ng-container *ngIf=\"getAboutValue; else nothingTemplate\">\n                <p class=\"form-control-plaintext profile-info-details\">{{getAboutValue}}</p>\n            </ng-container>\n            <ng-template #nothingTemplate>\n                <p class=\"form-control-plaintext text-break text-secondary pt-0\">{{'Common.Data.NoData' | translate }}</p>\n            </ng-template>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { Photo } from 'src/app/_models/Users/Photo';\nimport { UploadHandlerResult, UploadStatus } from 'src/app/_helpers/uploader/uploadHandlerResult';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { UserService } from 'src/app/_services/users/User.service';\n\n@Component({\n  selector: 'app-profile-image',\n  templateUrl: './profile-image.component.html',\n  styles: [`\n  .picture-container {\n    position: relative;\n    cursor: pointer;\n    text-align: center;\n  }\n  \n  .picture input[type=\"file\"] {\n    cursor: pointer;\n    display: block;\n    height: 100%;\n    left: 0;\n    opacity: 0 !important;\n    position: absolute;\n    top: 0;\n    width: 100%;\n  }\n  `]\n})\nexport class ProfileImageComponent implements OnInit {\n  photoUrl: string;\n  @Input('UserProfileData') userProfile: UserProfileResult;\n  @Output() addSuccessfully: EventEmitter<Photo> = new EventEmitter<Photo>();\n  isUploading: boolean = false;\n  uploadResponse: UploadHandlerResult<Photo>;\n  uploadStatusEnum = UploadStatus;\n  allowTypeToUpload = ['Image/png', 'Image/jpeg', 'Image/jpg', 'Image/gif', 'Image/bmp'];\n  allowTypeToUploadNames = ['png', 'jpeg', 'jpg', 'gif', 'bmp'];\n\n\n  constructor(public authService: AuthService,\n    private appTranslation: AppTranslationService, private alertify: AlertifyService,\n    private userService: UserService) { }\n\n  ngOnInit(): void {\n    if (this.isCurrentUserProfile)\n      this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n    else\n      this.photoUrl = this.userProfile.photoURL;\n  }\n\n  get isCurrentUserProfile(): boolean {\n    return this.authService.isCurrentUserProfile(this.userProfile.id);\n  }\n\n  isFemaleAccount(): boolean {\n    if (this.userProfile?.gender as Gender === Gender.female as Gender) {\n      return true;\n    } else { return false; }\n  }\n\n  onFileChange(event, files: FileList) {\n    if (this.isUploading) {\n      this.alertify.warning(`يتم رفع صور الرجاء الانتظار لحين الانتهاء`);\n      return;\n    }\n    const maxFileSize = 2; // MB\n    if (event.target.files.length == 1) {\n      let file: File = <File>files[0];\n      if (!this.allowTypeToUpload.find(fn => fn.trim().toLowerCase() === file.type.trim().toLowerCase())) {\n        this.alertify.alert(`تحقق من نوع الملف الذي قمت باختياره ، يسمح فقط بالصور احد الأنواع التالية <br >\n                ${this.allowTypeToUploadNames.join(' , ')}`);\n        return;\n      }\n      if (file.size > (maxFileSize * 1024 * 1024)) {\n        this.alertify.warning(`${event.target.files.name} <br > يجب أن لا يتجاوز حجم الصورة ${maxFileSize} ميقا بايت.`);\n        return;\n      }\n      this.isUploading = true;\n      this.startUploadProfilePhoto(file);\n    }\n  }\n  //     \n  startUploadProfilePhoto(file: File) {\n    const formData = new FormData();\n    formData.append('file', file, file.name);\n    this.userService.updateProfilePhoto(formData, +this.authService.getCurrentUserIdUsingToken()).subscribe(\n      returnPhoto => {\n        this.uploadResponse = returnPhoto;\n        if (<UploadStatus>returnPhoto.status === <UploadStatus>UploadStatus.success ||\n          <UploadStatus>returnPhoto.status === <UploadStatus>UploadStatus.successWithSomeFailure) {\n          this.alertify.success(this.appTranslation.get('Common.Data.SavedSuccessfully'));\n          this.authService.refreshUserProfilePhoto(returnPhoto.data);\n          this.addSuccessfully.emit(returnPhoto.data);\n        } else if (<UploadStatus>returnPhoto.status === <UploadStatus>UploadStatus.failure) {\n          this.alertify.error(returnPhoto.message);\n        }\n      },\n      error => {\n        this.alertify.error(error);\n        this.isUploading = false;\n      },\n      () => { this.isUploading = false; });\n  }\n\n\n\n}\n","\n\n<ng-container *ngIf=\"isCurrentUserProfile; else notMyProfile\">\n    <div class=\"picture-container\">\n        <div class=\"picture\">\n            <img src=\"{{photoUrl || (isFemaleAccount() ? 'assets/img/team/w-avatar.jpg' : 'assets/img/team/m-avatar.jpg')}}\" alt=\"\" class=\"profile-img img-fluid\">\n            <input [hidden]=\"isUploading\" type=\"file\" id=\"wizard-picture\" (change)=\"onFileChange($event, $event.target.files)\" [attr.accept]=\"allowTypeToUpload.join(', ')\" >\n        </div>\n        <div *ngIf=\"uploadResponse?.status === uploadStatusEnum.progress\" class=\"progress\">\n            <div class=\"progress-bar progress-bar-striped bg-info\" role=\"progressbar\" [style.width.%]=\"uploadResponse.message\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\">{{uploadResponse.message}}%</div>\n        </div>\n        <h6 [hidden]=\"isUploading\" [ngClass]=\"isUploading ? 'text-secondary' : 'text-info'\"><i class=\"fa fa-upload\" ></i>&nbsp;<strong>تغيير الصورة</strong></h6>\n    </div>\n</ng-container>\n\n<ng-template #notMyProfile>\n    <img src=\"{{photoUrl || (isFemaleAccount() ? 'assets/img/team/w-avatar.jpg' : 'assets/img/team/m-avatar.jpg')}}\" alt=\"\" class=\"profile-img img-fluid\">\n</ng-template>\n\n\n<div class=\"profile-label\">\n    <span class=\"lead\"><span class=\"badge badge-secondary\">{{userProfile.jobTitle}}</span></span>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-profile-stars',\n  templateUrl: './profile-stars.component.html',\n  styles: [\n  `.star {\n    font-size: 1.3rem;\n    color: #fbedd9;\n  }\n  .filled {\n    color: #EDB867;\n  }\n  .bad {\n    color: #deb0b0;\n  }\n  .filled.bad {\n    color: #ff1e1e;\n  }`]\n})\nexport class ProfileStarsComponent implements OnInit {\n  @Input('Rating') rating: number = 0;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"profile-stars\">\n    <ngb-rating  [max]=\"5\" [(rate)]=\"rating\" [readonly]=\"true\">\n        <ng-template let-fill=\"fill\" let-index=\"index\">\n          <span class=\"star\" [class.filled]=\"fill === 100\"><i class=\"fa fa-star\"></i></span>\n        </ng-template>\n    </ngb-rating>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ratings-history',\n  templateUrl: './ratings-history.component.html',\n  styleUrls: ['./ratings-history.component.css']\n})\nexport class RatingsHistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"user-activity\">\n    <div class=\"activity-rate\">\n        <i class=\"fa fa-star\"></i>\n        <i class=\"fa fa-star\"></i>\n        <i class=\"fa fa-star-o\"></i>\n        <i class=\"fa fa-star-o\"></i>\n        <i class=\"fa fa-star-o\"></i>\n    </div>\n    <div class=\"activity-details align-middle\">\n        <span>قام المستخدم بالانضمام للمنصة لأول مره</span>\n        <abbr class=\"activity-time\" title=\"2020/08/08 12:08\">منذ 10 دقائق</abbr>\n    </div>\n</div>\n<div class=\"user-activity\">\n    <div class=\"activity-rate\">\n        <i class=\"fa fa-star\"></i>\n        <i class=\"fa fa-star\"></i>\n        <i class=\"fa fa-star-o\"></i>\n        <i class=\"fa fa-star-o\"></i>\n        <i class=\"fa fa-star-o\"></i>\n    </div>\n    <div class=\"activity-details\">\n        <span>\n            قام جهة التوظيف <a href=\"#\">مطاعم الشرق الأوسط</a> بتقييم أداء الموظف، بعد توظيفه على العرض رقم <a href=\"#\">#223</a> \n            <abbr class=\"activity-time\" title=\"2020/08/08 12:08\">منذ 10 دقائق</abbr>\n        </span>\n        \n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { RatingAndReview } from 'src/app/_models/Users/rating-and-review';\n\n@Component({\n  selector: 'app-rating-and-reviews-list',\n  templateUrl: './rating-and-reviews-list.component.html',\n  styleUrls: []\n})\nexport class RatingAndReviewsListComponent implements OnInit {\n  @Input('RatingsAndReviews') ratingsAndReviews: RatingAndReview[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container *ngFor=\"let ratingDetails of ratingsAndReviews; let i=index\">\n    <app-rating-row-details [RatingAndReview]='ratingDetails'></app-rating-row-details>\n</ng-container>\n\n<div class=\"alert alert-info text-center\" *ngIf=\"!ratingsAndReviews.length\">\n    {{'Rating.NoRatinges'|translate}}\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { RateType, RatingAndReview, RatingEmployerByWorker, RatingTaskOrder, RatingWorkerByEmployer } from 'src/app/_models/Users/rating-and-review';\n\n@Component({\n  selector: 'app-rating-row-details',\n  templateUrl: './rating-row-details.component.html',\n  styleUrls: ['./rating-row-details.component.css']\n})\nexport class RatingRowDetailsComponent implements OnInit {\n  @Input('RatingAndReview') ratingAndReview: RatingAndReview;\n  RateTypeEnum = RateType;\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  get getServiceOrderReviewDetails(): RatingTaskOrder {\n    return JSON.parse(this.ratingAndReview?.details) as RatingTaskOrder;\n  }\n\n  get getRatingWorkerByEmployerDetails(): RatingWorkerByEmployer {\n    return JSON.parse(this.ratingAndReview?.details) as RatingWorkerByEmployer;\n  }\n\n  get getRatingEmployerByWorkerDetails(): RatingEmployerByWorker {\n    return JSON.parse(this.ratingAndReview?.details) as RatingEmployerByWorker;\n  }\n\n}\n","<div class=\"d-flex bg-light mb-2\">\n    <div class=\"align-self-center p-2 mx-2\">\n        <ngb-rating [max]=\"5\" [(rate)]=\"ratingAndReview.rating\" [readonly]=\"true\" class=\"activity-rate\">\n            <ng-template let-fill=\"fill\" let-index=\"index\">\n              <span class=\"star\" [class.filled]=\"fill === 100\"><i class=\"fa fa-star\"></i></span>\n            </ng-template>\n        </ngb-rating>\n        <div>{{ratingAndReview?.createdDate | timeAgo}}</div>\n    </div>\n    <div class=\"p-2 flex-grow-1\" [ngSwitch]=\"ratingAndReview.type\">\n        <ng-container *ngSwitchCase=\"RateTypeEnum.ServiceProvider\">\n            <div class=\"d-flex flex-column\">\n                <div><a class=\"text-info\" [routerLink]=\"(ratingAndReview?.reviewerUser) ? ['/profile', ratingAndReview?.reviewerUser?.id , ratingAndReview?.reviewerUser?.fullName] : ['']\" role=\"button\">{{ratingAndReview?.reviewerUser?.fullName}}</a></div>\n                <div class=\"pb-1 text-secondary\"><i class=\"fa fa-tag px-1\"></i>{{'Tasks.Type' | translate }} [{{getServiceOrderReviewDetails.name}}]</div>\n                <div>\n                    <span>{{ratingAndReview?.comment}}</span>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"RateTypeEnum.EmployerRatingTheWorker\">\n            <div class=\"d-flex flex-column\">\n                <div class=\"pb-1 text-secondary\"><i class=\"fa fa-tag px-1\"></i><a class=\"text-info\" [routerLink]=\"(getRatingWorkerByEmployerDetails) ? ['/jobs', 'details', getRatingWorkerByEmployerDetails.id , getRatingWorkerByEmployerDetails.name] : ['']\">{{'Applicants.JobOffer' | translate }} [{{getRatingWorkerByEmployerDetails.name}}]</a></div>\n                <div><i class=\"fa fa-user-circle-o px-1 text-secondary\"></i> <a class=\"text-info\" [routerLink]=\"(ratingAndReview?.reviewerUser) ? ['/profile', ratingAndReview?.reviewerUser?.id , ratingAndReview?.reviewerUser?.fullName] : ['']\" role=\"button\">{{ratingAndReview?.reviewerUser?.fullName}}</a></div>\n                <div>\n                    <span>{{ratingAndReview?.comment}}</span>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"RateTypeEnum.WorkerRatingTheEmployer\">\n            <div class=\"d-flex flex-column\">\n                <div class=\"pb-1 text-secondary\"><i class=\"fa fa-tag px-1\"></i><a class=\"text-info\" [routerLink]=\"(getRatingEmployerByWorkerDetails) ? ['/jobs', 'details', getRatingEmployerByWorkerDetails.id , getRatingEmployerByWorkerDetails.name] : ['']\">{{'Applicants.JobOffer' | translate }} [{{getRatingEmployerByWorkerDetails.name}}]</a></div>\n                <div><i class=\"fa fa-user-circle-o px-1 text-secondary\"></i> <a class=\"text-info\" [routerLink]=\"(ratingAndReview?.reviewerUser) ? ['/profile', ratingAndReview?.reviewerUser?.id , ratingAndReview?.reviewerUser?.fullName] : ['']\" role=\"button\">{{ratingAndReview?.reviewerUser?.fullName}}</a></div>\n                <div>\n                    <span>{{ratingAndReview?.comment}}</span>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n            <div class=\"d-flex flex-column\">\n                <div><a class=\"text-info\" [routerLink]=\"(ratingAndReview?.reviewerUser) ? ['/profile', ratingAndReview?.reviewerUser?.id , ratingAndReview?.reviewerUser?.fullName] : ['']\" role=\"button\">{{ratingAndReview?.reviewerUser?.fullName}}</a></div>\n                <div>\n                    <span>{{ratingAndReview?.comment}}</span>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-since-profile',\n  templateUrl: './since-profile.component.html',\n  styleUrls: []\n})\nexport class SinceProfileComponent implements OnInit {\n  @Input('MemberSince') createdDate: any;\n  @Input('LastActivity') lastActive: any;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"createdDate\" class=\"profile-since\">\n    {{'users.Profile.MemberSince' | translate }} {{createdDate | timeAgo}}\n</div>\n<div *ngIf=\"lastActive\" class=\"profile-since\">\n    {{'users.Profile.LastActive' | translate }}: {{lastActive | timeAgo}}\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-activity',\n  templateUrl: './user-activity.component.html',\n  styleUrls: ['./user-activity.component.css']\n})\nexport class UserActivityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"user-activity\">\n    <div class=\"activity-icon bg-info\"><i class=\"fa fa-asterisk align-self-center\"></i></div>\n    <div class=\"activity-details align-middle\">\n        <span>قام المستخدم بالانضمام للمنصة لأول مره</span>\n        <abbr class=\"activity-time\" title=\"2020/08/08 12:08\">منذ 10 دقائق</abbr>\n    </div>\n</div>\n<div class=\"user-activity\">\n    <div class=\"activity-icon bg-info\"><i class=\"fa fa-asterisk align-self-center\"></i></div>\n    <div class=\"activity-details align-middle\">\n        <span>قام المستخدم باكمال الملف الشخصي الخاص به بنسبة 80%</span>\n        <abbr class=\"activity-time\" title=\"2020/08/08 12:08\">منذ 10 دقائق</abbr>\n    </div>\n</div>\n<div class=\"user-activity\">\n    <div class=\"activity-icon bg-success\"><i class=\"fa fa-check-circle-o align-self-center\"></i></div>\n    <div class=\"activity-details\">\n        <span>تم تفعيل البريد الالكتروني الخاص بالمستخدم</span>\n        <abbr class=\"activity-time\" title=\"2020/08/08 12:08\">منذ 10 دقائق</abbr>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LocationsService } from 'src/app/_services/settings/locations.service';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\nimport { LanguagesService } from 'src/app/_services/settings/languages.service';\nimport { zip } from 'rxjs';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { HijriCalenderService } from 'src/app/_helpers/date-and-time/hijri-calender.service';\nimport { TaskerAccountForEdit } from '../../models/tasker-account';\nimport { TaskerAccountUpdate } from 'src/app/_models/Users/tasker-account';\nimport { TaskerAccountsService } from 'src/app/_services/users/tasker-accounts.service';\n\n@Component({\n  selector: 'app-modify-tasker-profile',\n  templateUrl: './modify-tasker-profile.component.html',\n  styleUrls: []\n})\nexport class ModifyTaskerProfileComponent implements OnInit {\n  isLoadingOptions = true;\n  citiesOptions: KeyValuePairResource[] = [];\n  languagesOptions: KeyValuePairResource[] = [];\n  taskerAccount: TaskerAccountForEdit;\n  maxDate: any;\n  public GenderEnum = Gender;\n  edtTaskerAccountForm: FormGroup;\n  isSubmitting: boolean = false;\n  citiesList: KeyValuePairResource[] = [];\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private locationsService: LocationsService,\n    private languagesService: LanguagesService,\n    private router: Router,\n    private taskerAccountsService: TaskerAccountsService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.taskerAccount = data['user'];\n    });\n    this.initEdtForm();\n    this.getAllDefualtsValues();\n    this.maxDate = HijriCalenderService.getToday(-17);\n  }\n\n  getAllDefualtsValues() {\n    zip(\n      this.locationsService.getCitiesList(),\n      this.languagesService.getLanguagesAsList(),\n    ).subscribe(\n      ([locations, languages]) => {\n        this.citiesOptions = locations;\n        this.languagesOptions = languages;\n      },\n      error => { this.alertify.error(error); },\n      () => {\n        this.isLoadingOptions = false;\n        this.enableAllControls();\n      }\n    );\n  }\n\n  initEdtForm() {\n    this.edtTaskerAccountForm = this.formBuilder.group({\n      id: [this.taskerAccount.id, Validators.required],\n      arFirstName: [this.taskerAccount.firstName ?? '', Validators.required],\n      arLastName: [this.taskerAccount.lastName ?? '', Validators.required],\n      enFullName: [this.taskerAccount.enFullName ?? '', [Validators.required]],\n      gender: [this.taskerAccount.gender ?? '', Validators.required],\n      cityId: [{ value: this.taskerAccount.cityId ?? '', disabled: true }, Validators.required],\n      birthDay: [HijriCalenderService.dateToNgbDateOrNull(this.taskerAccount.birthDay) ?? null],\n      about: [this.taskerAccount.taskerAccountData?.about ?? '', Validators.maxLength(500)], //\n      languages: [{ value: this.taskerAccount.languages ?? [], disabled: true }],\n      instagram: [this.taskerAccount.socialMediaAccounts?.instagram ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      linkedin: [this.taskerAccount.socialMediaAccounts?.linkedin ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      twitter: [this.taskerAccount.socialMediaAccounts?.twitter ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      facebook: [this.taskerAccount.socialMediaAccounts?.facebook ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)]\n    });\n  }\n\n  enableAllControls() {\n    this.edtTaskerAccountForm.controls.cityId.enable();\n    this.edtTaskerAccountForm.controls.languages.enable();\n  }\n\n  get updateValidator() { return this.edtTaskerAccountForm.controls; }\n\n  editTaskerAccount() {\n    this.edtTaskerAccountForm.valid;\n    // console.log(this.edtTaskerAccountForm.value);\n    // console.log(\"Invalid Controls:\", this.findInvalidControls());\n    if (this.edtTaskerAccountForm.valid) {\n      this.isSubmitting = true;\n      this.edtTaskerAccountForm.disable();\n      var updatedTaskerAccount = {} as TaskerAccountUpdate;\n      Object.assign(updatedTaskerAccount, this.edtTaskerAccountForm.value);\n      updatedTaskerAccount.birthDay = HijriCalenderService.tryConvertGregorianToDate(this.edtTaskerAccountForm.controls.birthDay.value);\n      this.taskerAccountsService.updateTaskerAccount(this.taskerAccount.id, updatedTaskerAccount).subscribe(\n        returnTaskerAccount => {\n          this.alertify.success(this.appTranslation.get('Common.Messages.UpdatedSuccessfully'));\n          this.router.navigate(['/profile']);\n        },\n        error => { this.alertify.error(error); this.isSubmitting = false; this.edtTaskerAccountForm.enable(); },\n        () => { });\n    } else {\n      this.alertify.warning(this.appTranslation.get('Common.Data.Invalid'));\n      this.edtTaskerAccountForm.markAllAsTouched();\n      this.isSubmitting = false;\n    }\n  }\n\n  // console.log(\"Invalid Controls:\", this.findInvalidControls());\n  public findInvalidControls() {\n    const invalid = [];\n    const controls = this.edtTaskerAccountForm.controls;\n    for (const name in controls) {\n      if (controls[name].invalid) {\n        invalid.push(name);\n      }\n    }\n    return invalid;\n  }\n\n}\n","<app-breadcrumbs title=\"{{taskerAccount.fullName || taskerAccount.enFullName }}\" currentPageTitle=\"{{taskerAccount.fullName || taskerAccount.enFullName }}\"></app-breadcrumbs>\n\n<article id=\"profile\" class=\"content\">\n    <div class=\"container\">\n        <!-- start Normal Edt BootStrap Form -->\n\n        <form [formGroup]=\"edtTaskerAccountForm\" (ngSubmit)=\"editTaskerAccount()\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-5\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Profile.GeneralInfo' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.FirstName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                            <input class=\"form-control\"  maxlength=\"70\" formControlName=\"arFirstName\" placeholder= \"{{'users.Students.FirstName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arFirstName.errors && updateValidator.arFirstName.touched}\"  >\n                            <div *ngIf=\"updateValidator.arFirstName.touched && updateValidator.arFirstName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.arFirstName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.LastName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                            <input class=\"form-control\"  maxlength=\"70\" formControlName=\"arLastName\" placeholder= \"{{'users.Students.LastName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arLastName.errors && updateValidator.arLastName.touched}\"  >\n                            <div *ngIf=\"updateValidator.arLastName.touched && updateValidator.arLastName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.arLastName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\">{{'users.Students.EnFullName' | translate }}<strong class=\"text-danger\">*</strong></span>\n                            </div>\n                            <input class=\"form-control\"  maxlength=\"40\" formControlName=\"enFullName\" placeholder= \"{{'users.Students.EnFullName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.enFullName.errors && updateValidator.enFullName.touched}\"  >\n                            <div *ngIf=\"updateValidator.enFullName.touched && updateValidator.enFullName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.enFullName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-building\"></i>&nbsp;{{'users.Students.City' | translate }}<strong class=\"text-danger\">*</strong></span>\n                                </div>\n                                <select formControlName=\"cityId\" class=\"form-control\" [ngClass]=\"{'is-invalid' : updateValidator.cityId.errors && updateValidator.cityId.touched }\">\n                                    <option value=\"0\" disabled>{{'Common.Form.ChooseFromMenu' | translate }}</option>\n                                    <option *ngFor=\"let city of citiesOptions\" value=\"{{city.id}}\">{{city.name}}</option>\n                                </select>\n                                <div *ngIf=\"updateValidator.cityId.touched && updateValidator.cityId.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.cityId.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend \">\n                                    <span class=\"input-group-text px-1\">{{'users.Students.Gender' | translate }}<strong class=\"text-danger\">*</strong></span>\n                                </div>\n                                <label class=\"form-control px-1 text-center\">\n                                  <input id=\"male\" type=\"radio\" name=\"gender\" [value]=\"1\" formControlName=\"gender\">\n                                  <i class=\"fa fa-lg fa-male text-sky px-1\"></i>{{'Signup.IAmMan' | translate }}\n                                </label>\n                                <label class=\"form-control px-1 text-center\">\n                                    <input id=\"female\" type=\"radio\" name=\"gender\" [value]=\"2\" formControlName=\"gender\">\n                                    <i class=\"fa fa-lg fa-female text-pink px-1\"></i>{{'Signup.IAmWoman' | translate }}\n                                </label>\n                                <div *ngIf=\"updateValidator.gender.touched && updateValidator.gender.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.gender.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                   <span class=\"input-group-text\">{{'users.Students.BirthDay' | translate }}</span>\n                                </div>\n                                <input ngbDatepicker #birthDayDatepicker=\"ngbDatepicker\" [maxDate]=\"maxDate\" [minDate]=\"{year: 1950, month: 1, day: 1}\" [firstDayOfWeek]=\"0\" class=\"form-control\"  formControlName=\"birthDay\" readonly (click)=\"birthDayDatepicker?.toggle()\">\n                                <div class=\"input-group-append\">\n                                    <button class=\"btn btn-outline-secondary calendar\" (click)=\"birthDayDatepicker?.toggle()\" type=\"button\"><i class=\"fa fa-calendar\"></i></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.About' | translate }}</label>\n                        <textarea class=\"form-control\" rows=\"3\"  maxlength=\"500\" formControlName=\"about\" placeholder= \"{{'Common.Form.MaxThousand' | translate:{'value': 'users.Students.About' | translate} }}\"></textarea>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"font-weight-bold\" >{{'users.Students.Languages' | translate }}</label>\n                        <ng-select [loading]=\"isLoadingOptions\" bindValue=\"id\" bindLabel=\"name\" [multiple]=\"true\" [items]=\"languagesOptions\"\n                                formControlName=\"languages\" [clearable]=\"false\" [selectableGroup]=\"true\" [closeOnSelect]=\"false\"\n                                placeholder=\"{{'Common.Form.SelectFromMenu' | translate:{'value': 'users.Students.Languages' | translate} }}\" class=\"custom\">\n                            <ng-template ng-loadingspinner-tmp><div class=\"lds-ellipsis mx-2\"><div></div><div></div><div></div><div></div></div></ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\" let-item$=\"item$\" let-index=\"index\">\n                                <input id=\"item-{{index}}\" type=\"checkbox\" [checked]=\"item$.selected\"/>&nbsp;{{item.name}}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'SocialMedias.Title' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-instagram\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"instagram\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Instagram' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.instagram.errors && updateValidator.instagram.touched}\"  >\n                                <div *ngIf=\"updateValidator.instagram.touched && updateValidator.instagram.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.instagram.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-linkedin-square\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"linkedin\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Linkedin' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.linkedin.errors && updateValidator.linkedin.touched}\"  >\n                                <div *ngIf=\"updateValidator.linkedin.touched && updateValidator.linkedin.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.linkedin.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-twitter\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"twitter\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Twitter' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.twitter.errors && updateValidator.twitter.touched}\"  >\n                                <div *ngIf=\"updateValidator.twitter.touched && updateValidator.twitter.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.twitter.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-facebook-square\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"facebook\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Facebook' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.facebook.errors && updateValidator.facebook.touched}\"  >\n                                <div *ngIf=\"updateValidator.facebook.touched && updateValidator.facebook.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.facebook.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer text-right\">\n                    <button class=\"btn btn-success\"  type=\"submit\" [disabled]=\"isSubmitting\">\n                        <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n                        <i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.UpdateData' | translate}}&nbsp;\n                    </button>\n                    <!-- [disabled]=\"isSubmitting || !edtTaskerAccountForm.valid\" -->\n                </div>\n            </div>\n        </form><!-- End Normal Edt BootStrap Form -->\n    </div>\n</article>\n\n\n","import { Component, OnInit, Output, EventEmitter, ViewChild, ElementRef, Input } from '@angular/core';\nimport { Utilities } from 'src/app/_services/utilities.service';\nimport { UploadStatus, UploadHandlerResult } from 'src/app/_helpers/uploader/uploadHandlerResult';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { Portfolio } from '../../../models/portfolio';\nimport { PortfoliosService } from 'src/app/_services/users/portfolios.service';\nimport { Photo } from 'src/app/_models/Users/Photo';\nimport { FileUploader, FileItem } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/_models/Users/User';\nimport { KeyValuePairResource, KeyValueResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { Key } from 'protractor';\nimport { FileUploaderOneRequest } from 'src/app/_helpers/uploader/FileUploader';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-portfolio',\n  templateUrl: './create-portfolio.component.html',\n  styleUrls: ['./create-portfolio.component.css']\n})\nexport class CreatePortfolioComponent implements OnInit {\n  @Output() addSuccessfully: EventEmitter<Portfolio> = new EventEmitter<Portfolio>();\n  addPortfolioForm: FormGroup;\n  isSubmitting: boolean = false;\n\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  uploader: FileUploaderOneRequest;\n  hasBaseDropZoneOver = false;\n  currentMain: Photo;\n  user: User;\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private portfoliosService: PortfoliosService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n    this.initAddForm();\n  }\n\n\n  initAddForm() {\n    this.addPortfolioForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.maxLength(300)],\n    });\n  }\n\n  get addValidator() { return this.addPortfolioForm.controls; }\n\n  addNewPortfolio() {\n    if (this.addPortfolioForm.valid && this.uploader.queue.length > 0) {\n      this.isSubmitting = true;\n      this.addPortfolioForm.disable();\n      this.uploader.uploadAllFiles();\n    } else {\n      if (this.uploader.queue.length <= 0)\n        this.alertify.error('اختر صورة واحده على الأقل');\n      else\n        this.alertify.error(this.appTranslation.get('Common.Data.Invalid'));\n      this.addPortfolioForm.enable();\n      this.addPortfolioForm.markAllAsTouched();\n      this.isSubmitting = false;\n    }\n  }\n\n  // تجهيز رافع الملفات\n  initializeUploader() {\n    const maxFileSize = 1 * 1024 * 1024;\n    const queueLimit = 5;\n\n    this.uploader = new FileUploaderOneRequest({\n      url: `${this.portfoliosService.portfoliosUrl}/images`,\n      itemAlias: 'file',\n      authToken: `Bearer ${localStorage.getItem('token')}`,\n      queueLimit: queueLimit,\n      isHTML5: true,\n      allowedFileType: ['image'], //, 'pdf', 'doc', 'docx'\n      // additionalParameter: {  replyId: '0' },\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: maxFileSize,\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onBuildItemForm = (fileItem, form) => {\n      const formData: KeyValueResource[] = [];\n      Utilities.convertModelToKeyValue(this.addPortfolioForm.value, formData);\n      formData.forEach(data => { form.append(data.key, data.value); });\n    };\n\n    this.uploader.onErrorItem = (item, Response, status, headers) => {\n      this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.UnknownError', item._file.name));\n    };\n\n    this.uploader.onProgressItem = (fileItem, progress) => {\n      console.log(`onProgressItem ${fileItem._file.name}`);\n    };\n\n    this.uploader.onProgressAll = (progress) => {\n      console.log('onProgressAll');\n    };\n\n    this.uploader.onSuccessItem = (item, Response, status, headers) => {\n      console.log('onSuccessItem');\n      if (Response) {\n        var returnPortfolio = JSON.parse(Response);\n        if (Response) {\n          if (<UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.success ||\n            <UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.successWithSomeFailure) {\n            this.alertify.success(this.appTranslation.get('Common.Data.SavedSuccessfully'));\n            this.router.navigate(['./profile']);\n            if (<UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.successWithSomeFailure) {\n              this.alertify.info(returnPortfolio.message);\n            }\n          } else if (<UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.failure) {\n            this.alertify.error(returnPortfolio.message);\n          }\n        }\n      }\n    };\n\n    this.uploader.onCompleteAll = () => {\n      console.log('onCompleteAll');\n      this.addPortfolioForm.reset();\n      this.addPortfolioForm.enable();\n      this.isSubmitting = false;\n    };\n\n    this.uploader.onWhenAddingFileFailed = (item, filter) => {\n      debugger;\n      switch (filter.name) {\n        case 'queueLimit':\n          this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.QueueLimit', queueLimit.toString()));\n          break;\n        case 'fileSize':\n          this.alertify.alert(`${this.appTranslation.getWithValue('Common.Upload.FailureFileName', item.name)} ${Utilities.formatBytes(item.size)}، ${this.appTranslation.getWithValue('Common.Upload.FailureFileSize', Utilities.formatBytes(maxFileSize))}`);\n          break;\n        case 'fileType':\n          this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.FailureFileType', item.name));\n          break;\n        default:\n          this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.UnknownError', item.name));\n          break;\n      }\n    };\n\n    this.uploader.onErrorItem = (item, response: string, status, headers) => {\n      this.alertify.alert(response);\n    };\n  }\n\n\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n\n}\n","<!-- ======= Breadcrumbs ======= -->\n<section id=\"breadcrumbs\" class=\"breadcrumbs\">\n  <div class=\"container\">\n      <div class=\"d-flex justify-content-between align-items-center\">\n          <div>\n              <h2>{{'Portfolios.portfolio' | translate }}</h2>\n              <span class=\"sub-title job-title-badge badge badge-info\">{{'Portfolios.New' | translate }}</span>\n          </div>\n          <ol>\n              \n              <li><a [routerLink]=\"['/profile']\">{{'Portfolios.portfolio' | translate }}</a></li>\n          </ol>\n      </div>\n  </div>\n</section><!-- End Breadcrumbs -->\n\n<article id=\"profile\" class=\"content\">\n    <div class=\"container\">\n      <!-- start Normal Add BootStrap CardForm Form -->\n      <form id =\"formAddPortfolio\" [formGroup]=\"addPortfolioForm\" (ngSubmit)=\"addNewPortfolio()\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h5><span class=\"fa fa-plus\"></span>&nbsp;{{'Portfolios.New' | translate }}</h5>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"form-group\">\n              <label class=\"font-weight-bold\" >{{'Portfolios.Title' | translate }}<strong class=\"text-danger\">*</strong></label>\n              <input class= \"form-control default\"  maxlength=\"150\" formControlName=\"title\" [ngClass]=\"{'is-invalid' : addValidator.title.errors && addValidator.title.touched}\"  >\n              <div *ngIf=\"addValidator.title.touched && addValidator.title.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"addValidator.title.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"font-weight-bold\" >{{'Portfolios.Description' | translate }}</label>\n              <textarea class= \"form-control default\" rows=\"6\"  maxlength=\"300\" formControlName=\"description\" placeholder= \"{{'Common.Form.MaxThreeHundred' | translate:{'value': 'Portfolios.DescriptionPlaceHolder' | translate} }}\" [ngClass]=\"{'is-invalid' : addValidator.description.errors && addValidator.description.touched}\"  ></textarea>\n              <div *ngIf=\"addValidator.description.touched && addValidator.description.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"addValidator.description.errors.minlength || addValidator.description.errors.maxlength\" > {{'Common.Form.MaxThreeHundred' | translate:{'value': 'Portfolios.DescriptionPlaceHolder' | translate} }}</div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n                      <label class=\"hidden-xs\">{{'Common.Upload.SelectFiles' | translate:{'value': 'Common.Upload.Images' | translate} }}</label>\n                      <div ng2FileDrop class=\"drop-container dropzone\" [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" (fileOver)=\"fileOverBase($event)\" [uploader]=\"uploader\" > <!-- [class.hovering]=\"isHovering\" -->\n                          <p class=\"m-0\">\n                            {{'Common.Upload.DropZone' | translate:{'value': 'Common.Upload.Images' | translate} }}\n                            <label class=\"upload-button\">\n                              <input type=\"file\" #uploadMult ng2FileSelect [uploader]=\"uploader\" multiple>{{'Common.Upload.SelectManually' | translate }}\n                            </label>\n                          </p>\n                          <p class=\"m-0\">\n                            {{'Common.Upload.Allowed' | translate }} <span class=\"badge badge-info mr-1\">{{'Common.Upload.Only' | translate:{'value': 'Common.Upload.Images' | translate} }}</span> |\n                            {{'Common.Upload.MaxSize' | translate }} <span class=\"badge badge-dark\"> {{'Common.Upload.SizeMega' | translate:{'value':'1'} }} </span>\n                          </p>\n                          <div *ngIf=\"uploader?.queue?.length\">\n                            <p class=\"m-0\">{{'Common.Upload.SelectedFiles' | translate:{'value': 'Common.Upload.Images' | translate} }} {{ uploader?.queue?.length }} <i class=\"fa fa-paperclip\"></i></p>\n                          </div>\n                      </div>\n                      <div *ngIf=\"uploader?.queue?.length\">\n                        <div class=\"table-responsive\">\n                          <table class=\"table table-sm table-bordered table-hover table-light\">\n                            <thead class=\"table-info\">\n                              <tr>\n                                <th class=\"text-center\" width=\"50%\">{{'Common.Upload.FileName' | translate }}</th>\n                                <th class=\"text-center\">{{'Common.Upload.TheSize' | translate }}</th>\n                                <th colspan=\"1\"></th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let item of uploader.queue\">\n                                <td class=\"text-left\" style=\"overflow: hidden;\"><img thumbnail [image]=\"item?._file\">{{ item?.file?.name | slice : 0 : 25 }}</td>\n                                <td class=\"text-center\" *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} mb</td>\n                                <!-- <td class=\"text-center\"><button type=\"button\" class=\"btn btn-success btn-sm pt-0\" (click)=\"item.upload()\" [disabled]=\"item.isReady || item.isUploading || item.isSuccess\"><i class=\"fa fa-upload\"></i></button></td>\n                                <td class=\"text-center\"><button type=\"button\" class=\"btn btn-warning btn-sm pt-0\" (click)=\"item.cancel()\" [disabled]=\"!item.isUploading\"><i class=\"fa fa-ban\"></i></button></td> -->\n                                <td class=\"text-center\"><button type=\"button\" class=\"btn btn-danger btn-sm pt-0\" (click)=\"item.remove()\"><i class=\"fa fa-trash-o\"></i></button></td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                      \n                  <div *ngIf=\"uploader?.queue?.length\" class=\"col-12\" style=\"margin-bottom: 40px\">\n                      <div class=\"progress\">\n                          <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                      </div>\n                      <!-- <div class=\"text-center p-3\">\n                          <button type=\"button\" class=\"btn btn-outline-success btn-sm m-1\" (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                              <i class=\"fa fa-upload\"></i> {{'Common.Upload.UploadAll' | translate }}\n                          </button>\n                          <button type=\"button\" class=\"btn btn-outline-warning btn-sm m-1\" (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                              <i class=\"fa fa-ban\"></i> {{'Common.Upload.CancelAll' | translate }}\n                          </button>\n                          <button type=\"button\" class=\"btn btn-outline-danger btn-sm m-1\" (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                              <i class=\"fa fa-trash-o\"></i> {{'Common.Upload.DeleteAll' | translate }}\n                          </button>\n                      </div>     -->\n                  </div>\n                  \n          </div>\n          <div class=\"card-footer text-right\">\n            <button id=\"btnAddPortfolio\" class=\"btn btn-primary\" [disabled]=\"isSubmitting\" type=\"submit\">\n              <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n              <i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.Save' | translate}}&nbsp;\n            </button>\n          </div>\n        </div>\n      </form>\n      <!-- End Normal Add BootStrap CardForm Form -->\n    </div>\n</article>\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Portfolio, PortfolioPhoto } from '../../../models/portfolio';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AppTitleService } from 'src/app/_helpers/app-title.service';\nimport { PortfoliosService } from 'src/app/_services/users/portfolios.service';\nimport { FileUploaderOneRequest } from 'src/app/_helpers/uploader/FileUploader';\nimport { UploadStatus } from 'src/app/_helpers/uploader/uploadHandlerResult';\nimport { Utilities } from 'src/app/_services/utilities.service';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-modify-portfolio',\n  templateUrl: './modify-portfolio.component.html',\n  styleUrls: ['./modify-portfolio.component.css']\n})\nexport class ModifyPortfolioComponent implements OnInit {\n  portfolioId: number = 0;\n  userId: any;\n  portfolio: Portfolio;\n  currentMainPhoto: PortfolioPhoto;\n  uploader: FileUploaderOneRequest;\n  hasBaseDropZoneOver = false;\n  editPortfolioForm: FormGroup;\n  isSubmitting: boolean = false;\n\n  constructor(private router: Router, private route: ActivatedRoute, private alertify: AlertifyService, private formBuilder: FormBuilder,\n    private appTranslation: AppTranslationService, private appTitle: AppTitleService, private portfoliosService: PortfoliosService) { }\n\n  ngOnInit(): void {\n    this.initeditForm();\n    this.route.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('portfolioId') || +paramMap.get('portfolioId') == 0) {\n        this.alertify.error(this.appTranslation.get('Common.Messages.ErrorOnAction'));\n        this.router.navigate(['./profile/', paramMap.get('userId') ?? '']);\n        return;\n      }\n      this.userId = paramMap.get('userId') ?? null;\n      this.portfolioId = +paramMap.get('portfolioId');\n      this.portfoliosService.getPortfolio(this.portfolioId).subscribe(\n        (result: Portfolio) => {\n          this.portfolio = result;\n          if (result) { this.editPortfolioForm.patchValue(result); }\n        },\n        (error: any) => {\n          this.alertify.error(this.appTranslation.get('Common.Messages.ErrorOnAction'));\n          this.router.navigate(['./profile/', paramMap.get('userId') ?? '']);\n        }\n      );\n      console.log(this.portfolioId);\n      this.initializeUploader();\n\n      // تم اضافة ال setTimeout لحل مشكلة ال Expression has changed after it was checked.\n      // setTimeout(() => {\n      //   this.appTitle.changeNavgationTitle(`تذكرة رقم #${this.ticket?.id}`, ``);\n      //   this.appTitle.changeTabTitle(`تذكرة رقم #${this.ticket?.id}`);\n      // }, 0);\n    });\n  }\n\n  getImageUrl(imageName: string, size: number): string {\n    return `${this.portfoliosService.portfoliosUrl}/images/${size ?? 200}/${imageName}`;\n  }\n\n  get currentUrl(): string {\n    return window.location.href;\n  }\n\n  initeditForm() {\n    this.editPortfolioForm = this.formBuilder.group({\n      id: [null, Validators.required],\n      title: ['', Validators.required],\n      description: ['', Validators.maxLength(300)],\n    });\n  }\n\n  get editValidator() { return this.editPortfolioForm.controls; }\n\n  updatePortfolio() {\n    this.editPortfolioForm.markAllAsTouched();\n    if (this.editPortfolioForm.valid) {\n      this.editPortfolioForm.disable();\n      this.isSubmitting = true;\n      this.portfoliosService.updatePortfolio(this.editPortfolioForm.value).subscribe(\n        returnPortfolio => {\n          this.alertify.success(this.appTranslation.get('Common.Data.SavedSuccessfully'));\n          if (returnPortfolio) {\n            this.portfolio.title = returnPortfolio.title;\n            this.portfolio.description = returnPortfolio.description;\n          }\n        },\n        error => { this.alertify.error(error); },\n        () => { });\n      this.editPortfolioForm.enable();\n      this.isSubmitting = false;\n    }\n  }\n\n  // تجهيز رافع الملفات\n  initializeUploader() {\n    const maxFileSize = 1 * 1024 * 1024;\n    const queueLimit = 5;\n\n    this.uploader = new FileUploaderOneRequest({\n      url: `${this.portfoliosService.portfoliosUrl}/${this.portfolioId}/images`,\n      itemAlias: 'file',\n      authToken: `Bearer ${localStorage.getItem('token')}`,\n      queueLimit: queueLimit,\n      isHTML5: true,\n      allowedFileType: ['image'], //, 'pdf', 'doc', 'docx'\n      additionalParameter: { portfolioId: `${this.portfolioId}` },\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: maxFileSize,\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onErrorItem = (item, Response, status, headers) => {\n      this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.UnknownError', item._file.name));\n    };\n\n    this.uploader.onProgressItem = (fileItem, progress) => {\n      console.log(`onProgressItem ${fileItem._file.name}`);\n    };\n\n    this.uploader.onProgressAll = (progress) => {\n      console.log('onProgressAll');\n    };\n\n    this.uploader.onSuccessItem = (item, Response, status, headers) => {\n      console.log('onSuccessItem');\n      if (Response) {\n        var returnPortfolio = JSON.parse(Response);\n        if (Response) {\n          if (<UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.success ||\n            <UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.successWithSomeFailure) {\n            this.alertify.success(this.appTranslation.get('Common.Data.SavedSuccessfully'));\n            this.portfolio.photos.push(returnPortfolio?.data);\n            if (<UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.successWithSomeFailure) {\n              this.alertify.info(returnPortfolio.message);\n            }\n          } else if (<UploadStatus>returnPortfolio.status === <UploadStatus>UploadStatus.failure) {\n            this.alertify.error(returnPortfolio.message);\n          }\n        }\n      }\n    };\n\n    this.uploader.onCompleteAll = () => {\n      console.log('onCompleteAll');\n    };\n\n    this.uploader.onWhenAddingFileFailed = (item, filter) => {\n      switch (filter.name) {\n        case 'queueLimit':\n          this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.QueueLimit', queueLimit.toString()));\n          break;\n        case 'fileSize':\n          this.alertify.alert(`${this.appTranslation.getWithValue('Common.Upload.FailureFileName', item.name)} ${Utilities.formatBytes(item.size)}، ${this.appTranslation.getWithValue('Common.Upload.FailureFileSize', Utilities.formatBytes(maxFileSize))}`);\n          break;\n        case 'fileType':\n          this.alertify.alert(`${this.appTranslation.getWithValue('Common.Upload.FailureFileType', item.name)}`);\n          break;\n        default:\n          this.alertify.alert(this.appTranslation.getWithValue('Common.Upload.UnknownError', item.name));\n          break;\n      }\n    };\n\n    this.uploader.onErrorItem = (item, response: string, status, headers) => {\n      this.alertify.alert(response);\n    };\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  setMainPhoto(photo: PortfolioPhoto) {\n    this.portfoliosService.setMainPhoto(this.portfolioId, photo.id).subscribe(\n      () => {\n        this.currentMainPhoto = this.portfolio.photos.filter(p => p.isMain === true)[0];\n        this.currentMainPhoto.isMain = false;\n        photo.isMain = true;\n      },\n      () => { this.alertify.error('يوجد مشكلة في الصورة الأساسية'); }\n    );\n  }\n\n  delete(id: number) {\n    this.alertify.confirm(\"هل تريد حذف تلك الصورة\", () => {\n      this.portfoliosService.deletePhoto(this.portfolioId, id).subscribe(\n        () => {\n          this.portfolio.photos.splice(this.portfolio.photos.findIndex(p => p.id === id), 1);\n          this.alertify.success(\"تم حذف الصورة بنجاح\");\n        },\n        error => { this.alertify.error(\"حدث خطأ أثناء حذف الصورة\"); }\n      );\n    });\n  }\n\n\n}\n","<app-article-spinner *ngIf=\"!portfolio\"></app-article-spinner>\n\n<!-- ======= Breadcrumbs ======= -->\n<section *ngIf=\"portfolio\" id=\"breadcrumbs\" class=\"breadcrumbs\">\n    <div class=\"container\">\n        <div class=\"d-flex justify-content-between align-items-center\">\n            <div>\n                <h2><span class=\"mr-1 job-title-badge badge badge-info\">{{'Portfolios.Work'| translate}}</span>{{portfolio?.title}}</h2>\n                <span class=\"sub-title\"><i class=\"fa fa-clock-o\"></i>&nbsp;{{portfolio?.createdDate | timeAgo}}</span>\n            </div>\n            <ol>\n                \n                <li><a [routerLink]=\"['/profile']\">{{'Portfolios.portfolio' | translate }}</a></li>\n            </ol>\n        </div>\n    </div>\n</section><!-- End Breadcrumbs -->\n\n<ng-container *ngIf=\"portfolio\">\n   <!-- ======= Job details Section ======= -->\n   <section id=\"job-details\" class=\"jobs text-left\"> \n        <div class=\"container my-3\">\n            <div>\n                <div class=\"col-md-12 p-0 h-100\">\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            <a data-toggle=\"collapse\" href=\"#portfolio-images\" aria-expanded=\"true\" \n                            id=\"heading-example\" class=\"d-flex align-self-stretch p-3\">\n                            <h4 class=\"flex-grow-1 m-0 text-left\">{{'Common.Upload.Images' | translate }}</h4>\n                            <i class=\"fa fa-chevron-down m-0\" style=\"align-self: center !important;\"></i>\n                            </a>\n                        </div>\n                        <div id=\"portfolio-images\" class=\"collapse show\">\n                            <div class=\"card-block\">\n                                <div class=\"mx-2 img-wrapper\" style=\"display: inline-block;\" *ngFor=\"let photo of portfolio?.photos; let i=index\">\n                                  <img [src]=\"getImageUrl(photo?.publicId ,200)\" class=\"img-thumbnail\">\n                                  <div class=\"text-center mb-2\" >\n                                    <button type=\"button\" (click)=\"setMainPhoto(photo)\" [disabled]=\"photo.isMain\" [ngClass]=\"photo.isMain ? 'btn btn-sm btn-info btn-down' : 'btn btn-sm btn-outline-info btn-down' \">\n                                      <strong>{{'Common.CRUD.IsMain' | translate }}</strong>\n                                    </button>\n                                    <button type=\"button\" [disabled]=\"photo.isMain\" (click)=\"delete(photo.id)\" class=\"btn btn-sm btn-outline-danger btn-down\"><i class=\"fa fa-trash-o\"></i></button>\n                                  </div>\n                                </div>\n                                <div class=\"form-group\">\n                                        <label class=\"hidden-xs\">{{'Common.Upload.SelectFiles' | translate:{'value': 'Common.Upload.Images' | translate} }}</label>\n                                        <div ng2FileDrop class=\"drop-container dropzone\" [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" (fileOver)=\"fileOverBase($event)\" [uploader]=\"uploader\" >\n                                            <p class=\"m-0\">\n                                            {{'Common.Upload.DropZone' | translate:{'value': 'Common.Upload.Images' | translate} }}\n                                            <label class=\"upload-button\">\n                                                <input type=\"file\" #uploadMult ng2FileSelect [uploader]=\"uploader\" multiple>{{'Common.Upload.SelectManually' | translate }}\n                                            </label>\n                                            </p>\n                                            <p class=\"m-0\">\n                                            {{'Common.Upload.Allowed' | translate }} <span class=\"badge badge-info mr-1\">{{'Common.Upload.Only' | translate:{'value': 'Common.Upload.Images' | translate} }}</span> |\n                                            {{'Common.Upload.MaxSize' | translate }} <span class=\"badge badge-dark\"> {{'Common.Upload.SizeMega' | translate:{'value':'1'} }} </span>\n                                            </p>\n                                            <div *ngIf=\"uploader?.queue?.length\">\n                                            <p class=\"m-0\">{{'Common.Upload.SelectedFiles' | translate:{'value': 'Common.Upload.Images' | translate} }} {{ uploader?.queue?.length }} <i class=\"fa fa-paperclip\"></i></p>\n                                            </div>\n                                        </div>\n                                        <div *ngIf=\"uploader?.queue?.length\">\n                                            <div class=\"table-responsive\">\n                                                <table class=\"table table-sm table-bordered table-hover table-light\">\n                                                    <thead class=\"table-info\">\n                                                        <tr>\n                                                        <th class=\"text-center\" width=\"50%\">{{'Common.Upload.FileName' | translate }}</th>\n                                                        <th class=\"text-center\">{{'Common.Upload.TheSize' | translate }}</th>\n                                                        <th colspan=\"3\"></th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        <tr *ngFor=\"let item of uploader.queue\">\n                                                        <td class=\"text-left\" style=\"overflow: hidden;\"><img thumbnail [image]=\"item?._file\">{{ item?.file?.name | slice : 0 : 25 }}</td>\n                                                        <td class=\"text-center\" *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} mb</td>\n                                                        <td class=\"text-center\"><button type=\"button\" class=\"btn btn-success btn-sm pt-0\" (click)=\"item.upload()\" [disabled]=\"item.isReady || item.isUploading || item.isSuccess\"><i class=\"fa fa-upload\"></i></button></td>\n                                                        <td class=\"text-center\"><button type=\"button\" class=\"btn btn-warning btn-sm pt-0\" (click)=\"item.cancel()\" [disabled]=\"!item.isUploading\"><i class=\"fa fa-ban\"></i></button></td>\n                                                        <td class=\"text-center\"><button type=\"button\" class=\"btn btn-danger btn-sm pt-0\" (click)=\"item.remove()\"><i class=\"fa fa-trash-o\"></i></button></td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                            <div>\n                                                <div class=\"progress\">\n                                                    <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                                                </div>\n                                                <div class=\"text-center p-3\">\n                                                    <button type=\"button\" class=\"btn btn-outline-success btn-sm m-1\" (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                                                        <i class=\"fa fa-upload\"></i> تحميل الكل\n                                                    </button>\n                                                    <button type=\"button\" class=\"btn btn-outline-warning btn-sm m-1\" (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                                                        <i class=\"fa fa-ban\"></i> إلغاء الكل\n                                                    </button>\n                                                    <button type=\"button\" class=\"btn btn-outline-danger btn-sm m-1\" (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                                                        <i class=\"fa fa-trash-o\"></i> حذف الكل\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- start Normal Add BootStrap CardForm Form -->\n                    <div class=\"card\">\n                        <form id =\"formAddPortfolio\" [formGroup]=\"editPortfolioForm\" (ngSubmit)=\"updatePortfolio()\">\n                            <div class=\"card-header\">\n                                <a data-toggle=\"collapse\" href=\"#portfolio-description\" aria-expanded=\"true\" \n                                id=\"heading-example\" class=\"d-flex align-self-stretch p-3\">\n                                <h4 class=\"flex-grow-1 m-0 text-left\">{{'Portfolios.DescriptionPlaceHolder' | translate }}</h4>\n                                <i class=\"fa fa-chevron-down m-0\" style=\"align-self: center !important;\"></i>\n                                </a>\n                            </div>\n                            <div class=\"card-body\">\n                                <div class=\"form-group\">\n                                    <label class=\"font-weight-bold\" >{{'Portfolios.Title' | translate }}<strong class=\"text-danger\">*</strong></label>\n                                    <input class= \"form-control default\"  maxlength=\"150\" formControlName=\"title\" [ngClass]=\"{'is-invalid' : editValidator.title.errors && editValidator.title.touched}\"  >\n                                    <div *ngIf=\"editValidator.title.touched && editValidator.title.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"editValidator.title.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"font-weight-bold\" >{{'Portfolios.Description' | translate }}</label>\n                                    <textarea class= \"form-control default\" rows=\"6\"  maxlength=\"300\" formControlName=\"description\" placeholder= \"{{'Common.Form.MaxThreeHundred' | translate:{'value': 'Portfolios.DescriptionPlaceHolder' | translate} }}\" [ngClass]=\"{'is-invalid' : editValidator.description.errors && editValidator.description.touched}\"  ></textarea>\n                                    <div *ngIf=\"editValidator.description.touched && editValidator.description.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"editValidator.description.errors.minlength || editValidator.description.errors.maxlength\" > {{'Common.Form.MaxThreeHundred' | translate:{'value': 'Portfolios.DescriptionPlaceHolder' | translate} }}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"card-footer text-right\">\n                                <button id=\"btnAddPortfolio\" class=\"btn btn-primary\" [disabled]=\"isSubmitting\" type=\"submit\">\n                                <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n                                <i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.Save' | translate}}&nbsp;\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                    <!-- End Normal Add BootStrap CardForm Form -->\n                    <div class=\"d-none d-sm-block\" style=\"height: 200px;\">\n                    </div>\n\n                </div>\n            </div>\n        </div>\n   </section><!-- End Job details Section -->   \n</ng-container>","import { Component, OnInit, Input } from '@angular/core';\nimport { Portfolio } from '../../../models/portfolio';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AppTitleService } from 'src/app/_helpers/app-title.service';\nimport { PortfoliosService } from 'src/app/_services/users/portfolios.service';\n\n@Component({\n  selector: 'app-portfolio-details',\n  templateUrl: './portfolio-details.component.html',\n  styleUrls: []\n})\nexport class PortfolioDetailsComponent implements OnInit {\n  portfolioId: number = 0;\n  userId: any;\n  portfolio: Portfolio;\n\n  constructor(private router: Router, private route: ActivatedRoute, private alertify: AlertifyService\n    , private appTranslation: AppTranslationService, private appTitle: AppTitleService, private portfoliosService: PortfoliosService) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('portfolioId') || +paramMap.get('portfolioId') == 0) {\n        this.alertify.error(this.appTranslation.get('Common.Messages.ErrorOnAction'));\n        this.router.navigate(['./profile/', paramMap.get('userId') ?? '']);\n        return;\n      }\n      this.userId = paramMap.get('userId') ?? null;\n      this.portfolioId = +paramMap.get('portfolioId');\n      this.portfoliosService.getPortfolio(this.portfolioId).subscribe(\n        (result: Portfolio) => {\n          this.portfolio = result;\n        },\n        (error: any) => {\n          this.alertify.error(this.appTranslation.get('Common.Messages.ErrorOnAction'));\n          this.router.navigate(['./profile/', paramMap.get('userId') ?? '']);\n        }\n      );\n      console.log(this.portfolioId);\n      // تم اضافة ال setTimeout لحل مشكلة ال Expression has changed after it was checked.\n      // setTimeout(() => {\n      //   this.appTitle.changeNavgationTitle(`تذكرة رقم #${this.ticket?.id}`, ``);\n      //   this.appTitle.changeTabTitle(`تذكرة رقم #${this.ticket?.id}`);\n      // }, 0);\n    });\n  }\n\n  getImageUrl(imageName: string, size: number): string {\n    return `${this.portfoliosService.portfoliosUrl}/images/w/${size ?? 200}/${imageName}`;\n  }\n\n  get currentUrl(): string {\n    return window.location.href;\n  }\n\n\n\n}\n","<app-article-spinner *ngIf=\"!portfolio\"></app-article-spinner>\n\n   <!-- ======= Breadcrumbs ======= -->\n   <section id=\"breadcrumbs\" class=\"breadcrumbs\">\n    <div class=\"container\">\n      <div class=\"d-flex justify-content-between align-items-center\">\n        <div>\n            <h2><span class=\"mr-1 job-title-badge badge badge-info\">{{'Portfolios.Work'| translate}}</span>{{portfolio?.title}}</h2>\n            <span class=\"sub-title\"><i class=\"fa fa-clock-o\"></i>&nbsp;{{portfolio?.createdDate | timeAgo}}</span>\n        </div>\n        <ol>\n          \n          <li><a [routerLink]=\"['/profile/', userId]\">{{'Portfolios.portfolio' | translate }}</a></li>\n        </ol>\n      </div>\n    </div>\n  </section><!-- End Breadcrumbs -->\n\n<ng-container *ngIf=\"portfolio\">\n   <!-- ======= Job details Section ======= -->\n   <section id=\"job-details\" class=\"jobs\"> \n        <div class=\"container my-3\">\n            <div>\n                <div class=\"col-md-8 p-0 px-md-2 float-md-right h-100\">\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            <a data-toggle=\"collapse\" href=\"#portfolio-images\" aria-expanded=\"true\" \n                            id=\"heading-example\" class=\"d-flex align-self-stretch p-3\">\n                            <h4 class=\"flex-grow-1 m-0 text-left\">{{'Common.Upload.Images' | translate }}</h4>\n                            <i class=\"fa fa-chevron-down m-0\" style=\"align-self: center !important;\"></i>\n                            </a>\n                        </div>\n                        <div id=\"portfolio-images\" class=\"collapse show\">\n                            <div class=\"card-block  text-left\" *ngFor=\"let photo of portfolio?.photos; let i=index\">\n                                <img class=\"card-img-top border p-2\" [src]=\"getImageUrl(photo?.publicId ,500)\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            <a data-toggle=\"collapse\" href=\"#portfolio-description\" aria-expanded=\"true\" \n                            id=\"heading-example\" class=\"d-flex align-self-stretch p-3\">\n                            <h4 class=\"flex-grow-1 m-0 text-left\">{{'Portfolios.DescriptionPlaceHolder' | translate }}</h4>\n                            <i class=\"fa fa-chevron-down m-0\" style=\"align-self: center !important;\"></i>\n                            </a>\n                        </div>\n                        <div id=\"portfolio-description\" class=\"collapse show\">\n                            <div class=\"card-block  text-left\">\n                                {{portfolio?.description}}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"d-none d-sm-block\" style=\"height: 200px;\">\n                    </div>\n\n                </div>\n\n                <div class=\"col-md-4 p-0 float-md-left\">\n                    <div class=\"card \">\n                        <div class=\"card-header p-0\">\n                            <a data-toggle=\"collapse\" href=\"#job-test\" aria-expanded=\"true\" \n                            id=\"heading-example\" class=\"d-flex align-self-stretch p-3\">\n                            <h4 class=\"flex-grow-1 m-0 text-left\">{{'Portfolios.Shared' | translate }}</h4>\n                            <i class=\"fa fa-chevron-down m-0\" style=\"align-self: center !important;\"></i>\n                            </a>\n                        </div>\n                        <div id=\"job-test\" class=\"collapse show\">\n                            <div class=\"card-block text-left\">\n                                <div class=\"input-group mb-3\">\n                                    <input type=\"text\" class=\"form-control\" [value]=\"currentUrl\">\n                                </div>\n                                <div class=\"form-group text-center\">\n                                    <a target=\"blank\" href=\"https://www.facebook.com/sharer/sharer.php?u={{currentUrl}}\" class=\"fa fa-facebook social-button social-button-facebook\" title=\"المشاركة على الفيسبوك\"></a>\n                                    <a target=\"blank\" href=\"https://twitter.com/intent/tweet?url={{currentUrl}}\" class=\"fa fa-twitter social-button social-button-twitter\" title=\"المشاركة على تويتر\"></a>\n                                    <a target=\"blank\" href=\"https://www.linkedin.com/sharing/share-offsite/?url={{currentUrl}}\" class=\"fa fa-linkedin social-button social-button-linkedin\" title=\"المشاركة على لينكدين\"></a>\n                                    <a target=\"blank\" href=\"https://wa.me/?text={{currentUrl}}\" class=\"fa fa-whatsapp social-button social-button-whatsapp\" title=\"المشاركة على الواتس اب\"></a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n   </section><!-- End Job details Section -->   \n</ng-container>","import { Component, OnInit, Input } from '@angular/core';\nimport { Portfolio } from '../../../models/portfolio';\nimport { PortfoliosService } from 'src/app/_services/users/portfolios.service';\n\n@Component({\n  selector: 'app-portfolios-list',\n  templateUrl: './portfolios-list.component.html',\n  styleUrls: []\n})\nexport class PortfoliosListComponent implements OnInit {\n  @Input('UserPortfolios') userPortfolios: Portfolio[];\n  @Input('IsCurrentUserProfile') isCurrentUserProfile: boolean;\n\n  constructor(private portfoliosService: PortfoliosService) { }\n\n  ngOnInit(): void {\n  }\n\n  getImageUrl(imageName: string, size: number): string {\n    return `${this.portfoliosService.portfoliosUrl}/images/${size ?? 200}/${imageName}`;\n  }\n\n}\n","<div *ngIf=\"isCurrentUserProfile\" class=\"row p-1\">\n    <div class=\"container text-right p-0\">\n        <a [routerLink]=\"[ './portfolio/new']\" class=\"btn btn-primary btn-sm edit-profile\">\n            <i class=\"fa fa-plus-circle fa-lg\"></i> {{'Common.CRUD.Add' | translate }}\n        </a>\n    </div>\n</div>\n<div class=\"row no-padding-sm\">\n    <ng-container *ngIf=\"userPortfolios?.length > 0; else nothingTemplate\">\n        <div class=\"col-md-6 col-lg-4 col-12\" *ngFor=\"let portfolio of userPortfolios; let i = index;\">\n            <div class=\"card-deck\">\n                <div class=\"card border-info mb-3 mx-1\">\n                    <img class=\"card-img-top p-2\" [src]=\"getImageUrl(portfolio?.photos[0]?.publicId ,300)\"\n                        alt=\"Card image cap\">\n                    <div class=\"card-body p-1\">\n                        <h5 class=\"card-title text-info\">{{portfolio?.title}}</h5>\n                        <a *ngIf=\"isCurrentUserProfile\" [routerLink]=\"['/profile' , 'portfolio', 'edit', portfolio?.id ]\" class=\"btn btn-outline-success btn-sm pull-right\">{{'Common.CRUD.Update' | translate }}</a>\n                        <a [routerLink]=\"[ '/profile', 'portfolio', portfolio?.id , portfolio?.title ]\" class=\"btn btn-outline-secondary btn-sm pull-right\">{{'Common.Data.View' | translate}}</a>\n                    </div>\n                    <div class=\"card-footer\">\n                        <small class=\"text-muted\">{{portfolio?.createdDate | timeAgo}}</small>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-template #nothingTemplate>\n        <p class=\"form-control-plaintext text-break text-secondary pt-0 text-center\">\n            {{'Common.Messages.NoRecordWasAdded' | translate:{'value': 'Portfolios.Work' | translate} }}</p>\n    </ng-template>\n</div>","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/_services/users/User.service';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\nimport { MessageWithObject } from 'src/app/_models/data/actions-result';\n\n@Component({\n  selector: 'app-tasker-profile',\n  templateUrl: './tasker-profile.component.html',\n  styleUrls: []\n})\nexport class TaskerProfileComponent implements OnInit {\n  @Input() userProfile: UserProfileResult;\n  @ViewChild('chatboxTab') chatboxTab: ElementRef<HTMLElement>;\n  isCurrentUserCanStartConversationWithThisUser: boolean = false;\n  conversationNotAllowed: string = null;\n\n  constructor(private router: Router, private route: ActivatedRoute, private userService: UserService, private appTranslation: AppTranslationService,\n    private alertify: AlertifyService, private authService: AuthService, private messagesService: MessagesService,) { }\n\n  ngOnInit(): void {\n    console.log('Tasker Account');\n    if (!this.userProfile) {\n      this.alertify.warning('يوجد مشكلة في عرض بيانات المستخدم أو لا تملك صلاحية مخوله للوصول الى ملفه');\n      this.router.navigate(['']);\n    } else {\n      this.checkIfCurrentUserCanStartChat();\n    }\n  }\n\n  get isCurrentUserProfile(): boolean {\n    return this.authService.isCurrentUserProfile(this.userProfile.id);\n  }\n\n  checkIfCurrentUserCanStartChat() {\n    if (!this.isCurrentUserProfile) {\n      this.messagesService.checkIfCurrentUserCanStartChatWithTheOtherUser(this.authService.currentUser.id, this.userProfile.id).subscribe(\n        (result: MessageWithObject) => {\n          if (result.data === true)\n            this.isCurrentUserCanStartConversationWithThisUser = true;\n          else\n            this.conversationNotAllowed = result.message;\n        },\n        error => {\n          this.conversationNotAllowed = error;\n          this.isCurrentUserCanStartConversationWithThisUser = false;\n        }\n      );\n    }\n  }\n\n\n  getGenderStyle() {\n    if (<Gender>this.userProfile.gender === <Gender>Gender.male) {\n      return 'text-sky';\n    } else if (<Gender>this.userProfile.gender === <Gender>Gender.female) {\n      return 'text-pink';\n    }\n    else { return '' }\n  }\n\n  showChatBox() {\n    this.chatboxTab.nativeElement.click()\n  }\n\n\n}\n","<app-breadcrumbs title=\"{{'Menu.MyAccount' | translate }}\" currentPageTitle=\"{{userProfile?.fullName}}\"></app-breadcrumbs>\n\n<!-- ======= member profile ======= -->\n<section id=\"profile\" class=\"profile\">\n    <div class=\"container\">\n        <div class=\"row\" id=\"user-profile\">\n            <div class=\"col-lg-3 col-md-4 col-sm-4 p-0\">\n                <div class=\"main-box\">\n                    <h4 class=\"user-name\" [ngClass]=\"getGenderStyle()\">{{userProfile.fullName}}</h4>\n                    <div class=\"profile-status\">\n                        <i class=\"fa fa-check-circle\"></i>&nbsp;{{userProfile?.studentAccountData?.accountStatusName}}\n                    </div>\n\n                    <app-profile-image [UserProfileData]=\"userProfile\"></app-profile-image>\n                    <app-profile-stars [Rating]=\"userProfile?.totalRating\"></app-profile-stars>\n                    <app-since-profile [MemberSince]=\"userProfile?.createdDate\" [LastActivity]=\"userProfile?.lastActive\"></app-since-profile>\n                    <app-jobs-searcher-counters></app-jobs-searcher-counters>\n                    <app-change-user-password *ngIf=\"isCurrentUserProfile\"></app-change-user-password>\n                    <div *ngIf=\"!isCurrentUserProfile\" class=\"profile-message-btn center-block text-center\">\n                        <a class=\"btn btn-success text-white\" (click)=\"showChatBox()\">\n                            <i class=\"fa fa-envelope\"></i> {{'Chatbox.SendMessage' | translate }}\n                        </a>\n                    </div>\n\n                </div>\n            </div>\n\n            <div class=\"col-lg-9 col-md-8 col-sm-8 p-0 px-md-2\">\n                <div class=\"main-box \">\n                    <ul class=\"nav nav-tabs\" id=\"user-tab\" role=\"tablist\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link active\" id=\"about-user-tab\" data-toggle=\"tab\" href=\"#aboutUser\" role=\"tab\" aria-controls=\"about-user-tab\" aria-selected=\"true\">بياناتي</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" id=\"portfolios-tab\" data-toggle=\"tab\" href=\"#portfolios\" role=\"tab\" aria-controls=\"portfolios\" aria-selected=\"false\">معرض أعمالي</a>\n                        </li>\n\n                        <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"ratings-history-tab\" data-toggle=\"tab\" href=\"#ratings-history\" role=\"tab\" aria-controls=\"ratings-history\" aria-selected=\"false\">التقييمات</a>\n                        </li>\n\n                        <li *ngIf=\"!isCurrentUserProfile\" class=\"nav-item\">\n                          <a #chatboxTab class=\"nav-link\" id=\"chatbox-tab\" data-toggle=\"tab\" href=\"#chatbox\" role=\"tab\" aria-controls=\"chatbox\" aria-selected=\"false\">المحادثة</a>\n                        </li>\n                    </ul>\n\n                    <div class=\"tab-content  p-2\" id=\"myTabContent\">\n                        <div class=\"tab-pane fade show active\" id=\"aboutUser\" role=\"tabpanel\" aria-labelledby=\"about-user-tab\">\n                            <div class=\"d-flex justify-content-between align-items-start mb-2\">\n                                <h4 class=\"text-left\"><span class=\"section-header-behind-line behind-line-gray px-2 pb-1\">{{'users.Students.PersonalInfo' | translate }}</span></h4>\n                                <a *ngIf=\"isCurrentUserProfile\" [routerLink]=\"['/profile' , 'tasker', 'edit' ]\" class=\"btn btn-primary btn-sm edit-profile\">\n                                    <i class=\"fa fa-pencil-square fa-lg\"></i> {{'Common.CRUD.Update' | translate }}\n                                </a>\n                            </div>\n                            <app-personal-details [UserProfileData]=\"userProfile\" ></app-personal-details>\n                            <app-member-contact *ngIf=\"userProfile?.displayContactInfo\" [UserProfileData]=\"userProfile\"></app-member-contact>\n                            <app-language-skills [Languages]=\"userProfile?.languages\"></app-language-skills>\n                            <app-user-tasks-list [CurrentUserId]=\"userProfile?.id\" [CityName]=\"userProfile?.cityName\" [UserTasksPrices]=\"userProfile?.favoriteTasks\"></app-user-tasks-list>\n                        </div>\n\n                        <div class=\"tab-pane fade\" id=\"portfolios\" role=\"tabpanel\" aria-labelledby=\"portfolios-tab\">\n                            <app-portfolios-list [IsCurrentUserProfile]=\"isCurrentUserProfile\" [UserPortfolios]=\"userProfile.portfolios\"></app-portfolios-list>\n                        </div>\n\n                        <div class=\"tab-pane fade\" id=\"ratings-history\" role=\"tabpanel\" aria-labelledby=\"ratings-history-tab\">\n                            <app-rating-and-reviews-list [RatingsAndReviews]=\"userProfile.ratingsGot\"></app-rating-and-reviews-list>\n                        </div>\n\n                        <div *ngIf=\"!isCurrentUserProfile\" class=\"tab-pane fade profile-chatbox\" id=\"chatbox\" role=\"tabpanel\" aria-labelledby=\"chatbox-tab\">\n                          <ng-container *ngIf=\"!isCurrentUserCanStartConversationWithThisUser; else conversationBox\">\n                            <div *ngIf=\"conversationNotAllowed\"  class=\"alert alert-danger text-center\" role=\"alert\">{{conversationNotAllowed}}</div>\n                            <div *ngIf=\"!conversationNotAllowed\"  class=\"alert alert-warning text-center\" role=\"alert\"><span class=\"spinner-border spinner-border-sm\" role=\"status\"></span>&nbsp;&nbsp;{{'Common.Data.Loading' | translate}}</div>\n\n                          </ng-container>\n                          <ng-template #conversationBox>\n                            <app-conversation-box [RecipientId]=\"userProfile?.id\" [RecipientGender]=\"userProfile?.gender\"></app-conversation-box>\n                          </ng-template>\n                        </div>\n\n\n                      </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- End member profile -->\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { UserTask } from 'src/app/_models/Users/user-tasks';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { UserTasksService } from 'src/app/_services/users/user-tasks.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\n\n@Component({\n  selector: 'app-modify-my-task',\n  templateUrl: './modify-my-task.component.html',\n  styleUrls: []\n})\nexport class ModifyMyTaskComponent implements OnInit {\n  @Output() updatedSuccessfully: EventEmitter<UserTask> = new EventEmitter<UserTask>();\n  edtUserTaskForm: FormGroup;\n  isSubmitting: boolean = false;\n  userTask: UserTask;\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private userTasksService: UserTasksService,\n    public activeModal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    this.initEdtForm();\n  }\n\n  initEdtForm() {\n    this.edtUserTaskForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      price: [0, [Validators.required, Validators.pattern(RegularExpression.Money)]],\n      description: [''],\n      isEnabled: [this.userTask?.isEnabled ?? false],\n    });\n    if (this.userTask) { this.edtUserTaskForm.patchValue(this.userTask); }\n  }\n\n  get updateValidator() { return this.edtUserTaskForm.controls; }\n\n  editUserTask() {\n    this.edtUserTaskForm.markAllAsTouched();\n    if (this.edtUserTaskForm.valid) {\n      this.edtUserTaskForm.disable();\n      this.isSubmitting = true;\n      Object.assign(this.userTask, this.edtUserTaskForm.value);\n      this.userTasksService.updateUserTask(this.userTask).subscribe(\n        returnUserTask => {\n          this.alertify.success(this.appTranslation.get('Common.Data.SavedSuccessfully'));\n          this.updatedSuccessfully.emit(returnUserTask);\n        },\n        error => {\n          this.alertify.error(error);\n          this.isSubmitting = false;\n          this.edtUserTaskForm.enable();\n        },\n        () => { this.isSubmitting = false; });\n    } else { this.alertify.success(this.appTranslation.get('Common.Data.Invalid')); }\n  }\n\n\n\n}","<!-- start Normal Edt Form Bootstrap NGX Modal Dialog -->\n<div class=\"modal-header\">\n\t<h5 class=\"modal-title\"><span class=\"fa fa-pencil\"></span>&nbsp;{{userTask?.task?.name}}</h5>\n\t<button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"activeModal.close()\">\n\t\t<span aria-hidden=\"true\">&times;</span>\n\t</button>\n</div>\n<div class=\"modal-body\" [formGroup]=\"edtUserTaskForm\">\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold\" >{{'Tasks.Price' | translate }}<strong class=\"text-danger\">*</strong></label>\n\t\t<input type=\"number\" step=\"0.1\" min=\"0.01\" max=\"1000\" class=\"form-control\"  formControlName=\"price\" placeholder= \"0.00 ريال\" [ngClass]=\"{'is-invalid' : updateValidator.price.errors && updateValidator.price.touched}\"  >\n\t\t<div *ngIf=\"updateValidator.price.touched && updateValidator.price.errors\" class=\"invalid-feedback\">\n\t\t\t<div *ngIf=\"updateValidator.price.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n\t\t\t<div *ngIf=\"updateValidator.price.errors.pattern\">{{'Common.Validation.Number' | translate }}</div>\n\t\t</div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend \">\n                <span class=\"input-group-text px-1\">{{'Common.Form.Status' | translate:{'value': 'Tasks.Type' | translate} }}</span>\n            </div>\n            <label class=\"form-control px-1 text-center\">\n                <input id=\"enable\" type=\"radio\" name=\"isEnabled\" [value]=\"true\" formControlName=\"isEnabled\">\n                {{'Common.CRUD.Enabled' | translate }}\n            </label>\n            <label class=\"form-control px-1 text-center\">\n                <input id=\"disable\" type=\"radio\" name=\"isEnabled\" [value]=\"false\" formControlName=\"isEnabled\">\n                {{'Common.CRUD.Disabled' | translate }}\n            </label>\n        </div>\n    </div>\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold\" >{{'Tasks.Description' | translate }}</label>\n\t\t<textarea id=\"txtAddDescription\" name=\"txtAddDescription\" class= \"form-control default\" rows=\"3\"  maxlength=\"250\" formControlName=\"description\" placeholder= \"{{'Common.Form.MaxThreeHundred' | translate:{'value': 'Tasks.Description' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.description.errors && updateValidator.description.touched}\"  ></textarea>\n\t</div>\n</div>\n<div class=\"modal-footer  text-right\">\n\t<button id=\"btnEdtUserTask\" class=\"btn btn-success\" [disabled]=\"isSubmitting\" type=\"button\" (click)=\"editUserTask()\">\n\t\t<i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n\t\t<i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.UpdateData' | translate}}&nbsp;\n\t</button>\n</div>\n<!-- End Normal Edt Form Bootstrap NGX Modal Dialog -->","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { UserTask } from 'src/app/_models/Users/user-tasks';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { UserTasksService } from 'src/app/_services/users/user-tasks.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Task } from 'src/app/_models/settings/task';\nimport { TasksService } from 'src/app/_services/settings/tasks.service';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\n\n@Component({\n  selector: 'app-new-user-task-modal',\n  templateUrl: './new-user-task-modal.component.html',\n  styleUrls: []\n})\nexport class NewUserTaskModalComponent implements OnInit {\n  @Output() addSuccessfully: EventEmitter<UserTask> = new EventEmitter<UserTask>();\n  addUserTaskForm: FormGroup;\n  isSubmitting: boolean = false;\n  tasksList: KeyValuePairResource[] = [];\n  @Input() name;\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private tasksService: TasksService,\n    private userTasksService: UserTasksService,\n    public activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n    this.getAllTasks();\n    this.initAddForm();\n  }\n\n  getAllTasks() {\n    this.tasksService.getTasksAsList().subscribe(\n      (list: KeyValuePairResource[]) => { this.tasksList = list; },\n      error => this.alertify.error(error)\n    );\n  }\n\n  initAddForm() {\n    this.addUserTaskForm = this.formBuilder.group({\n      taskId: [0, Validators.required],\n      price: ['', [Validators.required, Validators.pattern(RegularExpression.Money)]],\n      description: ['']\n    });\n  }\n\n  get addValidator() { return this.addUserTaskForm.controls; }\n\n  addNewUserTask() {\n    this.addUserTaskForm.markAllAsTouched();\n    if (this.addUserTaskForm.valid) {\n      this.addUserTaskForm.disable();\n      this.isSubmitting = true;\n      let newItem: any;\n      newItem = Object.assign({}, this.addUserTaskForm.value);\n      this.userTasksService.addNew(newItem).subscribe(\n        returnUserTask => {\n          this.alertify.success(this.appTranslation.get('Common.Data.SavedSuccessfully'));\n          this.addSuccessfully.emit(returnUserTask);\n        },\n        error => {\n          this.alertify.error(error);\n          this.isSubmitting = false;\n          this.addUserTaskForm.enable();\n        },\n        () => { this.isSubmitting = false; });\n    } else { this.alertify.success(this.appTranslation.get('Common.Data.Invalid')); }\n  }\n}","<!-- start Normal Add Form Bootstrap NGX Modal Dialog -->\n<div class=\"modal-header\">\n\t<h5 class=\"modal-title\"><span class=\"fa fa-plus\"></span>&nbsp;{{'Common.Form.AddFormTitle' | translate:{'value': 'Tasks.Service' | translate} }}</h5>\n\t<button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"activeModal.dismiss()\">\n\t\t<span aria-hidden=\"true\">&times;</span>\n\t</button>\n</div>\n<div class=\"modal-body\" [formGroup]=\"addUserTaskForm\">\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold\" >{{'Tasks.Type' | translate }}<strong class=\"text-danger\">*</strong></label>\n\t\t<select formControlName=\"taskId\" class=\"form-control\" [ngClass]=\"{'is-invalid' : addValidator.taskId.errors && addValidator.taskId.touched }\">\n\t\t\t<option [value]=\"''||0\" disabled>{{'Common.Form.SelectFromMenu' | translate:{'value': 'Tasks.Type' | translate} }}</option>\n\t\t\t<option *ngFor=\"let task of tasksList\" value=\"{{task.id}}\">{{task.name}}</option>\n\t\t</select>\n\t\t<div *ngIf=\"addValidator.taskId.touched && addValidator.taskId.errors\" class=\"invalid-feedback\">\n\t\t\t<div *ngIf=\"addValidator.taskId.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n\t\t</div>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold\" >{{'Tasks.Price' | translate }}<strong class=\"text-danger\">*</strong></label>\n\t\t<input type=\"number\" step=\"0.01\" min=\"0.01\" max=\"1000\" class=\"form-control\"  formControlName=\"price\" placeholder= \"0.00 ريال\" [ngClass]=\"{'is-invalid' : addValidator.price.errors && addValidator.price.touched}\"  >\n\t\t<div *ngIf=\"addValidator.price.touched && addValidator.price.errors\" class=\"invalid-feedback\">\n\t\t\t<div *ngIf=\"addValidator.price.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n\t\t\t<div *ngIf=\"addValidator.price.errors.pattern\">{{'Common.Validation.Number' | translate }}</div>\n\t\t</div>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label id=\"lblCap_txtAddDescription\" for=\"txtAddDescription\" class=\"font-weight-bold\" >{{'Tasks.Description' | translate }}</label>\n\t\t<textarea id=\"txtAddDescription\" name=\"txtAddDescription\" class= \"form-control default\" rows=\"3\"  maxlength=\"250\" formControlName=\"description\" placeholder= \"{{'Common.Form.MaxThreeHundred' | translate:{'value': 'Tasks.Description' | translate} }}\" [ngClass]=\"{'is-invalid' : addValidator.description.errors && addValidator.description.touched}\"  ></textarea>\n\t</div>\n</div>\n<div class=\"modal-footer  text-right\">\n\t<button id=\"btnAddUserTask\" class=\"btn btn-info\" [disabled]=\"isSubmitting\" type=\"button\" (click)=\"addNewUserTask()\">\n\t\t<i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n\t\t<i *ngIf=\"!isSubmitting\" class=\"fa fa-plus-circle\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.Add' | translate}}&nbsp;\n\t</button>\n</div>\n<!-- End Normal Add Form Bootstrap NGX Modal Dialog -->\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserTask } from 'src/app/_models/Users/user-tasks';\nimport { Column, Pagination, PaginationResult } from 'src/app/_models/data/Pagination';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService, ConfirmResult } from 'src/app/_helpers/Alertify';\nimport { UserTasksService } from 'src/app/_services/users/user-tasks.service';\nimport { NgbPopover, NgbModal, NgbModalRef, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { NewUserTaskModalComponent } from '../new-user-task-modal/new-user-task-modal.component';\nimport { ModifyMyTaskComponent } from '../modify-my-task/modify-my-task.component';\nimport { OrderTaskerModalComponent } from 'src/app/components/tasks/order-tasker-modal/order-tasker-modal.component';\n\n@Component({\n  selector: 'app-user-tasks-list',\n  templateUrl: './user-tasks-list.component.html',\n  styleUrls: []\n})\nexport class UserTasksListComponent implements OnInit {\n  @Input('UserTasksPrices') userTasks: UserTask[];\n  @Input('CityName') cityName: string;\n  @Input('CurrentUserId') currentUserId: number;\n  addModalRef: NgbModalRef | null;\n  edtModalRef: NgbModalRef | null;\n  orderModalRef: NgbModalRef | null;\n\n  columns: Column[] = <Column[]>[\n    { title: this.appTranslation.get('Tasks.Type'), align: 'center', key: 'taskId' },\n    { title: this.appTranslation.get('Tasks.Price'), align: 'center', key: 'price' },\n    // { title: this.appTranslation.get('Tasks.IsEnabled'), align: 'center', key: 'isEnabled' },\n    {}\n  ];\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private modalService: NgbModal,\n    private userTasksService: UserTasksService, private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  changeUserTaskStatus(userTask: any, checkboxInput: any) {\n    this.userTasksService.changeUserTaskStatus(userTask.id, checkboxInput.currentTarget.checked).subscribe(\n      result => {\n        this.alertify.info('تم تغيير الحالة بنجاح');\n        userTask.isEnabled = result;\n      },\n      error => { this.alertify.error(error); }\n    );\n  }\n\n  async removeUserTask(id: number) {\n    const confirm = await this.alertify.promisifyConfirm(`تنبيه على أنت على وشك حذف سجل`, `هل أنت متأكد من الحذف؟`);\n    if (confirm === ConfirmResult.Ok) {\n      this.userTasksService.removeUserTask(id).subscribe(\n        () => {\n          this.alertify.info('تم الحذف بنجاح');\n          this.userTasks.splice(this.userTasks.findIndex(e => e.id === id), 1);\n        },\n        error => { this.alertify.error(error); }\n      );\n    }\n  }\n\n  toggleMoreInfo(popover: NgbPopover, vUserTask: UserTask) {\n    if (popover.isOpen()) { popover.close(); } else {\n      popover.placement = 'auto';\n      popover.open({ vUserTask });\n    }\n  }\n\n  get isCurrentUserProfile(): boolean {\n    return this.authService.isCurrentUserProfile(this.currentUserId);\n  }\n\n  showUserTaskAddModal() {\n    const config: NgbModalOptions = {\n      backdrop: 'static',\n      size: 'lg',\n      keyboard: false,\n    };\n    this.addModalRef = this.modalService.open(NewUserTaskModalComponent, config);\n    this.addModalRef.componentInstance.name = 'World';\n    this.addModalRef.componentInstance.addSuccessfully.subscribe((newUserTask: UserTask) => {\n      this.addNewUserTaskToUserTasksList(newUserTask);\n      this.addModalRef.close();\n    });\n  }\n\n  addNewUserTaskToUserTasksList(newUserTask: UserTask) {\n    if (newUserTask) {\n      this.userTasks.unshift(newUserTask);\n    }\n  }\n\n  getUserTaskToEdit(currentUserTask: UserTask) {\n    this.userTasksService.getUserTask(currentUserTask.id).subscribe(\n      (result: UserTask) => {\n        this.showUserTaskEditModal(currentUserTask, result);\n      },\n      error => this.alertify.error(error)\n    );\n  }\n\n  showUserTaskEditModal(currentUserTask: UserTask, apiUserTask: UserTask) {\n    const config: NgbModalOptions = {\n      backdrop: 'static',\n      size: 'lg',\n      keyboard: false,\n    };\n    this.edtModalRef = this.modalService.open(ModifyMyTaskComponent, config);\n    this.edtModalRef.componentInstance.userTask = apiUserTask;\n    this.edtModalRef.componentInstance.updatedSuccessfully.subscribe((updatedUserTask: UserTask) => {\n      this.edtModalRef.close();\n      this.applyChangedUserTask(currentUserTask, updatedUserTask);\n    });\n  }\n\n  applyChangedUserTask(currentUserTask: UserTask, updatedUserTask: UserTask) {\n    if (updatedUserTask) {\n      Object.assign(currentUserTask, updatedUserTask);\n    }\n  }\n\n\n  showUserTaskOrderModal(apiUserTask: UserTask) {\n    const config: NgbModalOptions = {\n      backdrop: 'static',\n      size: 'lg',\n      keyboard: false,\n    };\n    this.orderModalRef = this.modalService.open(OrderTaskerModalComponent, config);\n    this.orderModalRef.componentInstance.userTask = apiUserTask;\n    this.orderModalRef.componentInstance.cityName = this.cityName;\n    this.orderModalRef.componentInstance.orderSuccessfully.subscribe((updatedUserTask: UserTask) => {\n      this.orderModalRef.close();\n    });\n  }\n\n\n\n}","<div class=\"row my-0\">\n    <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n        <span class=\"section-header-behind-line profile-head-line px-2\">{{'Tasks.UserTasks' | translate }}</span>\n        <button type=\"button\" *ngIf=\"isCurrentUserProfile\" class=\"btn btn-success btn-sm action-btn pull-right\" (click)=\"showUserTaskAddModal()\">\n            <i class=\"fa fa-plus-circle\"></i>&nbsp;{{'Common.CRUD.Add' | translate }}\n        </button>\n    </h4>\n\n    <ng-container *ngIf=\"userTasks?.length > 0; else nothingTemplate\">\n        <ul class=\"list-group list-group-flush w-100 p-0 mt-3\" >\n            <li class=\"list-group-item py-1 mb-1\" *ngFor=\"let userTask of userTasks; let i = index;\">\n                <div class=\"form-group row my-0\" >\n                    <div class=\"col-12 col-lg-9\">\n                        <h5 [ngClass]=\"!userTask.isEnabled ? 'text-secondary': 'text-info'\"><i class=\"fa fa-check-circle-o\"></i>&nbsp;&nbsp;{{userTask.task?.name}}\n                         <span class=\"badge badge-secondary\" *ngIf=\"isCurrentUserProfile\" >{{userTask.price| number:'1.1-2'}}&nbsp;{{'Common.Form.SaudiRiyal' | translate }}</span></h5>\n                        <p [ngClass]=\"{'text-secondary': !userTask.isEnabled }\">{{userTask?.description}}</p>\n                    </div>\n                    <div class=\"col-12 col-lg-3 text-center\">\n                        <button *ngIf=\"!isCurrentUserProfile\" type=\"button\" [disabled]=\"!userTask.isEnabled\" (click)=\"showUserTaskOrderModal(userTask)\" class=\"btn btn-primary btn-block px-1\" ><span>{{'Tasks.SelectService' | translate }}</span><br>&nbsp;{{userTask.price| number:'1.1-2'}}&nbsp;{{'Common.Form.SaudiRiyal' | translate }}</button>\n                        <button *ngIf=\"isCurrentUserProfile\" type=\"button\" (click)=\"getUserTaskToEdit(userTask)\" class=\"btn btn-success px-1\" >{{'Common.CRUD.Update' | translate }}</button>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </ng-container>\n    <ng-template #nothingTemplate>\n        <p class=\"form-control-plaintext text-break text-secondary text-center pt-0\">{{'Common.Messages.NoRecordWasAdded' | translate:{'value': 'Tasks.Service' | translate} }}</p>\n    </ng-template>\n</div>\n\n<!-- \n<div class=\"row\" >\n    <h4 class=\"profile-horizontal-Line text-left px-2 my-3\">\n        <span class=\"section-header-behind-line profile-head-line px-2\">{{'Tasks.UserTasks' | translate }}</span>\n        <button type=\"button\" *ngIf=\"isCurrentUserProfile()\" class=\"btn btn-success btn-sm action-btn pull-right\" (click)=\"showUserTaskAddModal()\">\n            <i class=\"fa fa-plus-circle\"></i>&nbsp;{{'Common.CRUD.Add' | translate }}\n        </button>\n    </h4>\n\n    <div class=\"table-responsive\">\n\n        <table class=\"table table-sm table-light\">\n            <thead *ngIf=\"userTasks?.length\">\n                <tr>\n                    <th *ngFor=\"let c of columns\" class=\"{{c.style}}\">\n                        <div *ngIf=\"c.isSortable\" class=\"align-middle text-{{c.align}}\" >{{ c.title }}</div>\n                        <div *ngIf=\"!c.isSortable\" class=\"align-middle text-{{c.align}}\">{{ c.title }}</div>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngIf=\"!userTasks?.length\">\n                    <th colspan='100%' class=\"text-center text-secondary\" ><span class=\"mb-2\">{{'Common.Messages.NoRecordWasAdded' | translate:{'value': 'Tasks.Service' | translate} }}</span></th>\n                </tr>\n                <ng-container *ngFor=\"let userTask of userTasks\">\n                    <tr [ngClass]=\"{'text-secondary': !userTask.isEnabled }\" class=\"profile-details\">\n                        <td class=\"align-middle text-left\" [ngClass]=\"{'text-info': userTask.isEnabled }\"><strong>{{userTask.task?.name}}</strong></td>\n                        <td class=\"align-middle text-center\">{{userTask.price| number:'1.1-2'}}&nbsp;{{'Common.Form.SaudiRiyal' | translate }}</td>\n                        <td class=\"align-middle text-right\">\n                            <div class=\"btn-group  btn-sm\" role=\"group\" aria-label=\"...\">\n                                <button type=\"button\" class=\"link link-outline-danger btn-sm\" title=\"Delete\" (click)=\"removeUserTask(userTask.id)\"><i class=\"fa fa-trash\"></i></button>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr [ngClass]=\"{'text-secondary': !userTask.isEnabled }\">\n                        <td colspan='100%' class=\"text-left\" ><span class=\"mb-2\">{{userTask?.description}}</span></td>\n                    </tr>\n                </ng-container>\n                \n\n            </tbody>\n        </table>\n    </div>\n</div>\n\n\n<ng-template #popTitle let-vUserTask=\"vUserTask\">{{'Common.Data.MoreInformations' | translate }}</ng-template> \n<ng-template #popContent let-vUserTask=\"vUserTask\">\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold text-info\" >{{'UserTasks.Price' | translate }}&nbsp;:</label>\n\t\t<p class=\"form-control-Static\">{{vUserTask.price}}</p>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold text-info\" >{{'UserTasks.Description' | translate }}&nbsp;:</label>\n\t\t<p class=\"form-control-Static\">{{vUserTask.description}}</p>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label class=\"font-weight-bold text-info\" >{{'UserTasks.IsEnabledCHeader' | translate }}&nbsp;:</label>\n\t\t<p class=\"form-control-Static\">{{vUserTask.isEnabled}}</p>\n\t</div>\n</ng-template>  -->","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { zip } from 'rxjs';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { HijriCalenderService } from 'src/app/_helpers/date-and-time/hijri-calender.service';\nimport { RegularExpression } from 'src/app/_helpers/RegularExpression/RegularExpression';\nimport { KeyValuePairResource } from 'src/app/_models/data/key-value-pair-resource';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { VisitorAccountUpdate } from 'src/app/_models/Users/visitor-account';\nimport { LocationsService } from 'src/app/_services/settings/locations.service';\nimport { VisitorAccountsService } from 'src/app/_services/users/visitor-accounts.service';\nimport { VisitorAccountForEdit } from '../../models/visitor-account';\n\n@Component({\n  selector: 'app-modify-visitor-profile',\n  templateUrl: './modify-visitor-profile.component.html',\n  styleUrls: []\n})\nexport class ModifyVisitorProfileComponent implements OnInit {\n  isLoadingOptions = true;\n  citiesOptions: KeyValuePairResource[] = [];\n  languagesOptions: KeyValuePairResource[] = [];\n\n  visitorAccount: VisitorAccountForEdit;\n  maxDate: any;\n  public GenderEnum = Gender;\n  edtVisitorAccountForm: FormGroup;\n  isSubmitting: boolean = false;\n  citiesList: KeyValuePairResource[] = [];\n\n  constructor(private appTranslation: AppTranslationService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n\n    private locationsService: LocationsService,\n    private router: Router,\n    private visitorAccountsService: VisitorAccountsService,\n  ) {\n    this.maxDate = HijriCalenderService.getToday(-17);\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.visitorAccount = data['user'];\n    });\n    this.initEdtForm();\n    this.getAllDefualtsValues();\n  }\n\n  getAllDefualtsValues() {\n    zip(\n      this.locationsService.getCitiesList(),\n    ).subscribe(\n      ([locations]) => {\n        this.citiesOptions = locations;\n      },\n      error => { this.alertify.error(error); },\n      () => {\n        this.isLoadingOptions = false;\n        this.enableAllControls();\n      }\n    );\n  }\n\n  initEdtForm() {\n    this.edtVisitorAccountForm = this.formBuilder.group({\n      id: [this.visitorAccount.id, Validators.required],\n      arFirstName: [this.visitorAccount.firstName ?? '', Validators.required],\n      arLastName: [this.visitorAccount.lastName ?? '', Validators.required],\n      enFullName: [this.visitorAccount.enFullName ?? '', [Validators.required]],\n      gender: [this.visitorAccount.gender ?? '', Validators.required],\n      cityId: [{ value: this.visitorAccount.cityId ?? '', disabled: true }, Validators.required],\n      birthDay: [HijriCalenderService.dateToNgbDateOrNull(this.visitorAccount.birthDay) ?? null],\n      instagram: [this.visitorAccount.socialMediaAccounts?.instagram ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      linkedin: [this.visitorAccount.socialMediaAccounts?.linkedin ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      twitter: [this.visitorAccount.socialMediaAccounts?.twitter ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)],\n      facebook: [this.visitorAccount.socialMediaAccounts?.facebook ?? null, Validators.pattern(RegularExpression.SocialMediaAccounts)]\n    });\n  }\n\n  enableAllControls() {\n    this.edtVisitorAccountForm.controls.cityId.enable();\n  }\n\n  get updateValidator() { return this.edtVisitorAccountForm.controls; }\n\n  editVisitorAccount() {\n    // console.log(this.edtVisitorAccountForm.value);\n    // console.log(\"Invalid Controls:\", this.findInvalidControls());\n    this.edtVisitorAccountForm.valid;\n    if (this.edtVisitorAccountForm.valid) {\n      this.isSubmitting = true;\n      this.edtVisitorAccountForm.disable();\n      var updatedVisitorAccount = {} as VisitorAccountUpdate;\n      Object.assign(updatedVisitorAccount, this.edtVisitorAccountForm.value);\n      updatedVisitorAccount.birthDay = HijriCalenderService.tryConvertGregorianToDate(this.edtVisitorAccountForm.controls.birthDay.value);\n      this.visitorAccountsService.updateVisitorAccount(this.visitorAccount.id, updatedVisitorAccount).subscribe(\n        returnVisitorAccount => {\n          this.alertify.success(this.appTranslation.get('Common.Messages.UpdatedSuccessfully'));\n          this.router.navigate(['/profile']);\n        },\n        error => { this.alertify.error(error); this.isSubmitting = false; this.edtVisitorAccountForm.enable(); },\n        () => { });\n    } else {\n      this.alertify.warning(this.appTranslation.get('Common.Data.Invalid'));\n      this.edtVisitorAccountForm.markAllAsTouched();\n      this.isSubmitting = false;\n    }\n  }\n\n  // console.log(\"Invalid Controls:\", this.findInvalidControls());\n  // public findInvalidControls() {\n  //   const invalid = [];\n  //   const controls = this.edtVisitorAccountForm.controls;\n  //   for (const name in controls) {\n  //     if (controls[name].invalid) {\n\n  //       console.log(controls[name].errors);\n  //       invalid.push(name);\n  //     }\n  //   }\n  //   return invalid;\n  // }\n\n}\n","<app-breadcrumbs title=\"{{visitorAccount.fullName || visitorAccount.enFullName }}\" currentPageTitle=\"{{visitorAccount.fullName || visitorAccount.enFullName }}\"></app-breadcrumbs>\n\n<article id=\"profile\" class=\"content\">\n    <div class=\"container\">\n        <!-- start Normal Edt BootStrap Form -->\n\n        <form [formGroup]=\"edtVisitorAccountForm\" (ngSubmit)=\"editVisitorAccount()\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-5\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'users.Profile.GeneralInfo' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.FirstName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                            <input class=\"form-control\"  maxlength=\"70\" formControlName=\"arFirstName\" placeholder= \"{{'users.Students.FirstName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arFirstName.errors && updateValidator.arFirstName.touched}\"  >\n                            <div *ngIf=\"updateValidator.arFirstName.touched && updateValidator.arFirstName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.arFirstName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <label class=\"font-weight-bold\" >{{'users.Students.LastName' | translate }}<strong class=\"text-danger\">*</strong></label>\n                            <input class=\"form-control\"  maxlength=\"70\" formControlName=\"arLastName\" placeholder= \"{{'users.Students.LastName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.arLastName.errors && updateValidator.arLastName.touched}\"  >\n                            <div *ngIf=\"updateValidator.arLastName.touched && updateValidator.arLastName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.arLastName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\">{{'users.Students.EnFullName' | translate }}<strong class=\"text-danger\">*</strong></span>\n                            </div>\n                            <input class=\"form-control\"  maxlength=\"40\" formControlName=\"enFullName\" placeholder= \"{{'users.Students.EnFullName' | translate }}\" [ngClass]=\"{'is-invalid' : updateValidator.enFullName.errors && updateValidator.enFullName.touched}\"  >\n                            <div *ngIf=\"updateValidator.enFullName.touched && updateValidator.enFullName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"updateValidator.enFullName.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-building\"></i>&nbsp;{{'users.Students.City' | translate }}<strong class=\"text-danger\">*</strong></span>\n                                </div>\n                                <select formControlName=\"cityId\" class=\"form-control\" [ngClass]=\"{'is-invalid' : updateValidator.cityId.errors && updateValidator.cityId.touched }\">\n                                    <option value=\"0\" disabled>{{'Common.Form.ChooseFromMenu' | translate }}</option>\n                                    <option *ngFor=\"let city of citiesOptions\" value=\"{{city.id}}\">{{city.name}}</option>\n                                </select>\n                                <div *ngIf=\"updateValidator.cityId.touched && updateValidator.cityId.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.cityId.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend \">\n                                    <span class=\"input-group-text px-1\">{{'users.Students.Gender' | translate }}<strong class=\"text-danger\">*</strong></span>\n                                </div>\n                                <label class=\"form-control px-1 text-center\">\n                                  <input id=\"male\" type=\"radio\" name=\"gender\" [value]=\"1\" formControlName=\"gender\">\n                                  <i class=\"fa fa-lg fa-male text-sky px-1\"></i>{{'Signup.IAmMan' | translate }}\n                                </label>\n                                <label class=\"form-control px-1 text-center\">\n                                    <input id=\"female\" type=\"radio\" name=\"gender\" [value]=\"2\" formControlName=\"gender\">\n                                    <i class=\"fa fa-lg fa-female text-pink px-1\"></i>{{'Signup.IAmWoman' | translate }}\n                                </label>\n                                <div *ngIf=\"updateValidator.gender.touched && updateValidator.gender.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.gender.errors.required\">{{'Common.Validation.Required' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                   <span class=\"input-group-text\">{{'users.Students.BirthDay' | translate }}</span>\n                                </div>\n                                <input ngbDatepicker #birthDayDatepicker=\"ngbDatepicker\" [maxDate]=\"maxDate\" [minDate]=\"{year: 1950, month: 1, day: 1}\" [firstDayOfWeek]=\"0\" class=\"form-control\"  formControlName=\"birthDay\" readonly (click)=\"birthDayDatepicker?.toggle()\">\n                                <div class=\"input-group-append\">\n                                    <button class=\"btn btn-outline-secondary calendar\" (click)=\"birthDayDatepicker?.toggle()\" type=\"button\"><i class=\"fa fa-calendar\"></i></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <h4 class=\"profile-horizontal-Line text-left px-2 mb-4\">\n                        <span class=\"section-header-behind-line profile-head-line px-2\">{{'SocialMedias.Title' | translate }}</span>\n                    </h4>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-instagram\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"instagram\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Instagram' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.instagram.errors && updateValidator.instagram.touched}\"  >\n                                <div *ngIf=\"updateValidator.instagram.touched && updateValidator.instagram.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.instagram.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-linkedin-square\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"linkedin\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Linkedin' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.linkedin.errors && updateValidator.linkedin.touched}\"  >\n                                <div *ngIf=\"updateValidator.linkedin.touched && updateValidator.linkedin.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.linkedin.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-twitter\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"twitter\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Twitter' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.twitter.errors && updateValidator.twitter.touched}\"  >\n                                <div *ngIf=\"updateValidator.twitter.touched && updateValidator.twitter.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.twitter.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-lg-6\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><span class=\"fa fa-facebook-square\"></span></span>\n                                </div>\n                                <input class=\"form-control\"  formControlName=\"facebook\" placeholder= \"{{'SocialMedias.PlaceHolder' | translate:{'value': 'SocialMedias.Facebook' | translate} }}\" [ngClass]=\"{'is-invalid' : updateValidator.facebook.errors && updateValidator.facebook.touched}\"  >\n                                <div *ngIf=\"updateValidator.facebook.touched && updateValidator.facebook.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"updateValidator.facebook.errors.pattern\">{{'SocialMedias.RegularExpression' | translate }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer text-right\">\n                    <button class=\"btn btn-success\"  type=\"submit\" [disabled]=\"isSubmitting\">\n                        <i *ngIf=\"isSubmitting\" class='fa fa-circle-o-notch fa-spin'></i>&nbsp;{{!isSubmitting ? '' : 'Common.Data.SendingData'  | translate }}\n                        <i *ngIf=\"!isSubmitting\" class=\"fa fa-save\" ></i>&nbsp;{{isSubmitting ? '' : 'Common.CRUD.UpdateData' | translate}}&nbsp;\n                    </button>\n                    <!-- [disabled]=\"isSubmitting || !edtVisitorAccountForm.valid\" -->\n                </div>\n            </div>\n        </form><!-- End Normal Edt BootStrap Form -->\n    </div>\n</article>\n\n\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { UserProfileResult } from 'src/app/_models/Users/user-profile-result';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/_services/users/User.service';\nimport { AppTranslationService } from 'src/app/_helpers/app-translation';\nimport { AlertifyService } from 'src/app/_helpers/Alertify';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { Gender } from 'src/app/_models/Users/user-for-register';\nimport { MessageWithObject } from 'src/app/_models/data/actions-result';\nimport { MessagesService } from 'src/app/_services/chats/messages.service';\n\n@Component({\n  selector: 'app-visitor-profile',\n  templateUrl: './visitor-profile.component.html',\n  styleUrls: []\n})\nexport class VisitorProfileComponent implements OnInit {\n  @Input() userProfile: UserProfileResult;\n  @ViewChild('chatboxTab') chatboxTab: ElementRef<HTMLElement>;\n  isCurrentUserCanStartConversationWithThisUser: boolean = false;\n  conversationNotAllowed: string = null;\n\n  constructor(private router: Router, private route: ActivatedRoute, private userService: UserService, private appTranslation: AppTranslationService,\n    private alertify: AlertifyService, private authService: AuthService, private messagesService: MessagesService) { }\n\n  ngOnInit(): void {\n    console.log('Student Account');\n    if (!this.userProfile) {\n      this.alertify.warning('يوجد مشكلة في عرض بيانات المستخدم أو لا تملك صلاحية مخوله للوصول الى ملفه');\n      this.router.navigate(['']);\n    } else {\n      this.checkIfCurrentUserCanStartChat();\n    }\n  }\n\n  get isCurrentUserProfile(): boolean {\n    return this.authService.isCurrentUserProfile(this.userProfile.id);\n  }\n\n\n  checkIfCurrentUserCanStartChat() {\n    if (!this.isCurrentUserProfile) {\n      this.messagesService.checkIfCurrentUserCanStartChatWithTheOtherUser(this.authService.currentUser.id, this.userProfile.id).subscribe(\n        (result: MessageWithObject) => {\n          if (result.data === true)\n            this.isCurrentUserCanStartConversationWithThisUser = true;\n          else\n            this.conversationNotAllowed = result.message;\n        },\n        error => {\n          this.conversationNotAllowed = error;\n          this.isCurrentUserCanStartConversationWithThisUser = false;\n        }\n      );\n    }\n  }\n\n\n  getGenderStyle() {\n    if (<Gender>this.userProfile.gender === <Gender>Gender.male) {\n      return 'text-sky';\n    } else if (<Gender>this.userProfile.gender === <Gender>Gender.female) {\n      return 'text-pink';\n    }\n    else { return '' }\n  }\n\n  showChatBox() {\n    this.chatboxTab.nativeElement.click()\n  }\n\n}\n","<app-breadcrumbs title=\"{{'Menu.MyAccount' | translate }}\" currentPageTitle=\"{{userProfile?.fullName}}\"></app-breadcrumbs>\n\n<!-- ======= member profile ======= -->\n<section id=\"profile\" class=\"profile\">\n    <div class=\"container\">\n        <div class=\"row\" id=\"user-profile\">\n            <div class=\"col-lg-3 col-md-4 col-sm-4 p-0\">\n                <div class=\"main-box\">\n                    <h4 class=\"user-name\" [ngClass]=\"getGenderStyle()\">{{userProfile.fullName}}</h4>\n                    <div class=\"profile-status\">\n                        <i class=\"fa fa-check-circle\"></i>&nbsp;{{userProfile?.studentAccountData?.accountStatusName}}\n                    </div>\n\n                    <app-profile-image [UserProfileData]=\"userProfile\"></app-profile-image>\n                    <app-profile-stars [Rating]=\"userProfile?.totalRating\"></app-profile-stars>\n                    <app-since-profile [MemberSince]=\"userProfile?.createdDate\" [LastActivity]=\"userProfile?.lastActive\"></app-since-profile>\n                    <app-jobs-searcher-counters></app-jobs-searcher-counters>\n\n                    <div *ngIf=\"!isCurrentUserProfile\" class=\"profile-message-btn center-block text-center\">\n                        <a class=\"btn btn-success text-white\" (click)=\"showChatBox()\">\n                            <i class=\"fa fa-envelope\"></i> {{'Chatbox.SendMessage' | translate }}\n                        </a>\n                    </div>\n\n                </div>\n            </div>\n\n            <div class=\"col-lg-9 col-md-8 col-sm-8 p-0 px-md-2\">\n                <div class=\"main-box \">\n                    <ul class=\"nav nav-tabs\" id=\"user-tab\" role=\"tablist\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link active\" id=\"about-user-tab\" data-toggle=\"tab\" href=\"#aboutUser\" role=\"tab\" aria-controls=\"about-user-tab\" aria-selected=\"true\">بياناتي</a>\n                        </li>\n\n                        <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"ratings-history-tab\" data-toggle=\"tab\" href=\"#ratings-history\" role=\"tab\" aria-controls=\"ratings-history\" aria-selected=\"false\">التقييمات</a>\n                        </li>\n\n                        <li *ngIf=\"!isCurrentUserProfile\" class=\"nav-item\">\n                          <a #chatboxTab class=\"nav-link\" id=\"chatbox-tab\" data-toggle=\"tab\" href=\"#chatbox\" role=\"tab\" aria-controls=\"chatbox\" aria-selected=\"false\">المحادثة</a>\n                        </li>\n                    </ul>\n\n                    <div class=\"tab-content  p-2\" id=\"myTabContent\">\n                        <div class=\"tab-pane fade show active\" id=\"aboutUser\" role=\"tabpanel\" aria-labelledby=\"about-user-tab\">\n                            <div class=\"d-flex justify-content-between align-items-start mb-2\">\n                                <h4 class=\"text-left\"><span class=\"section-header-behind-line behind-line-gray px-2 pb-1\">{{'users.Students.PersonalInfo' | translate }}</span></h4>\n                                <a *ngIf=\"isCurrentUserProfile\" [routerLink]=\"['/profile' , 'visitor', 'edit' ]\" class=\"btn btn-primary btn-sm edit-profile\">\n                                    <i class=\"fa fa-pencil-square fa-lg\"></i> {{'Common.CRUD.Update' | translate }}\n                                </a>\n                            </div>\n                            <app-personal-details [UserProfileData]=\"userProfile\" ></app-personal-details>\n                            <app-member-contact *ngIf=\"userProfile?.displayContactInfo\" [UserProfileData]=\"userProfile\"></app-member-contact>\n                        </div>\n\n                        <div class=\"tab-pane fade\" id=\"ratings-history\" role=\"tabpanel\" aria-labelledby=\"ratings-history-tab\">\n                            <app-rating-and-reviews-list [RatingsAndReviews]=\"userProfile.ratingsGot\"></app-rating-and-reviews-list>\n                        </div>\n\n                        <div *ngIf=\"!isCurrentUserProfile\" class=\"tab-pane fade profile-chatbox\" id=\"chatbox\" role=\"tabpanel\" aria-labelledby=\"chatbox-tab\">\n                          <ng-container *ngIf=\"!isCurrentUserCanStartConversationWithThisUser; else conversationBox\">\n                            <div *ngIf=\"conversationNotAllowed\"  class=\"alert alert-danger text-center\" role=\"alert\">{{conversationNotAllowed}}</div>\n                            <div *ngIf=\"!conversationNotAllowed\"  class=\"alert alert-warning text-center\" role=\"alert\"><span class=\"spinner-border spinner-border-sm\" role=\"status\"></span>&nbsp;&nbsp;{{'Common.Data.Loading' | translate}}</div>\n\n                          </ng-container>\n                          <ng-template #conversationBox>\n                            <app-conversation-box [RecipientId]=\"userProfile?.id\" [RecipientGender]=\"userProfile?.gender\"></app-conversation-box>\n                          </ng-template>\n                        </div>\n\n                      </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<!-- End member profile -->\n"],"names":[],"sourceRoot":"webpack:///"}